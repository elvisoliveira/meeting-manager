{"mappings":"A,S,e,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,uB,C,E,O,G,E,U,C,E,O,C,C,C,I+CyCI,0CCzCJ,0CCAA,0CGAA,0CEaA,0C,e,W,gB,C,E,c,C,E,c,e,iB,A,O,gB,A,C,c,S,C,E,G,K,gB,O,e,C,E,C,O,C,G,K,c,C,I,E,a,C,E,A,Q,a,C,E,C,I,E,C,G,E,Q,C,C,E,O,e,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,a,C,E,C,C,E,e,iB,C,e,I,e,c,Q,CPDA,SAAS,0CAAiB,CAAO,EAC/B,OAAO,IAAI,QAAQ,SAAU,CAAO,CAAE,CAAM,EAE1C,EAAQ,UAAU,CAAG,EAAQ,SAAS,CAAG,WACvC,OAAO,EAAQ,EAAQ,MAAM,CAC/B,EAGA,EAAQ,OAAO,CAAG,EAAQ,OAAO,CAAG,WAClC,OAAO,EAAO,EAAQ,KAAK,CAC7B,CACF,EACF,CAEA,SAAS,0CAAY,CAAM,CAAE,CAAS,EACpC,IAAI,EAAU,UAAU,IAAI,CAAC,EAE7B,CAAA,EAAQ,eAAe,CAAG,WACxB,OAAO,EAAQ,MAAM,CAAC,iBAAiB,CAAC,EAC1C,EAEA,IAAI,EAAM,0CAAiB,GAC3B,OAAO,SAAU,CAAM,CAAE,CAAQ,EAC/B,OAAO,EAAI,IAAI,CAAC,SAAU,CAAE,EAC1B,OAAO,EAAS,EAAG,WAAW,CAAC,EAAW,GAAQ,WAAW,CAAC,GAChE,EACF,CACF,CAIA,SAAS,wCAKP,OAJK,2CACH,CAAA,0CAAsB,0CAAY,eAAgB,SADpD,EAIO,yCACT,CASA,SAAS,0CAAI,CAAG,EACd,IAAI,EAAc,UAAU,MAAM,CAAG,GAAK,AAAiB,KAAA,IAAjB,SAAS,CAAC,EAAE,CAAiB,SAAS,CAAC,EAAE,CAAG,wCACtF,OAAO,EAAY,WAAY,SAAU,CAAK,EAC5C,OAAO,0CAAiB,EAAM,GAAG,CAAC,GACpC,EACF,CAUA,SAAS,0CAAI,CAAG,CAAE,CAAK,EACrB,IAAI,EAAc,UAAU,MAAM,CAAG,GAAK,AAAiB,KAAA,IAAjB,SAAS,CAAC,EAAE,CAAiB,SAAS,CAAC,EAAE,CAAG,wCACtF,OAAO,EAAY,YAAa,SAAU,CAAK,EAE7C,OADA,EAAM,GAAG,CAAC,EAAO,GACV,0CAAiB,EAAM,WAAW,CAC3C,EACF,C,e,Q,S,M,C,O,E,I,O,c,S,O,c,S,iC,O,M,E7C/EA,A;;;;;;;;;;;;;;;;;;;;C,EAAA,SAAA,CAAA,CAAA,CAAA,EAEA,OAAA,OAAA,CAAA,EAAA,QAAA,CAAA,GAOA,EAAA,WAAA,IACA,AAAA,CAAA,K,I,oB,E,C,E,K,O,c,C,E,a,C,M,C,C,G,E,c,C,E,I,C,E,qB,C,E,2B,C,E,iB,C,E,mB,C,E,iB,C,E,c,C,E,iB,C,E,iB,C,E,mB,C,E,G,C,E,mB,C,E,uB,C,E,W,C,E,mB,C,E,mB,C,E,S,C,E,e,C,E,W,C,E,W,C,E,oB,C,E,uB,C,E,mB,C,E,a,C,E,e,C,E,c,C,E,mB,C,E,gB,C,E,c,C,E,c,C,E,mB,C,E,oB,C,E,sB,C,E,0B,C,E,yB,C,E,yB,C,E,c,C,K,E,E,M,C,E,E,a,C,E,E,sB,C,E,E,mB,C,G,E,O,C,G,E,iB,C,E,E,I,C,E,E,a,C,G,E,Y,C,G,E,Q,C,K,E,E,gB,C,G,E,a,C,E,E,U,C,E,E,iB,C,E,E,M,C,E,E,Q,C,E,E,a,C,E,E,iB,C,G,E,kB,C,G,E,W,C,E,E,kB,C,G,E,I,C,ECUA,IAAM+H,EAEJ,AAAmB,UAAnB,OAAO4iH,QACPA,OAAU,IAAO,oBACjB,CAACA,OAAQ/hH,QAAR,CAAiBC,EAHlB,EAIA,CAAE8hH,CAAAA,OAAQ/hH,QAAR,CAAiBE,QAAjB,EAA6B6hH,OAAQ5hH,IAArC,EAA6C4hH,AAAiB,YAAjBA,OAAQ5hH,IAAR,AAAiB,CAzBlErH,CAAAA,EAAAA,QAAA,CAAAqG,EA2BA,IAAM7B,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAxC,AA3BAxE,CAAAA,EAAAA,eAAA,CAAAwE,EA4BA,IAAMG,EAAuB,CAAC,KAAO,EAAG,EAAG,KAAO,EAAG,EAArD,AA5BA3E,CAAAA,EAAAA,oBAAA,CAAA2E,EA8BA,IAAMR,EAA0B,GA9BhCnE,CAAAA,EAAA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AAoBlE,MAApB,CAA2B9B,KAA3B,GACA+yE,EAAS/sE,UAAT,CAAoBlE,MAApB,CAA6B,IAAA,CAAK,CAAA2wE,EAAL,CAAoC,CAAA,GAP7C,CAAA,MAFtB3sE,EAAQ+sE,MAAR,CAAe3rG,GAAf,CAAmB,IAAA,CAAK,CAAA6pG,EAAxB,CAAmC,CAAE+B,KAAAA,EAAM9sE,WAAAA,CAAR,GACnCA,EAAWlE,MAAX,CAAoB,IAAA,CAAK,CAAA2wE,EAAL,CAAoC,CAAA,GAW1D,OAAOzsE,CArDuC,CAjfP,CAvB3C59B,EAAAA,WAAA,CAAA0lF,C,E,CCCA,yBAAA,CAAA,EAGA,SAAA,oBAAA,CAAA,EAEA,IAAA,EAAA,wBAAA,CAAA,EAAA,CACA,GAAA,AAAA,KAAA,IAAA,EACA,OAAA,EAAA,OAAA,CAGA,IAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,CAGA,QAAA,CAAA,CACA,EAMA,OAHA,mBAAA,CAAA,EAAA,CAAA,EAAA,EAAA,OAAA,CAAA,qBAGA,EAAA,OAAA,AACA,C,I,oB,C,E,M,A,C,K,I,E,oB,O,c,C,E,a,C,M,C,C,G,O,c,C,E,iB,C,W,C,E,I,W,O,E,c,A,C,G,O,c,C,E,wB,C,W,C,E,I,W,O,E,qB,A,C,G,O,c,C,E,6B,C,W,C,E,I,W,O,E,0B,A,C,G,O,c,C,E,uB,C,W,C,E,I,W,O,E,oB,A,C,G,O,c,C,E,4B,C,W,C,E,I,W,O,E,yB,A,C,G,O,c,C,E,kB,C,W,C,E,I,W,O,E,e,A,C,G,O,c,C,E,iB,C,W,C,E,I,W,O,E,c,A,C,G,O,c,C,E,sB,C,W,C,E,I,W,O,E,mB,A,C,G,O,c,C,E,gB,C,W,C,E,I,W,O,E,a,A,C,G,O,c,C,E,c,C,W,C,E,I,W,O,E,W,A,C,G,O,c,C,E,sB,C,W,C,E,I,W,O,E,mB,A,C,G,O,c,C,E,Y,C,W,C,E,I,W,O,E,S,A,C,G,O,c,C,E,sB,C,W,C,E,I,W,O,E,mB,A,C,G,O,c,C,E,sB,C,W,C,E,I,W,O,E,mB,A,C,G,O,c,C,E,M,C,W,C,E,I,W,O,E,G,A,C,G,O,c,C,E,wB,C,W,C,E,I,W,O,E,qB,A,C,G,O,c,C,E,gB,C,W,C,E,I,W,O,E,a,A,C,G,O,c,C,E,Y,C,W,C,E,I,W,O,E,S,A,C,G,O,c,C,E,oB,C,W,C,E,I,W,O,E,iB,A,C,G,O,c,C,E,iB,C,W,C,E,I,W,O,E,c,A,C,G,O,c,C,E,gB,C,W,C,E,I,W,O,E,a,A,C,G,O,c,C,E,oB,C,W,C,E,I,W,O,E,iB,A,C,G,O,c,C,E,8B,C,W,C,E,I,W,O,E,2B,A,C,G,O,c,C,E,c,C,W,C,E,I,W,O,E,W,A,C,G,O,c,C,E,8B,C,W,C,E,I,W,O,E,2B,A,C,G,O,c,C,E,O,C,W,C,E,I,W,O,E,I,A,C,G,O,c,C,E,iB,C,W,C,E,I,W,O,E,c,A,C,G,O,c,C,E,W,C,W,C,E,I,W,O,E,Q,A,C,G,O,c,C,E,Q,C,W,C,E,I,W,O,E,K,A,C,G,O,c,C,E,yB,C,W,C,E,I,W,O,E,sB,A,C,G,O,c,C,E,c,C,W,C,E,I,W,O,E,W,A,C,G,O,c,C,E,qB,C,W,C,E,I,W,O,E,kB,A,C,G,O,c,C,E,wB,C,W,C,E,I,W,O,E,qB,A,C,G,O,c,C,E,qB,C,W,C,E,I,W,O,E,kB,A,C,G,O,c,C,E,e,C,W,C,E,I,W,O,E,Y,A,C,G,O,c,C,E,Y,C,W,C,E,I,W,O,E,S,A,C,G,O,c,C,E,a,C,W,C,E,I,W,O,E,U,A,C,G,O,c,C,E,gB,C,W,C,E,I,W,O,E,a,A,C,G,O,c,C,E,mB,C,W,C,E,I,W,O,E,gB,A,C,G,O,c,C,E,kB,C,W,C,E,I,W,O,E,e,A,C,G,O,c,C,E,qB,C,W,C,E,I,W,O,E,kB,A,C,G,O,c,C,E,S,C,W,C,E,I,W,O,E,M,A,C,G,O,c,C,E,kB,C,W,C,E,I,W,O,E,e,A,C,G,O,c,C,E,U,C,W,C,E,I,W,O,E,O,A,C,GCIA,IAAArlE,EAAAkpG,oBAAA,GAqBAre,EAAAqe,oBAAA,GAQAhpG,EAAAgpG,oBAAA,GAcApe,EAAAoe,oBAAA,IACAte,EAAAse,oBAAA,IACAnrF,EAAAmrF,oBAAA,GACAjiC,EAAAiiC,oBAAA,IACA5oG,EAAA4oG,oBAAA,IACAx+B,EAAAw+B,oBAAA,G,C,I,mB,C,I,G,e,Q,S,C,C,C,ECzEA,IAOI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","sources":["<anon>","node_modules/pdfjs-dist/build/pdf.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/universalModuleDefinition","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/util.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_storage.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/editor.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/tools.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/display_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/base_factory.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/murmurhash3.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/font_loader.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/canvas.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/pattern_helper.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/image_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/worker_options.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/message_handler.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/metadata.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/optional_content_config.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/transport_stream.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/fetch_stream.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/content_disposition.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_stream.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/svg.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/xfa_text.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/text_layer.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/annotation_editor_layer.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/freetext.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_layer.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/scripting_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/web/l10n_utils.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/xfa_layer.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/ink.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/editor/stamp.js","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/bootstrap","node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/pdf.js","node_modules/process/browser.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/downloadjs/download.js","samples.json","src/index.js","node_modules/idb-keyval/dist/compat.js","src/refs/subtitles.js","src/refs/fingerprints.js","src/table.sort.js","src/engine.js","src/refs/workbook.js","src/S89.js","src/refs/S89.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6da8\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6da8\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"n3TJI\", function(module, exports) {\n\nvar $hPtJY = parcelRequire(\"hPtJY\");\n\nvar $6ZWSX = parcelRequire(\"6ZWSX\");\nvar $04552c275ef79ab8$require$Buffer = $6ZWSX.Buffer;\n\n\n\n\n\n\n\n\n\n\n/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */ (function webpackUniversalModuleDefinition(root, factory) {\n    module.exports = root.pdfjsLib = factory();\n})(globalThis, ()=>{\n    return /******/ (()=>{\n        /******/ \"use strict\";\n        /******/ var __webpack_modules__ = [\n            ,\n            /* 1 */ /***/ (__unused_webpack_module, exports)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n                exports.assert = assert;\n                exports.bytesToString = bytesToString;\n                exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n                exports.getModificationDate = getModificationDate;\n                exports.getUuid = getUuid;\n                exports.getVerbosityLevel = getVerbosityLevel;\n                exports.info = info;\n                exports.isArrayBuffer = isArrayBuffer;\n                exports.isArrayEqual = isArrayEqual;\n                exports.isNodeJS = void 0;\n                exports.normalizeUnicode = normalizeUnicode;\n                exports.objectFromMap = objectFromMap;\n                exports.objectSize = objectSize;\n                exports.setVerbosityLevel = setVerbosityLevel;\n                exports.shadow = shadow;\n                exports.string32 = string32;\n                exports.stringToBytes = stringToBytes;\n                exports.stringToPDFString = stringToPDFString;\n                exports.stringToUTF8String = stringToUTF8String;\n                exports.unreachable = unreachable;\n                exports.utf8StringToString = utf8StringToString;\n                exports.warn = warn;\n                const isNodeJS = typeof $hPtJY === \"object\" && $hPtJY + \"\" === \"[object process]\" && !$hPtJY.versions.nw && !($hPtJY.versions.electron && $hPtJY.type && $hPtJY.type !== \"browser\");\n                exports.isNodeJS = isNodeJS;\n                const IDENTITY_MATRIX = [\n                    1,\n                    0,\n                    0,\n                    1,\n                    0,\n                    0\n                ];\n                exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n                const FONT_IDENTITY_MATRIX = [\n                    0.001,\n                    0,\n                    0,\n                    0.001,\n                    0,\n                    0\n                ];\n                exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n                const MAX_IMAGE_SIZE_TO_CACHE = 10e6;\n                exports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\n                const LINE_FACTOR = 1.35;\n                exports.LINE_FACTOR = LINE_FACTOR;\n                const LINE_DESCENT_FACTOR = 0.35;\n                exports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\n                const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n                exports.BASELINE_FACTOR = BASELINE_FACTOR;\n                const RenderingIntentFlag = {\n                    ANY: 0x01,\n                    DISPLAY: 0x02,\n                    PRINT: 0x04,\n                    SAVE: 0x08,\n                    ANNOTATIONS_FORMS: 0x10,\n                    ANNOTATIONS_STORAGE: 0x20,\n                    ANNOTATIONS_DISABLE: 0x40,\n                    OPLIST: 0x100\n                };\n                exports.RenderingIntentFlag = RenderingIntentFlag;\n                const AnnotationMode = {\n                    DISABLE: 0,\n                    ENABLE: 1,\n                    ENABLE_FORMS: 2,\n                    ENABLE_STORAGE: 3\n                };\n                exports.AnnotationMode = AnnotationMode;\n                const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n                exports.AnnotationEditorPrefix = AnnotationEditorPrefix;\n                const AnnotationEditorType = {\n                    DISABLE: -1,\n                    NONE: 0,\n                    FREETEXT: 3,\n                    STAMP: 13,\n                    INK: 15\n                };\n                exports.AnnotationEditorType = AnnotationEditorType;\n                const AnnotationEditorParamsType = {\n                    RESIZE: 1,\n                    CREATE: 2,\n                    FREETEXT_SIZE: 11,\n                    FREETEXT_COLOR: 12,\n                    FREETEXT_OPACITY: 13,\n                    INK_COLOR: 21,\n                    INK_THICKNESS: 22,\n                    INK_OPACITY: 23\n                };\n                exports.AnnotationEditorParamsType = AnnotationEditorParamsType;\n                const PermissionFlag = {\n                    PRINT: 0x04,\n                    MODIFY_CONTENTS: 0x08,\n                    COPY: 0x10,\n                    MODIFY_ANNOTATIONS: 0x20,\n                    FILL_INTERACTIVE_FORMS: 0x100,\n                    COPY_FOR_ACCESSIBILITY: 0x200,\n                    ASSEMBLE: 0x400,\n                    PRINT_HIGH_QUALITY: 0x800\n                };\n                exports.PermissionFlag = PermissionFlag;\n                const TextRenderingMode = {\n                    FILL: 0,\n                    STROKE: 1,\n                    FILL_STROKE: 2,\n                    INVISIBLE: 3,\n                    FILL_ADD_TO_PATH: 4,\n                    STROKE_ADD_TO_PATH: 5,\n                    FILL_STROKE_ADD_TO_PATH: 6,\n                    ADD_TO_PATH: 7,\n                    FILL_STROKE_MASK: 3,\n                    ADD_TO_PATH_FLAG: 4\n                };\n                exports.TextRenderingMode = TextRenderingMode;\n                const ImageKind = {\n                    GRAYSCALE_1BPP: 1,\n                    RGB_24BPP: 2,\n                    RGBA_32BPP: 3\n                };\n                exports.ImageKind = ImageKind;\n                const AnnotationType = {\n                    TEXT: 1,\n                    LINK: 2,\n                    FREETEXT: 3,\n                    LINE: 4,\n                    SQUARE: 5,\n                    CIRCLE: 6,\n                    POLYGON: 7,\n                    POLYLINE: 8,\n                    HIGHLIGHT: 9,\n                    UNDERLINE: 10,\n                    SQUIGGLY: 11,\n                    STRIKEOUT: 12,\n                    STAMP: 13,\n                    CARET: 14,\n                    INK: 15,\n                    POPUP: 16,\n                    FILEATTACHMENT: 17,\n                    SOUND: 18,\n                    MOVIE: 19,\n                    WIDGET: 20,\n                    SCREEN: 21,\n                    PRINTERMARK: 22,\n                    TRAPNET: 23,\n                    WATERMARK: 24,\n                    THREED: 25,\n                    REDACT: 26\n                };\n                exports.AnnotationType = AnnotationType;\n                const AnnotationReplyType = {\n                    GROUP: \"Group\",\n                    REPLY: \"R\"\n                };\n                exports.AnnotationReplyType = AnnotationReplyType;\n                const AnnotationFlag = {\n                    INVISIBLE: 0x01,\n                    HIDDEN: 0x02,\n                    PRINT: 0x04,\n                    NOZOOM: 0x08,\n                    NOROTATE: 0x10,\n                    NOVIEW: 0x20,\n                    READONLY: 0x40,\n                    LOCKED: 0x80,\n                    TOGGLENOVIEW: 0x100,\n                    LOCKEDCONTENTS: 0x200\n                };\n                exports.AnnotationFlag = AnnotationFlag;\n                const AnnotationFieldFlag = {\n                    READONLY: 0x0000001,\n                    REQUIRED: 0x0000002,\n                    NOEXPORT: 0x0000004,\n                    MULTILINE: 0x0001000,\n                    PASSWORD: 0x0002000,\n                    NOTOGGLETOOFF: 0x0004000,\n                    RADIO: 0x0008000,\n                    PUSHBUTTON: 0x0010000,\n                    COMBO: 0x0020000,\n                    EDIT: 0x0040000,\n                    SORT: 0x0080000,\n                    FILESELECT: 0x0100000,\n                    MULTISELECT: 0x0200000,\n                    DONOTSPELLCHECK: 0x0400000,\n                    DONOTSCROLL: 0x0800000,\n                    COMB: 0x1000000,\n                    RICHTEXT: 0x2000000,\n                    RADIOSINUNISON: 0x2000000,\n                    COMMITONSELCHANGE: 0x4000000\n                };\n                exports.AnnotationFieldFlag = AnnotationFieldFlag;\n                const AnnotationBorderStyleType = {\n                    SOLID: 1,\n                    DASHED: 2,\n                    BEVELED: 3,\n                    INSET: 4,\n                    UNDERLINE: 5\n                };\n                exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n                const AnnotationActionEventType = {\n                    E: \"Mouse Enter\",\n                    X: \"Mouse Exit\",\n                    D: \"Mouse Down\",\n                    U: \"Mouse Up\",\n                    Fo: \"Focus\",\n                    Bl: \"Blur\",\n                    PO: \"PageOpen\",\n                    PC: \"PageClose\",\n                    PV: \"PageVisible\",\n                    PI: \"PageInvisible\",\n                    K: \"Keystroke\",\n                    F: \"Format\",\n                    V: \"Validate\",\n                    C: \"Calculate\"\n                };\n                exports.AnnotationActionEventType = AnnotationActionEventType;\n                const DocumentActionEventType = {\n                    WC: \"WillClose\",\n                    WS: \"WillSave\",\n                    DS: \"DidSave\",\n                    WP: \"WillPrint\",\n                    DP: \"DidPrint\"\n                };\n                exports.DocumentActionEventType = DocumentActionEventType;\n                const PageActionEventType = {\n                    O: \"PageOpen\",\n                    C: \"PageClose\"\n                };\n                exports.PageActionEventType = PageActionEventType;\n                const VerbosityLevel = {\n                    ERRORS: 0,\n                    WARNINGS: 1,\n                    INFOS: 5\n                };\n                exports.VerbosityLevel = VerbosityLevel;\n                const CMapCompressionType = {\n                    NONE: 0,\n                    BINARY: 1\n                };\n                exports.CMapCompressionType = CMapCompressionType;\n                const OPS = {\n                    dependency: 1,\n                    setLineWidth: 2,\n                    setLineCap: 3,\n                    setLineJoin: 4,\n                    setMiterLimit: 5,\n                    setDash: 6,\n                    setRenderingIntent: 7,\n                    setFlatness: 8,\n                    setGState: 9,\n                    save: 10,\n                    restore: 11,\n                    transform: 12,\n                    moveTo: 13,\n                    lineTo: 14,\n                    curveTo: 15,\n                    curveTo2: 16,\n                    curveTo3: 17,\n                    closePath: 18,\n                    rectangle: 19,\n                    stroke: 20,\n                    closeStroke: 21,\n                    fill: 22,\n                    eoFill: 23,\n                    fillStroke: 24,\n                    eoFillStroke: 25,\n                    closeFillStroke: 26,\n                    closeEOFillStroke: 27,\n                    endPath: 28,\n                    clip: 29,\n                    eoClip: 30,\n                    beginText: 31,\n                    endText: 32,\n                    setCharSpacing: 33,\n                    setWordSpacing: 34,\n                    setHScale: 35,\n                    setLeading: 36,\n                    setFont: 37,\n                    setTextRenderingMode: 38,\n                    setTextRise: 39,\n                    moveText: 40,\n                    setLeadingMoveText: 41,\n                    setTextMatrix: 42,\n                    nextLine: 43,\n                    showText: 44,\n                    showSpacedText: 45,\n                    nextLineShowText: 46,\n                    nextLineSetSpacingShowText: 47,\n                    setCharWidth: 48,\n                    setCharWidthAndBounds: 49,\n                    setStrokeColorSpace: 50,\n                    setFillColorSpace: 51,\n                    setStrokeColor: 52,\n                    setStrokeColorN: 53,\n                    setFillColor: 54,\n                    setFillColorN: 55,\n                    setStrokeGray: 56,\n                    setFillGray: 57,\n                    setStrokeRGBColor: 58,\n                    setFillRGBColor: 59,\n                    setStrokeCMYKColor: 60,\n                    setFillCMYKColor: 61,\n                    shadingFill: 62,\n                    beginInlineImage: 63,\n                    beginImageData: 64,\n                    endInlineImage: 65,\n                    paintXObject: 66,\n                    markPoint: 67,\n                    markPointProps: 68,\n                    beginMarkedContent: 69,\n                    beginMarkedContentProps: 70,\n                    endMarkedContent: 71,\n                    beginCompat: 72,\n                    endCompat: 73,\n                    paintFormXObjectBegin: 74,\n                    paintFormXObjectEnd: 75,\n                    beginGroup: 76,\n                    endGroup: 77,\n                    beginAnnotation: 80,\n                    endAnnotation: 81,\n                    paintImageMaskXObject: 83,\n                    paintImageMaskXObjectGroup: 84,\n                    paintImageXObject: 85,\n                    paintInlineImageXObject: 86,\n                    paintInlineImageXObjectGroup: 87,\n                    paintImageXObjectRepeat: 88,\n                    paintImageMaskXObjectRepeat: 89,\n                    paintSolidColorImageMask: 90,\n                    constructPath: 91\n                };\n                exports.OPS = OPS;\n                const PasswordResponses = {\n                    NEED_PASSWORD: 1,\n                    INCORRECT_PASSWORD: 2\n                };\n                exports.PasswordResponses = PasswordResponses;\n                let verbosity = VerbosityLevel.WARNINGS;\n                function setVerbosityLevel(level) {\n                    if (Number.isInteger(level)) verbosity = level;\n                }\n                function getVerbosityLevel() {\n                    return verbosity;\n                }\n                function info(msg) {\n                    if (verbosity >= VerbosityLevel.INFOS) console.log(`Info: ${msg}`);\n                }\n                function warn(msg) {\n                    if (verbosity >= VerbosityLevel.WARNINGS) console.log(`Warning: ${msg}`);\n                }\n                function unreachable(msg) {\n                    throw new Error(msg);\n                }\n                function assert(cond, msg) {\n                    if (!cond) unreachable(msg);\n                }\n                function _isValidProtocol(url) {\n                    switch(url?.protocol){\n                        case \"http:\":\n                        case \"https:\":\n                        case \"ftp:\":\n                        case \"mailto:\":\n                        case \"tel:\":\n                            return true;\n                        default:\n                            return false;\n                    }\n                }\n                function createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n                    if (!url) return null;\n                    try {\n                        if (options && typeof url === \"string\") {\n                            if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                                const dots = url.match(/\\./g);\n                                if (dots?.length >= 2) url = `http://${url}`;\n                            }\n                            if (options.tryConvertEncoding) try {\n                                url = stringToUTF8String(url);\n                            } catch  {}\n                        }\n                        const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n                        if (_isValidProtocol(absoluteUrl)) return absoluteUrl;\n                    } catch  {}\n                    return null;\n                }\n                function shadow(obj, prop, value, nonSerializable = false) {\n                    Object.defineProperty(obj, prop, {\n                        value: value,\n                        enumerable: !nonSerializable,\n                        configurable: true,\n                        writable: false\n                    });\n                    return value;\n                }\n                const BaseException = function BaseExceptionClosure() {\n                    function BaseException(message, name) {\n                        if (this.constructor === BaseException) unreachable(\"Cannot initialize BaseException.\");\n                        this.message = message;\n                        this.name = name;\n                    }\n                    BaseException.prototype = new Error();\n                    BaseException.constructor = BaseException;\n                    return BaseException;\n                }();\n                exports.BaseException = BaseException;\n                class PasswordException extends BaseException {\n                    constructor(msg, code){\n                        super(msg, \"PasswordException\");\n                        this.code = code;\n                    }\n                }\n                exports.PasswordException = PasswordException;\n                class UnknownErrorException extends BaseException {\n                    constructor(msg, details){\n                        super(msg, \"UnknownErrorException\");\n                        this.details = details;\n                    }\n                }\n                exports.UnknownErrorException = UnknownErrorException;\n                class InvalidPDFException extends BaseException {\n                    constructor(msg){\n                        super(msg, \"InvalidPDFException\");\n                    }\n                }\n                exports.InvalidPDFException = InvalidPDFException;\n                class MissingPDFException extends BaseException {\n                    constructor(msg){\n                        super(msg, \"MissingPDFException\");\n                    }\n                }\n                exports.MissingPDFException = MissingPDFException;\n                class UnexpectedResponseException extends BaseException {\n                    constructor(msg, status){\n                        super(msg, \"UnexpectedResponseException\");\n                        this.status = status;\n                    }\n                }\n                exports.UnexpectedResponseException = UnexpectedResponseException;\n                class FormatError extends BaseException {\n                    constructor(msg){\n                        super(msg, \"FormatError\");\n                    }\n                }\n                exports.FormatError = FormatError;\n                class AbortException extends BaseException {\n                    constructor(msg){\n                        super(msg, \"AbortException\");\n                    }\n                }\n                exports.AbortException = AbortException;\n                function bytesToString(bytes) {\n                    if (typeof bytes !== \"object\" || bytes?.length === undefined) unreachable(\"Invalid argument for bytesToString\");\n                    const length = bytes.length;\n                    const MAX_ARGUMENT_COUNT = 8192;\n                    if (length < MAX_ARGUMENT_COUNT) return String.fromCharCode.apply(null, bytes);\n                    const strBuf = [];\n                    for(let i = 0; i < length; i += MAX_ARGUMENT_COUNT){\n                        const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n                        const chunk = bytes.subarray(i, chunkEnd);\n                        strBuf.push(String.fromCharCode.apply(null, chunk));\n                    }\n                    return strBuf.join(\"\");\n                }\n                function stringToBytes(str) {\n                    if (typeof str !== \"string\") unreachable(\"Invalid argument for stringToBytes\");\n                    const length = str.length;\n                    const bytes = new Uint8Array(length);\n                    for(let i = 0; i < length; ++i)bytes[i] = str.charCodeAt(i) & 0xff;\n                    return bytes;\n                }\n                function string32(value) {\n                    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n                }\n                function objectSize(obj) {\n                    return Object.keys(obj).length;\n                }\n                function objectFromMap(map) {\n                    const obj = Object.create(null);\n                    for (const [key, value] of map)obj[key] = value;\n                    return obj;\n                }\n                function isLittleEndian() {\n                    const buffer8 = new Uint8Array(4);\n                    buffer8[0] = 1;\n                    const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n                    return view32[0] === 1;\n                }\n                function isEvalSupported() {\n                    try {\n                        new Function(\"\");\n                        return true;\n                    } catch  {\n                        return false;\n                    }\n                }\n                class FeatureTest {\n                    static get isLittleEndian() {\n                        return shadow(this, \"isLittleEndian\", isLittleEndian());\n                    }\n                    static get isEvalSupported() {\n                        return shadow(this, \"isEvalSupported\", isEvalSupported());\n                    }\n                    static get isOffscreenCanvasSupported() {\n                        return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n                    }\n                    static get platform() {\n                        if (typeof navigator === \"undefined\") return shadow(this, \"platform\", {\n                            isWin: false,\n                            isMac: false\n                        });\n                        return shadow(this, \"platform\", {\n                            isWin: navigator.platform.includes(\"Win\"),\n                            isMac: navigator.platform.includes(\"Mac\")\n                        });\n                    }\n                    static get isCSSRoundSupported() {\n                        return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n                    }\n                }\n                exports.FeatureTest = FeatureTest;\n                const hexNumbers = [\n                    ...Array(256).keys()\n                ].map((n)=>n.toString(16).padStart(2, \"0\"));\n                class Util {\n                    static makeHexColor(r, g, b) {\n                        return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n                    }\n                    static scaleMinMax(transform, minMax) {\n                        let temp;\n                        if (transform[0]) {\n                            if (transform[0] < 0) {\n                                temp = minMax[0];\n                                minMax[0] = minMax[1];\n                                minMax[1] = temp;\n                            }\n                            minMax[0] *= transform[0];\n                            minMax[1] *= transform[0];\n                            if (transform[3] < 0) {\n                                temp = minMax[2];\n                                minMax[2] = minMax[3];\n                                minMax[3] = temp;\n                            }\n                            minMax[2] *= transform[3];\n                            minMax[3] *= transform[3];\n                        } else {\n                            temp = minMax[0];\n                            minMax[0] = minMax[2];\n                            minMax[2] = temp;\n                            temp = minMax[1];\n                            minMax[1] = minMax[3];\n                            minMax[3] = temp;\n                            if (transform[1] < 0) {\n                                temp = minMax[2];\n                                minMax[2] = minMax[3];\n                                minMax[3] = temp;\n                            }\n                            minMax[2] *= transform[1];\n                            minMax[3] *= transform[1];\n                            if (transform[2] < 0) {\n                                temp = minMax[0];\n                                minMax[0] = minMax[1];\n                                minMax[1] = temp;\n                            }\n                            minMax[0] *= transform[2];\n                            minMax[1] *= transform[2];\n                        }\n                        minMax[0] += transform[4];\n                        minMax[1] += transform[4];\n                        minMax[2] += transform[5];\n                        minMax[3] += transform[5];\n                    }\n                    static transform(m1, m2) {\n                        return [\n                            m1[0] * m2[0] + m1[2] * m2[1],\n                            m1[1] * m2[0] + m1[3] * m2[1],\n                            m1[0] * m2[2] + m1[2] * m2[3],\n                            m1[1] * m2[2] + m1[3] * m2[3],\n                            m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n                            m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n                        ];\n                    }\n                    static applyTransform(p, m) {\n                        const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n                        const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n                        return [\n                            xt,\n                            yt\n                        ];\n                    }\n                    static applyInverseTransform(p, m) {\n                        const d = m[0] * m[3] - m[1] * m[2];\n                        const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n                        const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n                        return [\n                            xt,\n                            yt\n                        ];\n                    }\n                    static getAxialAlignedBoundingBox(r, m) {\n                        const p1 = this.applyTransform(r, m);\n                        const p2 = this.applyTransform(r.slice(2, 4), m);\n                        const p3 = this.applyTransform([\n                            r[0],\n                            r[3]\n                        ], m);\n                        const p4 = this.applyTransform([\n                            r[2],\n                            r[1]\n                        ], m);\n                        return [\n                            Math.min(p1[0], p2[0], p3[0], p4[0]),\n                            Math.min(p1[1], p2[1], p3[1], p4[1]),\n                            Math.max(p1[0], p2[0], p3[0], p4[0]),\n                            Math.max(p1[1], p2[1], p3[1], p4[1])\n                        ];\n                    }\n                    static inverseTransform(m) {\n                        const d = m[0] * m[3] - m[1] * m[2];\n                        return [\n                            m[3] / d,\n                            -m[1] / d,\n                            -m[2] / d,\n                            m[0] / d,\n                            (m[2] * m[5] - m[4] * m[3]) / d,\n                            (m[4] * m[1] - m[5] * m[0]) / d\n                        ];\n                    }\n                    static singularValueDecompose2dScale(m) {\n                        const transpose = [\n                            m[0],\n                            m[2],\n                            m[1],\n                            m[3]\n                        ];\n                        const a = m[0] * transpose[0] + m[1] * transpose[2];\n                        const b = m[0] * transpose[1] + m[1] * transpose[3];\n                        const c = m[2] * transpose[0] + m[3] * transpose[2];\n                        const d = m[2] * transpose[1] + m[3] * transpose[3];\n                        const first = (a + d) / 2;\n                        const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n                        const sx = first + second || 1;\n                        const sy = first - second || 1;\n                        return [\n                            Math.sqrt(sx),\n                            Math.sqrt(sy)\n                        ];\n                    }\n                    static normalizeRect(rect) {\n                        const r = rect.slice(0);\n                        if (rect[0] > rect[2]) {\n                            r[0] = rect[2];\n                            r[2] = rect[0];\n                        }\n                        if (rect[1] > rect[3]) {\n                            r[1] = rect[3];\n                            r[3] = rect[1];\n                        }\n                        return r;\n                    }\n                    static intersect(rect1, rect2) {\n                        const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n                        const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n                        if (xLow > xHigh) return null;\n                        const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n                        const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n                        if (yLow > yHigh) return null;\n                        return [\n                            xLow,\n                            yLow,\n                            xHigh,\n                            yHigh\n                        ];\n                    }\n                    static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n                        const tvalues = [], bounds = [\n                            [],\n                            []\n                        ];\n                        let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n                        for(let i = 0; i < 2; ++i){\n                            if (i === 0) {\n                                b = 6 * x0 - 12 * x1 + 6 * x2;\n                                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                                c = 3 * x1 - 3 * x0;\n                            } else {\n                                b = 6 * y0 - 12 * y1 + 6 * y2;\n                                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                                c = 3 * y1 - 3 * y0;\n                            }\n                            if (Math.abs(a) < 1e-12) {\n                                if (Math.abs(b) < 1e-12) continue;\n                                t = -c / b;\n                                if (0 < t && t < 1) tvalues.push(t);\n                                continue;\n                            }\n                            b2ac = b * b - 4 * c * a;\n                            sqrtb2ac = Math.sqrt(b2ac);\n                            if (b2ac < 0) continue;\n                            t1 = (-b + sqrtb2ac) / (2 * a);\n                            if (0 < t1 && t1 < 1) tvalues.push(t1);\n                            t2 = (-b - sqrtb2ac) / (2 * a);\n                            if (0 < t2 && t2 < 1) tvalues.push(t2);\n                        }\n                        let j = tvalues.length, mt;\n                        const jlen = j;\n                        while(j--){\n                            t = tvalues[j];\n                            mt = 1 - t;\n                            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n                            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n                        }\n                        bounds[0][jlen] = x0;\n                        bounds[1][jlen] = y0;\n                        bounds[0][jlen + 1] = x3;\n                        bounds[1][jlen + 1] = y3;\n                        bounds[0].length = bounds[1].length = jlen + 2;\n                        return [\n                            Math.min(...bounds[0]),\n                            Math.min(...bounds[1]),\n                            Math.max(...bounds[0]),\n                            Math.max(...bounds[1])\n                        ];\n                    }\n                }\n                exports.Util = Util;\n                const PDFStringTranslateTable = [\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0x2d8,\n                    0x2c7,\n                    0x2c6,\n                    0x2d9,\n                    0x2dd,\n                    0x2db,\n                    0x2da,\n                    0x2dc,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0x2022,\n                    0x2020,\n                    0x2021,\n                    0x2026,\n                    0x2014,\n                    0x2013,\n                    0x192,\n                    0x2044,\n                    0x2039,\n                    0x203a,\n                    0x2212,\n                    0x2030,\n                    0x201e,\n                    0x201c,\n                    0x201d,\n                    0x2018,\n                    0x2019,\n                    0x201a,\n                    0x2122,\n                    0xfb01,\n                    0xfb02,\n                    0x141,\n                    0x152,\n                    0x160,\n                    0x178,\n                    0x17d,\n                    0x131,\n                    0x142,\n                    0x153,\n                    0x161,\n                    0x17e,\n                    0,\n                    0x20ac\n                ];\n                function stringToPDFString(str) {\n                    if (str[0] >= \"\\xef\") {\n                        let encoding;\n                        if (str[0] === \"\\xfe\" && str[1] === \"\\xff\") encoding = \"utf-16be\";\n                        else if (str[0] === \"\\xff\" && str[1] === \"\\xfe\") encoding = \"utf-16le\";\n                        else if (str[0] === \"\\xef\" && str[1] === \"\\xbb\" && str[2] === \"\\xbf\") encoding = \"utf-8\";\n                        if (encoding) try {\n                            const decoder = new TextDecoder(encoding, {\n                                fatal: true\n                            });\n                            const buffer = stringToBytes(str);\n                            return decoder.decode(buffer);\n                        } catch (ex) {\n                            warn(`stringToPDFString: \"${ex}\".`);\n                        }\n                    }\n                    const strBuf = [];\n                    for(let i = 0, ii = str.length; i < ii; i++){\n                        const code = PDFStringTranslateTable[str.charCodeAt(i)];\n                        strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n                    }\n                    return strBuf.join(\"\");\n                }\n                function stringToUTF8String(str) {\n                    return decodeURIComponent(escape(str));\n                }\n                function utf8StringToString(str) {\n                    return unescape(encodeURIComponent(str));\n                }\n                function isArrayBuffer(v) {\n                    return typeof v === \"object\" && v?.byteLength !== undefined;\n                }\n                function isArrayEqual(arr1, arr2) {\n                    if (arr1.length !== arr2.length) return false;\n                    for(let i = 0, ii = arr1.length; i < ii; i++){\n                        if (arr1[i] !== arr2[i]) return false;\n                    }\n                    return true;\n                }\n                function getModificationDate(date = new Date()) {\n                    const buffer = [\n                        date.getUTCFullYear().toString(),\n                        (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n                        date.getUTCDate().toString().padStart(2, \"0\"),\n                        date.getUTCHours().toString().padStart(2, \"0\"),\n                        date.getUTCMinutes().toString().padStart(2, \"0\"),\n                        date.getUTCSeconds().toString().padStart(2, \"0\")\n                    ];\n                    return buffer.join(\"\");\n                }\n                class PromiseCapability {\n                    #settled = false;\n                    constructor(){\n                        this.promise = new Promise((resolve, reject)=>{\n                            this.resolve = (data)=>{\n                                this.#settled = true;\n                                resolve(data);\n                            };\n                            this.reject = (reason)=>{\n                                this.#settled = true;\n                                reject(reason);\n                            };\n                        });\n                    }\n                    get settled() {\n                        return this.#settled;\n                    }\n                }\n                exports.PromiseCapability = PromiseCapability;\n                let NormalizeRegex = null;\n                let NormalizationMap = null;\n                function normalizeUnicode(str) {\n                    if (!NormalizeRegex) {\n                        NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n                        NormalizationMap = new Map([\n                            [\n                                \"\\uFB05\",\n                                \"\\u017Ft\"\n                            ]\n                        ]);\n                    }\n                    return str.replaceAll(NormalizeRegex, (_, p1, p2)=>{\n                        return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n                    });\n                }\n                function getUuid() {\n                    if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") return crypto.randomUUID();\n                    const buf = new Uint8Array(32);\n                    if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") crypto.getRandomValues(buf);\n                    else for(let i = 0; i < 32; i++)buf[i] = Math.floor(Math.random() * 255);\n                    return bytesToString(buf);\n                }\n                const AnnotationPrefix = \"pdfjs_internal_id_\";\n                exports.AnnotationPrefix = AnnotationPrefix;\n            /***/ },\n            /* 2 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n                Object.defineProperty(exports, \"SVGGraphics\", {\n                    enumerable: true,\n                    get: function() {\n                        return _displaySvg.SVGGraphics;\n                    }\n                });\n                exports.build = void 0;\n                exports.getDocument = getDocument;\n                exports.version = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _annotation_storage = __w_pdfjs_require__(3);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _font_loader = __w_pdfjs_require__(9);\n                var _displayNode_utils = __w_pdfjs_require__(10);\n                var _canvas = __w_pdfjs_require__(11);\n                var _worker_options = __w_pdfjs_require__(14);\n                var _message_handler = __w_pdfjs_require__(15);\n                var _metadata = __w_pdfjs_require__(16);\n                var _optional_content_config = __w_pdfjs_require__(17);\n                var _transport_stream = __w_pdfjs_require__(18);\n                var _displayFetch_stream = __w_pdfjs_require__(19);\n                var _displayNetwork = __w_pdfjs_require__(22);\n                var _displayNode_stream = __w_pdfjs_require__(23);\n                var _displaySvg = __w_pdfjs_require__(24);\n                var _xfa_text = __w_pdfjs_require__(25);\n                const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n                const RENDERING_CANCELLED_TIMEOUT = 100;\n                const DELAYED_CLEANUP_TIMEOUT = 5000;\n                const DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n                exports.DefaultCanvasFactory = DefaultCanvasFactory;\n                const DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n                exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n                const DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\n                exports.DefaultFilterFactory = DefaultFilterFactory;\n                const DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n                exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n                function getDocument(src) {\n                    if (typeof src === \"string\" || src instanceof URL) src = {\n                        url: src\n                    };\n                    else if ((0, _util.isArrayBuffer)(src)) src = {\n                        data: src\n                    };\n                    if (typeof src !== \"object\") throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n                    if (!src.url && !src.data && !src.range) throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n                    const task = new PDFDocumentLoadingTask();\n                    const { docId } = task;\n                    const url = src.url ? getUrlProp(src.url) : null;\n                    const data = src.data ? getDataProp(src.data) : null;\n                    const httpHeaders = src.httpHeaders || null;\n                    const withCredentials = src.withCredentials === true;\n                    const password = src.password ?? null;\n                    const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n                    const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n                    let worker = src.worker instanceof PDFWorker ? src.worker : null;\n                    const verbosity = src.verbosity;\n                    const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n                    const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n                    const cMapPacked = src.cMapPacked !== false;\n                    const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n                    const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n                    const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n                    const ignoreErrors = src.stopAtErrors !== true;\n                    const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n                    const isEvalSupported = src.isEvalSupported !== false;\n                    const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n                    const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n                    const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n                    const fontExtraProperties = src.fontExtraProperties === true;\n                    const enableXfa = src.enableXfa === true;\n                    const ownerDocument = src.ownerDocument || globalThis.document;\n                    const disableRange = src.disableRange === true;\n                    const disableStream = src.disableStream === true;\n                    const disableAutoFetch = src.disableAutoFetch === true;\n                    const pdfBug = src.pdfBug === true;\n                    const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n                    const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n                    const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n                    const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n                        ownerDocument: ownerDocument\n                    });\n                    const filterFactory = src.filterFactory || new DefaultFilterFactory({\n                        docId: docId,\n                        ownerDocument: ownerDocument\n                    });\n                    const styleElement = null;\n                    (0, _util.setVerbosityLevel)(verbosity);\n                    const transportFactory = {\n                        canvasFactory: canvasFactory,\n                        filterFactory: filterFactory\n                    };\n                    if (!useWorkerFetch) {\n                        transportFactory.cMapReaderFactory = new CMapReaderFactory({\n                            baseUrl: cMapUrl,\n                            isCompressed: cMapPacked\n                        });\n                        transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n                            baseUrl: standardFontDataUrl\n                        });\n                    }\n                    if (!worker) {\n                        const workerParams = {\n                            verbosity: verbosity,\n                            port: _worker_options.GlobalWorkerOptions.workerPort\n                        };\n                        worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n                        task._worker = worker;\n                    }\n                    const fetchDocParams = {\n                        docId: docId,\n                        apiVersion: \"3.11.174\",\n                        data: data,\n                        password: password,\n                        disableAutoFetch: disableAutoFetch,\n                        rangeChunkSize: rangeChunkSize,\n                        length: length,\n                        docBaseUrl: docBaseUrl,\n                        enableXfa: enableXfa,\n                        evaluatorOptions: {\n                            maxImageSize: maxImageSize,\n                            disableFontFace: disableFontFace,\n                            ignoreErrors: ignoreErrors,\n                            isEvalSupported: isEvalSupported,\n                            isOffscreenCanvasSupported: isOffscreenCanvasSupported,\n                            canvasMaxAreaInBytes: canvasMaxAreaInBytes,\n                            fontExtraProperties: fontExtraProperties,\n                            useSystemFonts: useSystemFonts,\n                            cMapUrl: useWorkerFetch ? cMapUrl : null,\n                            standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n                        }\n                    };\n                    const transportParams = {\n                        ignoreErrors: ignoreErrors,\n                        isEvalSupported: isEvalSupported,\n                        disableFontFace: disableFontFace,\n                        fontExtraProperties: fontExtraProperties,\n                        enableXfa: enableXfa,\n                        ownerDocument: ownerDocument,\n                        disableAutoFetch: disableAutoFetch,\n                        pdfBug: pdfBug,\n                        styleElement: styleElement\n                    };\n                    worker.promise.then(function() {\n                        if (task.destroyed) throw new Error(\"Loading aborted\");\n                        const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n                        const networkStreamPromise = new Promise(function(resolve) {\n                            let networkStream;\n                            if (rangeTransport) networkStream = new _transport_stream.PDFDataTransportStream({\n                                length: length,\n                                initialData: rangeTransport.initialData,\n                                progressiveDone: rangeTransport.progressiveDone,\n                                contentDispositionFilename: rangeTransport.contentDispositionFilename,\n                                disableRange: disableRange,\n                                disableStream: disableStream\n                            }, rangeTransport);\n                            else if (!data) {\n                                const createPDFNetworkStream = (params)=>{\n                                    if (_util.isNodeJS) return new _displayNode_stream.PDFNodeStream(params);\n                                    return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n                                };\n                                networkStream = createPDFNetworkStream({\n                                    url: url,\n                                    length: length,\n                                    httpHeaders: httpHeaders,\n                                    withCredentials: withCredentials,\n                                    rangeChunkSize: rangeChunkSize,\n                                    disableRange: disableRange,\n                                    disableStream: disableStream\n                                });\n                            }\n                            resolve(networkStream);\n                        });\n                        return Promise.all([\n                            workerIdPromise,\n                            networkStreamPromise\n                        ]).then(function([workerId, networkStream]) {\n                            if (task.destroyed) throw new Error(\"Loading aborted\");\n                            const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n                            const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n                            task._transport = transport;\n                            messageHandler.send(\"Ready\", null);\n                        });\n                    }).catch(task._capability.reject);\n                    return task;\n                }\n                async function _fetchDocument(worker, source) {\n                    if (worker.destroyed) throw new Error(\"Worker was destroyed\");\n                    const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [\n                        source.data.buffer\n                    ] : null);\n                    if (worker.destroyed) throw new Error(\"Worker was destroyed\");\n                    return workerId;\n                }\n                function getUrlProp(val) {\n                    if (val instanceof URL) return val.href;\n                    try {\n                        return new URL(val, window.location).href;\n                    } catch  {\n                        if (_util.isNodeJS && typeof val === \"string\") return val;\n                    }\n                    throw new Error(\"Invalid PDF url data: either string or URL-object is expected in the url property.\");\n                }\n                function getDataProp(val) {\n                    if (_util.isNodeJS && typeof $04552c275ef79ab8$require$Buffer !== \"undefined\" && val instanceof $04552c275ef79ab8$require$Buffer) throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n                    if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) return val;\n                    if (typeof val === \"string\") return (0, _util.stringToBytes)(val);\n                    if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) return new Uint8Array(val);\n                    throw new Error(\"Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.\");\n                }\n                class PDFDocumentLoadingTask {\n                    static #docId = 0;\n                    constructor(){\n                        this._capability = new _util.PromiseCapability();\n                        this._transport = null;\n                        this._worker = null;\n                        this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n                        this.destroyed = false;\n                        this.onPassword = null;\n                        this.onProgress = null;\n                    }\n                    get promise() {\n                        return this._capability.promise;\n                    }\n                    async destroy() {\n                        this.destroyed = true;\n                        try {\n                            if (this._worker?.port) this._worker._pendingDestroy = true;\n                            await this._transport?.destroy();\n                        } catch (ex) {\n                            if (this._worker?.port) delete this._worker._pendingDestroy;\n                            throw ex;\n                        }\n                        this._transport = null;\n                        if (this._worker) {\n                            this._worker.destroy();\n                            this._worker = null;\n                        }\n                    }\n                }\n                exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n                class PDFDataRangeTransport {\n                    constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null){\n                        this.length = length;\n                        this.initialData = initialData;\n                        this.progressiveDone = progressiveDone;\n                        this.contentDispositionFilename = contentDispositionFilename;\n                        this._rangeListeners = [];\n                        this._progressListeners = [];\n                        this._progressiveReadListeners = [];\n                        this._progressiveDoneListeners = [];\n                        this._readyCapability = new _util.PromiseCapability();\n                    }\n                    addRangeListener(listener) {\n                        this._rangeListeners.push(listener);\n                    }\n                    addProgressListener(listener) {\n                        this._progressListeners.push(listener);\n                    }\n                    addProgressiveReadListener(listener) {\n                        this._progressiveReadListeners.push(listener);\n                    }\n                    addProgressiveDoneListener(listener) {\n                        this._progressiveDoneListeners.push(listener);\n                    }\n                    onDataRange(begin, chunk) {\n                        for (const listener of this._rangeListeners)listener(begin, chunk);\n                    }\n                    onDataProgress(loaded, total) {\n                        this._readyCapability.promise.then(()=>{\n                            for (const listener of this._progressListeners)listener(loaded, total);\n                        });\n                    }\n                    onDataProgressiveRead(chunk) {\n                        this._readyCapability.promise.then(()=>{\n                            for (const listener of this._progressiveReadListeners)listener(chunk);\n                        });\n                    }\n                    onDataProgressiveDone() {\n                        this._readyCapability.promise.then(()=>{\n                            for (const listener of this._progressiveDoneListeners)listener();\n                        });\n                    }\n                    transportReady() {\n                        this._readyCapability.resolve();\n                    }\n                    requestDataRange(begin, end) {\n                        (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n                    }\n                    abort() {}\n                }\n                exports.PDFDataRangeTransport = PDFDataRangeTransport;\n                class PDFDocumentProxy {\n                    constructor(pdfInfo, transport){\n                        this._pdfInfo = pdfInfo;\n                        this._transport = transport;\n                        Object.defineProperty(this, \"getJavaScript\", {\n                            value: ()=>{\n                                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, please use `PDFDocumentProxy.getJSActions` instead.\");\n                                return this.getJSActions().then((js)=>{\n                                    if (!js) return js;\n                                    const jsArr = [];\n                                    for(const name in js)jsArr.push(...js[name]);\n                                    return jsArr;\n                                });\n                            }\n                        });\n                    }\n                    get annotationStorage() {\n                        return this._transport.annotationStorage;\n                    }\n                    get filterFactory() {\n                        return this._transport.filterFactory;\n                    }\n                    get numPages() {\n                        return this._pdfInfo.numPages;\n                    }\n                    get fingerprints() {\n                        return this._pdfInfo.fingerprints;\n                    }\n                    get isPureXfa() {\n                        return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n                    }\n                    get allXfaHtml() {\n                        return this._transport._htmlForXfa;\n                    }\n                    getPage(pageNumber) {\n                        return this._transport.getPage(pageNumber);\n                    }\n                    getPageIndex(ref) {\n                        return this._transport.getPageIndex(ref);\n                    }\n                    getDestinations() {\n                        return this._transport.getDestinations();\n                    }\n                    getDestination(id) {\n                        return this._transport.getDestination(id);\n                    }\n                    getPageLabels() {\n                        return this._transport.getPageLabels();\n                    }\n                    getPageLayout() {\n                        return this._transport.getPageLayout();\n                    }\n                    getPageMode() {\n                        return this._transport.getPageMode();\n                    }\n                    getViewerPreferences() {\n                        return this._transport.getViewerPreferences();\n                    }\n                    getOpenAction() {\n                        return this._transport.getOpenAction();\n                    }\n                    getAttachments() {\n                        return this._transport.getAttachments();\n                    }\n                    getJSActions() {\n                        return this._transport.getDocJSActions();\n                    }\n                    getOutline() {\n                        return this._transport.getOutline();\n                    }\n                    getOptionalContentConfig() {\n                        return this._transport.getOptionalContentConfig();\n                    }\n                    getPermissions() {\n                        return this._transport.getPermissions();\n                    }\n                    getMetadata() {\n                        return this._transport.getMetadata();\n                    }\n                    getMarkInfo() {\n                        return this._transport.getMarkInfo();\n                    }\n                    getData() {\n                        return this._transport.getData();\n                    }\n                    saveDocument() {\n                        return this._transport.saveDocument();\n                    }\n                    getDownloadInfo() {\n                        return this._transport.downloadInfoCapability.promise;\n                    }\n                    cleanup(keepLoadedFonts = false) {\n                        return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n                    }\n                    destroy() {\n                        return this.loadingTask.destroy();\n                    }\n                    get loadingParams() {\n                        return this._transport.loadingParams;\n                    }\n                    get loadingTask() {\n                        return this._transport.loadingTask;\n                    }\n                    getFieldObjects() {\n                        return this._transport.getFieldObjects();\n                    }\n                    hasJSActions() {\n                        return this._transport.hasJSActions();\n                    }\n                    getCalculationOrderIds() {\n                        return this._transport.getCalculationOrderIds();\n                    }\n                }\n                exports.PDFDocumentProxy = PDFDocumentProxy;\n                class PDFPageProxy {\n                    #delayedCleanupTimeout = null;\n                    #pendingCleanup = false;\n                    constructor(pageIndex, pageInfo, transport, pdfBug = false){\n                        this._pageIndex = pageIndex;\n                        this._pageInfo = pageInfo;\n                        this._transport = transport;\n                        this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n                        this._pdfBug = pdfBug;\n                        this.commonObjs = transport.commonObjs;\n                        this.objs = new PDFObjects();\n                        this._maybeCleanupAfterRender = false;\n                        this._intentStates = new Map();\n                        this.destroyed = false;\n                    }\n                    get pageNumber() {\n                        return this._pageIndex + 1;\n                    }\n                    get rotate() {\n                        return this._pageInfo.rotate;\n                    }\n                    get ref() {\n                        return this._pageInfo.ref;\n                    }\n                    get userUnit() {\n                        return this._pageInfo.userUnit;\n                    }\n                    get view() {\n                        return this._pageInfo.view;\n                    }\n                    getViewport({ scale, rotation = this.rotate, offsetX = 0, offsetY = 0, dontFlip = false } = {}) {\n                        return new _display_utils.PageViewport({\n                            viewBox: this.view,\n                            scale: scale,\n                            rotation: rotation,\n                            offsetX: offsetX,\n                            offsetY: offsetY,\n                            dontFlip: dontFlip\n                        });\n                    }\n                    getAnnotations({ intent = \"display\" } = {}) {\n                        const intentArgs = this._transport.getRenderingIntent(intent);\n                        return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n                    }\n                    getJSActions() {\n                        return this._transport.getPageJSActions(this._pageIndex);\n                    }\n                    get filterFactory() {\n                        return this._transport.filterFactory;\n                    }\n                    get isPureXfa() {\n                        return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n                    }\n                    async getXfa() {\n                        return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n                    }\n                    render({ canvasContext, viewport, intent = \"display\", annotationMode = _util.AnnotationMode.ENABLE, transform = null, background = null, optionalContentConfigPromise = null, annotationCanvasMap = null, pageColors = null, printAnnotationStorage = null }) {\n                        this._stats?.time(\"Overall\");\n                        const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n                        this.#pendingCleanup = false;\n                        this.#abortDelayedCleanup();\n                        if (!optionalContentConfigPromise) optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n                        let intentState = this._intentStates.get(intentArgs.cacheKey);\n                        if (!intentState) {\n                            intentState = Object.create(null);\n                            this._intentStates.set(intentArgs.cacheKey, intentState);\n                        }\n                        if (intentState.streamReaderCancelTimeout) {\n                            clearTimeout(intentState.streamReaderCancelTimeout);\n                            intentState.streamReaderCancelTimeout = null;\n                        }\n                        const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n                        if (!intentState.displayReadyCapability) {\n                            intentState.displayReadyCapability = new _util.PromiseCapability();\n                            intentState.operatorList = {\n                                fnArray: [],\n                                argsArray: [],\n                                lastChunk: false,\n                                separateAnnots: null\n                            };\n                            this._stats?.time(\"Page Request\");\n                            this._pumpOperatorList(intentArgs);\n                        }\n                        const complete = (error)=>{\n                            intentState.renderTasks.delete(internalRenderTask);\n                            if (this._maybeCleanupAfterRender || intentPrint) this.#pendingCleanup = true;\n                            this.#tryCleanup(!intentPrint);\n                            if (error) {\n                                internalRenderTask.capability.reject(error);\n                                this._abortOperatorList({\n                                    intentState: intentState,\n                                    reason: error instanceof Error ? error : new Error(error)\n                                });\n                            } else internalRenderTask.capability.resolve();\n                            this._stats?.timeEnd(\"Rendering\");\n                            this._stats?.timeEnd(\"Overall\");\n                        };\n                        const internalRenderTask = new InternalRenderTask({\n                            callback: complete,\n                            params: {\n                                canvasContext: canvasContext,\n                                viewport: viewport,\n                                transform: transform,\n                                background: background\n                            },\n                            objs: this.objs,\n                            commonObjs: this.commonObjs,\n                            annotationCanvasMap: annotationCanvasMap,\n                            operatorList: intentState.operatorList,\n                            pageIndex: this._pageIndex,\n                            canvasFactory: this._transport.canvasFactory,\n                            filterFactory: this._transport.filterFactory,\n                            useRequestAnimationFrame: !intentPrint,\n                            pdfBug: this._pdfBug,\n                            pageColors: pageColors\n                        });\n                        (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n                        const renderTask = internalRenderTask.task;\n                        Promise.all([\n                            intentState.displayReadyCapability.promise,\n                            optionalContentConfigPromise\n                        ]).then(([transparency, optionalContentConfig])=>{\n                            if (this.destroyed) {\n                                complete();\n                                return;\n                            }\n                            this._stats?.time(\"Rendering\");\n                            internalRenderTask.initializeGraphics({\n                                transparency: transparency,\n                                optionalContentConfig: optionalContentConfig\n                            });\n                            internalRenderTask.operatorListChanged();\n                        }).catch(complete);\n                        return renderTask;\n                    }\n                    getOperatorList({ intent = \"display\", annotationMode = _util.AnnotationMode.ENABLE, printAnnotationStorage = null } = {}) {\n                        function operatorListChanged() {\n                            if (intentState.operatorList.lastChunk) {\n                                intentState.opListReadCapability.resolve(intentState.operatorList);\n                                intentState.renderTasks.delete(opListTask);\n                            }\n                        }\n                        const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n                        let intentState = this._intentStates.get(intentArgs.cacheKey);\n                        if (!intentState) {\n                            intentState = Object.create(null);\n                            this._intentStates.set(intentArgs.cacheKey, intentState);\n                        }\n                        let opListTask;\n                        if (!intentState.opListReadCapability) {\n                            opListTask = Object.create(null);\n                            opListTask.operatorListChanged = operatorListChanged;\n                            intentState.opListReadCapability = new _util.PromiseCapability();\n                            (intentState.renderTasks ||= new Set()).add(opListTask);\n                            intentState.operatorList = {\n                                fnArray: [],\n                                argsArray: [],\n                                lastChunk: false,\n                                separateAnnots: null\n                            };\n                            this._stats?.time(\"Page Request\");\n                            this._pumpOperatorList(intentArgs);\n                        }\n                        return intentState.opListReadCapability.promise;\n                    }\n                    streamTextContent({ includeMarkedContent = false, disableNormalization = false } = {}) {\n                        const TEXT_CONTENT_CHUNK_SIZE = 100;\n                        return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n                            pageIndex: this._pageIndex,\n                            includeMarkedContent: includeMarkedContent === true,\n                            disableNormalization: disableNormalization === true\n                        }, {\n                            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n                            size (textContent) {\n                                return textContent.items.length;\n                            }\n                        });\n                    }\n                    getTextContent(params = {}) {\n                        if (this._transport._htmlForXfa) return this.getXfa().then((xfa)=>{\n                            return _xfa_text.XfaText.textContent(xfa);\n                        });\n                        const readableStream = this.streamTextContent(params);\n                        return new Promise(function(resolve, reject) {\n                            function pump() {\n                                reader.read().then(function({ value, done }) {\n                                    if (done) {\n                                        resolve(textContent);\n                                        return;\n                                    }\n                                    Object.assign(textContent.styles, value.styles);\n                                    textContent.items.push(...value.items);\n                                    pump();\n                                }, reject);\n                            }\n                            const reader = readableStream.getReader();\n                            const textContent = {\n                                items: [],\n                                styles: Object.create(null)\n                            };\n                            pump();\n                        });\n                    }\n                    getStructTree() {\n                        return this._transport.getStructTree(this._pageIndex);\n                    }\n                    _destroy() {\n                        this.destroyed = true;\n                        const waitOn = [];\n                        for (const intentState of this._intentStates.values()){\n                            this._abortOperatorList({\n                                intentState: intentState,\n                                reason: new Error(\"Page was destroyed.\"),\n                                force: true\n                            });\n                            if (intentState.opListReadCapability) continue;\n                            for (const internalRenderTask of intentState.renderTasks){\n                                waitOn.push(internalRenderTask.completed);\n                                internalRenderTask.cancel();\n                            }\n                        }\n                        this.objs.clear();\n                        this.#pendingCleanup = false;\n                        this.#abortDelayedCleanup();\n                        return Promise.all(waitOn);\n                    }\n                    cleanup(resetStats = false) {\n                        this.#pendingCleanup = true;\n                        const success = this.#tryCleanup(false);\n                        if (resetStats && success) this._stats &&= new _display_utils.StatTimer();\n                        return success;\n                    }\n                    #tryCleanup(delayed = false) {\n                        this.#abortDelayedCleanup();\n                        if (!this.#pendingCleanup || this.destroyed) return false;\n                        if (delayed) {\n                            this.#delayedCleanupTimeout = setTimeout(()=>{\n                                this.#delayedCleanupTimeout = null;\n                                this.#tryCleanup(false);\n                            }, DELAYED_CLEANUP_TIMEOUT);\n                            return false;\n                        }\n                        for (const { renderTasks, operatorList } of this._intentStates.values()){\n                            if (renderTasks.size > 0 || !operatorList.lastChunk) return false;\n                        }\n                        this._intentStates.clear();\n                        this.objs.clear();\n                        this.#pendingCleanup = false;\n                        return true;\n                    }\n                    #abortDelayedCleanup() {\n                        if (this.#delayedCleanupTimeout) {\n                            clearTimeout(this.#delayedCleanupTimeout);\n                            this.#delayedCleanupTimeout = null;\n                        }\n                    }\n                    _startRenderPage(transparency, cacheKey) {\n                        const intentState = this._intentStates.get(cacheKey);\n                        if (!intentState) return;\n                        this._stats?.timeEnd(\"Page Request\");\n                        intentState.displayReadyCapability?.resolve(transparency);\n                    }\n                    _renderPageChunk(operatorListChunk, intentState) {\n                        for(let i = 0, ii = operatorListChunk.length; i < ii; i++){\n                            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n                            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n                        }\n                        intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n                        intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n                        for (const internalRenderTask of intentState.renderTasks)internalRenderTask.operatorListChanged();\n                        if (operatorListChunk.lastChunk) this.#tryCleanup(true);\n                    }\n                    _pumpOperatorList({ renderingIntent, cacheKey, annotationStorageSerializable }) {\n                        const { map, transfers } = annotationStorageSerializable;\n                        const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n                            pageIndex: this._pageIndex,\n                            intent: renderingIntent,\n                            cacheKey: cacheKey,\n                            annotationStorage: map\n                        }, transfers);\n                        const reader = readableStream.getReader();\n                        const intentState = this._intentStates.get(cacheKey);\n                        intentState.streamReader = reader;\n                        const pump = ()=>{\n                            reader.read().then(({ value, done })=>{\n                                if (done) {\n                                    intentState.streamReader = null;\n                                    return;\n                                }\n                                if (this._transport.destroyed) return;\n                                this._renderPageChunk(value, intentState);\n                                pump();\n                            }, (reason)=>{\n                                intentState.streamReader = null;\n                                if (this._transport.destroyed) return;\n                                if (intentState.operatorList) {\n                                    intentState.operatorList.lastChunk = true;\n                                    for (const internalRenderTask of intentState.renderTasks)internalRenderTask.operatorListChanged();\n                                    this.#tryCleanup(true);\n                                }\n                                if (intentState.displayReadyCapability) intentState.displayReadyCapability.reject(reason);\n                                else if (intentState.opListReadCapability) intentState.opListReadCapability.reject(reason);\n                                else throw reason;\n                            });\n                        };\n                        pump();\n                    }\n                    _abortOperatorList({ intentState, reason, force = false }) {\n                        if (!intentState.streamReader) return;\n                        if (intentState.streamReaderCancelTimeout) {\n                            clearTimeout(intentState.streamReaderCancelTimeout);\n                            intentState.streamReaderCancelTimeout = null;\n                        }\n                        if (!force) {\n                            if (intentState.renderTasks.size > 0) return;\n                            if (reason instanceof _display_utils.RenderingCancelledException) {\n                                let delay = RENDERING_CANCELLED_TIMEOUT;\n                                if (reason.extraDelay > 0 && reason.extraDelay < 1000) delay += reason.extraDelay;\n                                intentState.streamReaderCancelTimeout = setTimeout(()=>{\n                                    intentState.streamReaderCancelTimeout = null;\n                                    this._abortOperatorList({\n                                        intentState: intentState,\n                                        reason: reason,\n                                        force: true\n                                    });\n                                }, delay);\n                                return;\n                            }\n                        }\n                        intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(()=>{});\n                        intentState.streamReader = null;\n                        if (this._transport.destroyed) return;\n                        for (const [curCacheKey, curIntentState] of this._intentStates)if (curIntentState === intentState) {\n                            this._intentStates.delete(curCacheKey);\n                            break;\n                        }\n                        this.cleanup();\n                    }\n                    get stats() {\n                        return this._stats;\n                    }\n                }\n                exports.PDFPageProxy = PDFPageProxy;\n                class LoopbackPort {\n                    #listeners = new Set();\n                    #deferred = Promise.resolve();\n                    postMessage(obj, transfer) {\n                        const event = {\n                            data: structuredClone(obj, transfer ? {\n                                transfer: transfer\n                            } : null)\n                        };\n                        this.#deferred.then(()=>{\n                            for (const listener of this.#listeners)listener.call(this, event);\n                        });\n                    }\n                    addEventListener(name, listener) {\n                        this.#listeners.add(listener);\n                    }\n                    removeEventListener(name, listener) {\n                        this.#listeners.delete(listener);\n                    }\n                    terminate() {\n                        this.#listeners.clear();\n                    }\n                }\n                exports.LoopbackPort = LoopbackPort;\n                const PDFWorkerUtil = {\n                    isWorkerDisabled: false,\n                    fallbackWorkerSrc: null,\n                    fakeWorkerId: 0\n                };\n                exports.PDFWorkerUtil = PDFWorkerUtil;\n                if (_util.isNodeJS && true) {\n                    PDFWorkerUtil.isWorkerDisabled = true;\n                    PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n                } else if (typeof document === \"object\") {\n                    const pdfjsFilePath = document?.currentScript?.src;\n                    if (pdfjsFilePath) PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n                }\n                PDFWorkerUtil.isSameOrigin = function(baseUrl, otherUrl) {\n                    let base;\n                    try {\n                        base = new URL(baseUrl);\n                        if (!base.origin || base.origin === \"null\") return false;\n                    } catch  {\n                        return false;\n                    }\n                    const other = new URL(otherUrl, base);\n                    return base.origin === other.origin;\n                };\n                PDFWorkerUtil.createCDNWrapper = function(url) {\n                    const wrapper = `importScripts(\"${url}\");`;\n                    return URL.createObjectURL(new Blob([\n                        wrapper\n                    ]));\n                };\n                class PDFWorker {\n                    static #workerPorts;\n                    constructor({ name = null, port = null, verbosity = (0, _util.getVerbosityLevel)() } = {}){\n                        this.name = name;\n                        this.destroyed = false;\n                        this.verbosity = verbosity;\n                        this._readyCapability = new _util.PromiseCapability();\n                        this._port = null;\n                        this._webWorker = null;\n                        this._messageHandler = null;\n                        if (port) {\n                            if (PDFWorker.#workerPorts?.has(port)) throw new Error(\"Cannot use more than one PDFWorker per port.\");\n                            (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n                            this._initializeFromPort(port);\n                            return;\n                        }\n                        this._initialize();\n                    }\n                    get promise() {\n                        return this._readyCapability.promise;\n                    }\n                    get port() {\n                        return this._port;\n                    }\n                    get messageHandler() {\n                        return this._messageHandler;\n                    }\n                    _initializeFromPort(port) {\n                        this._port = port;\n                        this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n                        this._messageHandler.on(\"ready\", function() {});\n                        this._readyCapability.resolve();\n                        this._messageHandler.send(\"configure\", {\n                            verbosity: this.verbosity\n                        });\n                    }\n                    _initialize() {\n                        if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n                            let { workerSrc } = PDFWorker;\n                            try {\n                                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                                const worker = new Worker(workerSrc);\n                                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                                const terminateEarly = ()=>{\n                                    worker.removeEventListener(\"error\", onWorkerError);\n                                    messageHandler.destroy();\n                                    worker.terminate();\n                                    if (this.destroyed) this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                                    else this._setupFakeWorker();\n                                };\n                                const onWorkerError = ()=>{\n                                    if (!this._webWorker) terminateEarly();\n                                };\n                                worker.addEventListener(\"error\", onWorkerError);\n                                messageHandler.on(\"test\", (data)=>{\n                                    worker.removeEventListener(\"error\", onWorkerError);\n                                    if (this.destroyed) {\n                                        terminateEarly();\n                                        return;\n                                    }\n                                    if (data) {\n                                        this._messageHandler = messageHandler;\n                                        this._port = worker;\n                                        this._webWorker = worker;\n                                        this._readyCapability.resolve();\n                                        messageHandler.send(\"configure\", {\n                                            verbosity: this.verbosity\n                                        });\n                                    } else {\n                                        this._setupFakeWorker();\n                                        messageHandler.destroy();\n                                        worker.terminate();\n                                    }\n                                });\n                                messageHandler.on(\"ready\", (data)=>{\n                                    worker.removeEventListener(\"error\", onWorkerError);\n                                    if (this.destroyed) {\n                                        terminateEarly();\n                                        return;\n                                    }\n                                    try {\n                                        sendTest();\n                                    } catch  {\n                                        this._setupFakeWorker();\n                                    }\n                                });\n                                const sendTest = ()=>{\n                                    const testObj = new Uint8Array();\n                                    messageHandler.send(\"test\", testObj, [\n                                        testObj.buffer\n                                    ]);\n                                };\n                                sendTest();\n                                return;\n                            } catch  {\n                                (0, _util.info)(\"The worker has been disabled.\");\n                            }\n                        }\n                        this._setupFakeWorker();\n                    }\n                    _setupFakeWorker() {\n                        if (!PDFWorkerUtil.isWorkerDisabled) {\n                            (0, _util.warn)(\"Setting up fake worker.\");\n                            PDFWorkerUtil.isWorkerDisabled = true;\n                        }\n                        PDFWorker._setupFakeWorkerGlobal.then((WorkerMessageHandler)=>{\n                            if (this.destroyed) {\n                                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                                return;\n                            }\n                            const port = new LoopbackPort();\n                            this._port = port;\n                            const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n                            const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n                            WorkerMessageHandler.setup(workerHandler, port);\n                            const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n                            this._messageHandler = messageHandler;\n                            this._readyCapability.resolve();\n                            messageHandler.send(\"configure\", {\n                                verbosity: this.verbosity\n                            });\n                        }).catch((reason)=>{\n                            this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n                        });\n                    }\n                    destroy() {\n                        this.destroyed = true;\n                        if (this._webWorker) {\n                            this._webWorker.terminate();\n                            this._webWorker = null;\n                        }\n                        PDFWorker.#workerPorts?.delete(this._port);\n                        this._port = null;\n                        if (this._messageHandler) {\n                            this._messageHandler.destroy();\n                            this._messageHandler = null;\n                        }\n                    }\n                    static fromPort(params) {\n                        if (!params?.port) throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n                        const cachedPort = this.#workerPorts?.get(params.port);\n                        if (cachedPort) {\n                            if (cachedPort._pendingDestroy) throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n                            return cachedPort;\n                        }\n                        return new PDFWorker(params);\n                    }\n                    static get workerSrc() {\n                        if (_worker_options.GlobalWorkerOptions.workerSrc) return _worker_options.GlobalWorkerOptions.workerSrc;\n                        if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n                            if (!_util.isNodeJS) (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n                            return PDFWorkerUtil.fallbackWorkerSrc;\n                        }\n                        throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n                    }\n                    static get _mainThreadWorkerMessageHandler() {\n                        try {\n                            return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n                        } catch  {\n                            return null;\n                        }\n                    }\n                    static get _setupFakeWorkerGlobal() {\n                        const loader = async ()=>{\n                            const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n                            if (mainWorkerMessageHandler) return mainWorkerMessageHandler;\n                            if (_util.isNodeJS && true) {\n                                const worker = eval(\"require\")(this.workerSrc);\n                                return worker.WorkerMessageHandler;\n                            }\n                            await (0, _display_utils.loadScript)(this.workerSrc);\n                            return window.pdfjsWorker.WorkerMessageHandler;\n                        };\n                        return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n                    }\n                }\n                exports.PDFWorker = PDFWorker;\n                class WorkerTransport {\n                    #methodPromises = new Map();\n                    #pageCache = new Map();\n                    #pagePromises = new Map();\n                    #passwordCapability = null;\n                    constructor(messageHandler, loadingTask, networkStream, params, factory){\n                        this.messageHandler = messageHandler;\n                        this.loadingTask = loadingTask;\n                        this.commonObjs = new PDFObjects();\n                        this.fontLoader = new _font_loader.FontLoader({\n                            ownerDocument: params.ownerDocument,\n                            styleElement: params.styleElement\n                        });\n                        this._params = params;\n                        this.canvasFactory = factory.canvasFactory;\n                        this.filterFactory = factory.filterFactory;\n                        this.cMapReaderFactory = factory.cMapReaderFactory;\n                        this.standardFontDataFactory = factory.standardFontDataFactory;\n                        this.destroyed = false;\n                        this.destroyCapability = null;\n                        this._networkStream = networkStream;\n                        this._fullReader = null;\n                        this._lastProgress = null;\n                        this.downloadInfoCapability = new _util.PromiseCapability();\n                        this.setupMessageHandler();\n                    }\n                    #cacheSimpleMethod(name, data = null) {\n                        const cachedPromise = this.#methodPromises.get(name);\n                        if (cachedPromise) return cachedPromise;\n                        const promise = this.messageHandler.sendWithPromise(name, data);\n                        this.#methodPromises.set(name, promise);\n                        return promise;\n                    }\n                    get annotationStorage() {\n                        return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n                    }\n                    getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, printAnnotationStorage = null, isOpList = false) {\n                        let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n                        let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n                        switch(intent){\n                            case \"any\":\n                                renderingIntent = _util.RenderingIntentFlag.ANY;\n                                break;\n                            case \"display\":\n                                break;\n                            case \"print\":\n                                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                                break;\n                            default:\n                                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n                        }\n                        switch(annotationMode){\n                            case _util.AnnotationMode.DISABLE:\n                                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                                break;\n                            case _util.AnnotationMode.ENABLE:\n                                break;\n                            case _util.AnnotationMode.ENABLE_FORMS:\n                                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                                break;\n                            case _util.AnnotationMode.ENABLE_STORAGE:\n                                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                                const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n                                annotationStorageSerializable = annotationStorage.serializable;\n                                break;\n                            default:\n                                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n                        }\n                        if (isOpList) renderingIntent += _util.RenderingIntentFlag.OPLIST;\n                        return {\n                            renderingIntent: renderingIntent,\n                            cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n                            annotationStorageSerializable: annotationStorageSerializable\n                        };\n                    }\n                    destroy() {\n                        if (this.destroyCapability) return this.destroyCapability.promise;\n                        this.destroyed = true;\n                        this.destroyCapability = new _util.PromiseCapability();\n                        this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n                        const waitOn = [];\n                        for (const page of this.#pageCache.values())waitOn.push(page._destroy());\n                        this.#pageCache.clear();\n                        this.#pagePromises.clear();\n                        if (this.hasOwnProperty(\"annotationStorage\")) this.annotationStorage.resetModified();\n                        const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n                        waitOn.push(terminated);\n                        Promise.all(waitOn).then(()=>{\n                            this.commonObjs.clear();\n                            this.fontLoader.clear();\n                            this.#methodPromises.clear();\n                            this.filterFactory.destroy();\n                            this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n                            if (this.messageHandler) {\n                                this.messageHandler.destroy();\n                                this.messageHandler = null;\n                            }\n                            this.destroyCapability.resolve();\n                        }, this.destroyCapability.reject);\n                        return this.destroyCapability.promise;\n                    }\n                    setupMessageHandler() {\n                        const { messageHandler, loadingTask } = this;\n                        messageHandler.on(\"GetReader\", (data, sink)=>{\n                            (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n                            this._fullReader = this._networkStream.getFullReader();\n                            this._fullReader.onProgress = (evt)=>{\n                                this._lastProgress = {\n                                    loaded: evt.loaded,\n                                    total: evt.total\n                                };\n                            };\n                            sink.onPull = ()=>{\n                                this._fullReader.read().then(function({ value, done }) {\n                                    if (done) {\n                                        sink.close();\n                                        return;\n                                    }\n                                    (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n                                    sink.enqueue(new Uint8Array(value), 1, [\n                                        value\n                                    ]);\n                                }).catch((reason)=>{\n                                    sink.error(reason);\n                                });\n                            };\n                            sink.onCancel = (reason)=>{\n                                this._fullReader.cancel(reason);\n                                sink.ready.catch((readyReason)=>{\n                                    if (this.destroyed) return;\n                                    throw readyReason;\n                                });\n                            };\n                        });\n                        messageHandler.on(\"ReaderHeadersReady\", (data)=>{\n                            const headersCapability = new _util.PromiseCapability();\n                            const fullReader = this._fullReader;\n                            fullReader.headersReady.then(()=>{\n                                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                                    if (this._lastProgress) loadingTask.onProgress?.(this._lastProgress);\n                                    fullReader.onProgress = (evt)=>{\n                                        loadingTask.onProgress?.({\n                                            loaded: evt.loaded,\n                                            total: evt.total\n                                        });\n                                    };\n                                }\n                                headersCapability.resolve({\n                                    isStreamingSupported: fullReader.isStreamingSupported,\n                                    isRangeSupported: fullReader.isRangeSupported,\n                                    contentLength: fullReader.contentLength\n                                });\n                            }, headersCapability.reject);\n                            return headersCapability.promise;\n                        });\n                        messageHandler.on(\"GetRangeReader\", (data, sink)=>{\n                            (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n                            const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n                            if (!rangeReader) {\n                                sink.close();\n                                return;\n                            }\n                            sink.onPull = ()=>{\n                                rangeReader.read().then(function({ value, done }) {\n                                    if (done) {\n                                        sink.close();\n                                        return;\n                                    }\n                                    (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n                                    sink.enqueue(new Uint8Array(value), 1, [\n                                        value\n                                    ]);\n                                }).catch((reason)=>{\n                                    sink.error(reason);\n                                });\n                            };\n                            sink.onCancel = (reason)=>{\n                                rangeReader.cancel(reason);\n                                sink.ready.catch((readyReason)=>{\n                                    if (this.destroyed) return;\n                                    throw readyReason;\n                                });\n                            };\n                        });\n                        messageHandler.on(\"GetDoc\", ({ pdfInfo })=>{\n                            this._numPages = pdfInfo.numPages;\n                            this._htmlForXfa = pdfInfo.htmlForXfa;\n                            delete pdfInfo.htmlForXfa;\n                            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n                        });\n                        messageHandler.on(\"DocException\", function(ex) {\n                            let reason;\n                            switch(ex.name){\n                                case \"PasswordException\":\n                                    reason = new _util.PasswordException(ex.message, ex.code);\n                                    break;\n                                case \"InvalidPDFException\":\n                                    reason = new _util.InvalidPDFException(ex.message);\n                                    break;\n                                case \"MissingPDFException\":\n                                    reason = new _util.MissingPDFException(ex.message);\n                                    break;\n                                case \"UnexpectedResponseException\":\n                                    reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                                    break;\n                                case \"UnknownErrorException\":\n                                    reason = new _util.UnknownErrorException(ex.message, ex.details);\n                                    break;\n                                default:\n                                    (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n                            }\n                            loadingTask._capability.reject(reason);\n                        });\n                        messageHandler.on(\"PasswordRequest\", (exception)=>{\n                            this.#passwordCapability = new _util.PromiseCapability();\n                            if (loadingTask.onPassword) {\n                                const updatePassword = (password)=>{\n                                    if (password instanceof Error) this.#passwordCapability.reject(password);\n                                    else this.#passwordCapability.resolve({\n                                        password: password\n                                    });\n                                };\n                                try {\n                                    loadingTask.onPassword(updatePassword, exception.code);\n                                } catch (ex) {\n                                    this.#passwordCapability.reject(ex);\n                                }\n                            } else this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n                            return this.#passwordCapability.promise;\n                        });\n                        messageHandler.on(\"DataLoaded\", (data)=>{\n                            loadingTask.onProgress?.({\n                                loaded: data.length,\n                                total: data.length\n                            });\n                            this.downloadInfoCapability.resolve(data);\n                        });\n                        messageHandler.on(\"StartRenderPage\", (data)=>{\n                            if (this.destroyed) return;\n                            const page = this.#pageCache.get(data.pageIndex);\n                            page._startRenderPage(data.transparency, data.cacheKey);\n                        });\n                        messageHandler.on(\"commonobj\", ([id, type, exportedData])=>{\n                            if (this.destroyed) return;\n                            if (this.commonObjs.has(id)) return;\n                            switch(type){\n                                case \"Font\":\n                                    const params = this._params;\n                                    if (\"error\" in exportedData) {\n                                        const exportedError = exportedData.error;\n                                        (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                                        this.commonObjs.resolve(id, exportedError);\n                                        break;\n                                    }\n                                    const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url)=>globalThis.FontInspector.fontAdded(font, url) : null;\n                                    const font = new _font_loader.FontFaceObject(exportedData, {\n                                        isEvalSupported: params.isEvalSupported,\n                                        disableFontFace: params.disableFontFace,\n                                        ignoreErrors: params.ignoreErrors,\n                                        inspectFont: inspectFont\n                                    });\n                                    this.fontLoader.bind(font).catch((reason)=>{\n                                        return messageHandler.sendWithPromise(\"FontFallback\", {\n                                            id: id\n                                        });\n                                    }).finally(()=>{\n                                        if (!params.fontExtraProperties && font.data) font.data = null;\n                                        this.commonObjs.resolve(id, font);\n                                    });\n                                    break;\n                                case \"FontPath\":\n                                case \"Image\":\n                                case \"Pattern\":\n                                    this.commonObjs.resolve(id, exportedData);\n                                    break;\n                                default:\n                                    throw new Error(`Got unknown common object type ${type}`);\n                            }\n                        });\n                        messageHandler.on(\"obj\", ([id, pageIndex, type, imageData])=>{\n                            if (this.destroyed) return;\n                            const pageProxy = this.#pageCache.get(pageIndex);\n                            if (pageProxy.objs.has(id)) return;\n                            switch(type){\n                                case \"Image\":\n                                    pageProxy.objs.resolve(id, imageData);\n                                    if (imageData) {\n                                        let length;\n                                        if (imageData.bitmap) {\n                                            const { width, height } = imageData;\n                                            length = width * height * 4;\n                                        } else length = imageData.data?.length || 0;\n                                        if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) pageProxy._maybeCleanupAfterRender = true;\n                                    }\n                                    break;\n                                case \"Pattern\":\n                                    pageProxy.objs.resolve(id, imageData);\n                                    break;\n                                default:\n                                    throw new Error(`Got unknown object type ${type}`);\n                            }\n                        });\n                        messageHandler.on(\"DocProgress\", (data)=>{\n                            if (this.destroyed) return;\n                            loadingTask.onProgress?.({\n                                loaded: data.loaded,\n                                total: data.total\n                            });\n                        });\n                        messageHandler.on(\"FetchBuiltInCMap\", (data)=>{\n                            if (this.destroyed) return Promise.reject(new Error(\"Worker was destroyed.\"));\n                            if (!this.cMapReaderFactory) return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n                            return this.cMapReaderFactory.fetch(data);\n                        });\n                        messageHandler.on(\"FetchStandardFontData\", (data)=>{\n                            if (this.destroyed) return Promise.reject(new Error(\"Worker was destroyed.\"));\n                            if (!this.standardFontDataFactory) return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n                            return this.standardFontDataFactory.fetch(data);\n                        });\n                    }\n                    getData() {\n                        return this.messageHandler.sendWithPromise(\"GetData\", null);\n                    }\n                    saveDocument() {\n                        if (this.annotationStorage.size <= 0) (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, please use the getData-method instead.\");\n                        const { map, transfers } = this.annotationStorage.serializable;\n                        return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n                            isPureXfa: !!this._htmlForXfa,\n                            numPages: this._numPages,\n                            annotationStorage: map,\n                            filename: this._fullReader?.filename ?? null\n                        }, transfers).finally(()=>{\n                            this.annotationStorage.resetModified();\n                        });\n                    }\n                    getPage(pageNumber) {\n                        if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) return Promise.reject(new Error(\"Invalid page request.\"));\n                        const pageIndex = pageNumber - 1, cachedPromise = this.#pagePromises.get(pageIndex);\n                        if (cachedPromise) return cachedPromise;\n                        const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n                            pageIndex: pageIndex\n                        }).then((pageInfo)=>{\n                            if (this.destroyed) throw new Error(\"Transport destroyed\");\n                            const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n                            this.#pageCache.set(pageIndex, page);\n                            return page;\n                        });\n                        this.#pagePromises.set(pageIndex, promise);\n                        return promise;\n                    }\n                    getPageIndex(ref) {\n                        if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n                        return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n                            num: ref.num,\n                            gen: ref.gen\n                        });\n                    }\n                    getAnnotations(pageIndex, intent) {\n                        return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n                            pageIndex: pageIndex,\n                            intent: intent\n                        });\n                    }\n                    getFieldObjects() {\n                        return this.#cacheSimpleMethod(\"GetFieldObjects\");\n                    }\n                    hasJSActions() {\n                        return this.#cacheSimpleMethod(\"HasJSActions\");\n                    }\n                    getCalculationOrderIds() {\n                        return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n                    }\n                    getDestinations() {\n                        return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n                    }\n                    getDestination(id) {\n                        if (typeof id !== \"string\") return Promise.reject(new Error(\"Invalid destination request.\"));\n                        return this.messageHandler.sendWithPromise(\"GetDestination\", {\n                            id: id\n                        });\n                    }\n                    getPageLabels() {\n                        return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n                    }\n                    getPageLayout() {\n                        return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n                    }\n                    getPageMode() {\n                        return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n                    }\n                    getViewerPreferences() {\n                        return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n                    }\n                    getOpenAction() {\n                        return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n                    }\n                    getAttachments() {\n                        return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n                    }\n                    getDocJSActions() {\n                        return this.#cacheSimpleMethod(\"GetDocJSActions\");\n                    }\n                    getPageJSActions(pageIndex) {\n                        return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n                            pageIndex: pageIndex\n                        });\n                    }\n                    getStructTree(pageIndex) {\n                        return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n                            pageIndex: pageIndex\n                        });\n                    }\n                    getOutline() {\n                        return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n                    }\n                    getOptionalContentConfig() {\n                        return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then((results)=>{\n                            return new _optional_content_config.OptionalContentConfig(results);\n                        });\n                    }\n                    getPermissions() {\n                        return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n                    }\n                    getMetadata() {\n                        const name = \"GetMetadata\", cachedPromise = this.#methodPromises.get(name);\n                        if (cachedPromise) return cachedPromise;\n                        const promise = this.messageHandler.sendWithPromise(name, null).then((results)=>{\n                            return {\n                                info: results[0],\n                                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                                contentDispositionFilename: this._fullReader?.filename ?? null,\n                                contentLength: this._fullReader?.contentLength ?? null\n                            };\n                        });\n                        this.#methodPromises.set(name, promise);\n                        return promise;\n                    }\n                    getMarkInfo() {\n                        return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n                    }\n                    async startCleanup(keepLoadedFonts = false) {\n                        if (this.destroyed) return;\n                        await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n                        for (const page of this.#pageCache.values()){\n                            const cleanupSuccessful = page.cleanup();\n                            if (!cleanupSuccessful) throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n                        }\n                        this.commonObjs.clear();\n                        if (!keepLoadedFonts) this.fontLoader.clear();\n                        this.#methodPromises.clear();\n                        this.filterFactory.destroy(true);\n                    }\n                    get loadingParams() {\n                        const { disableAutoFetch, enableXfa } = this._params;\n                        return (0, _util.shadow)(this, \"loadingParams\", {\n                            disableAutoFetch: disableAutoFetch,\n                            enableXfa: enableXfa\n                        });\n                    }\n                }\n                class PDFObjects {\n                    #objs = Object.create(null);\n                    #ensureObj(objId) {\n                        return this.#objs[objId] ||= {\n                            capability: new _util.PromiseCapability(),\n                            data: null\n                        };\n                    }\n                    get(objId, callback = null) {\n                        if (callback) {\n                            const obj = this.#ensureObj(objId);\n                            obj.capability.promise.then(()=>callback(obj.data));\n                            return null;\n                        }\n                        const obj = this.#objs[objId];\n                        if (!obj?.capability.settled) throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n                        return obj.data;\n                    }\n                    has(objId) {\n                        const obj = this.#objs[objId];\n                        return obj?.capability.settled || false;\n                    }\n                    resolve(objId, data = null) {\n                        const obj = this.#ensureObj(objId);\n                        obj.data = data;\n                        obj.capability.resolve();\n                    }\n                    clear() {\n                        for(const objId in this.#objs){\n                            const { data } = this.#objs[objId];\n                            data?.bitmap?.close();\n                        }\n                        this.#objs = Object.create(null);\n                    }\n                }\n                class RenderTask {\n                    #internalRenderTask = null;\n                    constructor(internalRenderTask){\n                        this.#internalRenderTask = internalRenderTask;\n                        this.onContinue = null;\n                    }\n                    get promise() {\n                        return this.#internalRenderTask.capability.promise;\n                    }\n                    cancel(extraDelay = 0) {\n                        this.#internalRenderTask.cancel(null, extraDelay);\n                    }\n                    get separateAnnots() {\n                        const { separateAnnots } = this.#internalRenderTask.operatorList;\n                        if (!separateAnnots) return false;\n                        const { annotationCanvasMap } = this.#internalRenderTask;\n                        return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n                    }\n                }\n                exports.RenderTask = RenderTask;\n                class InternalRenderTask {\n                    static #canvasInUse = new WeakSet();\n                    constructor({ callback, params, objs, commonObjs, annotationCanvasMap, operatorList, pageIndex, canvasFactory, filterFactory, useRequestAnimationFrame = false, pdfBug = false, pageColors = null }){\n                        this.callback = callback;\n                        this.params = params;\n                        this.objs = objs;\n                        this.commonObjs = commonObjs;\n                        this.annotationCanvasMap = annotationCanvasMap;\n                        this.operatorListIdx = null;\n                        this.operatorList = operatorList;\n                        this._pageIndex = pageIndex;\n                        this.canvasFactory = canvasFactory;\n                        this.filterFactory = filterFactory;\n                        this._pdfBug = pdfBug;\n                        this.pageColors = pageColors;\n                        this.running = false;\n                        this.graphicsReadyCallback = null;\n                        this.graphicsReady = false;\n                        this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n                        this.cancelled = false;\n                        this.capability = new _util.PromiseCapability();\n                        this.task = new RenderTask(this);\n                        this._cancelBound = this.cancel.bind(this);\n                        this._continueBound = this._continue.bind(this);\n                        this._scheduleNextBound = this._scheduleNext.bind(this);\n                        this._nextBound = this._next.bind(this);\n                        this._canvas = params.canvasContext.canvas;\n                    }\n                    get completed() {\n                        return this.capability.promise.catch(function() {});\n                    }\n                    initializeGraphics({ transparency = false, optionalContentConfig }) {\n                        if (this.cancelled) return;\n                        if (this._canvas) {\n                            if (InternalRenderTask.#canvasInUse.has(this._canvas)) throw new Error(\"Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.\");\n                            InternalRenderTask.#canvasInUse.add(this._canvas);\n                        }\n                        if (this._pdfBug && globalThis.StepperManager?.enabled) {\n                            this.stepper = globalThis.StepperManager.create(this._pageIndex);\n                            this.stepper.init(this.operatorList);\n                            this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n                        }\n                        const { canvasContext, viewport, transform, background } = this.params;\n                        this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n                            optionalContentConfig: optionalContentConfig\n                        }, this.annotationCanvasMap, this.pageColors);\n                        this.gfx.beginDrawing({\n                            transform: transform,\n                            viewport: viewport,\n                            transparency: transparency,\n                            background: background\n                        });\n                        this.operatorListIdx = 0;\n                        this.graphicsReady = true;\n                        this.graphicsReadyCallback?.();\n                    }\n                    cancel(error = null, extraDelay = 0) {\n                        this.running = false;\n                        this.cancelled = true;\n                        this.gfx?.endDrawing();\n                        InternalRenderTask.#canvasInUse.delete(this._canvas);\n                        this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n                    }\n                    operatorListChanged() {\n                        if (!this.graphicsReady) {\n                            this.graphicsReadyCallback ||= this._continueBound;\n                            return;\n                        }\n                        this.stepper?.updateOperatorList(this.operatorList);\n                        if (this.running) return;\n                        this._continue();\n                    }\n                    _continue() {\n                        this.running = true;\n                        if (this.cancelled) return;\n                        if (this.task.onContinue) this.task.onContinue(this._scheduleNextBound);\n                        else this._scheduleNext();\n                    }\n                    _scheduleNext() {\n                        if (this._useRequestAnimationFrame) window.requestAnimationFrame(()=>{\n                            this._nextBound().catch(this._cancelBound);\n                        });\n                        else Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n                    }\n                    async _next() {\n                        if (this.cancelled) return;\n                        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n                        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                            this.running = false;\n                            if (this.operatorList.lastChunk) {\n                                this.gfx.endDrawing();\n                                InternalRenderTask.#canvasInUse.delete(this._canvas);\n                                this.callback();\n                            }\n                        }\n                    }\n                }\n                const version = \"3.11.174\";\n                exports.version = version;\n                const build = \"ce8716743\";\n                exports.build = build;\n            /***/ },\n            /* 3 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _editor = __w_pdfjs_require__(4);\n                var _murmurhash = __w_pdfjs_require__(8);\n                const SerializableEmpty = Object.freeze({\n                    map: null,\n                    hash: \"\",\n                    transfers: undefined\n                });\n                exports.SerializableEmpty = SerializableEmpty;\n                class AnnotationStorage {\n                    #modified = false;\n                    #storage = new Map();\n                    constructor(){\n                        this.onSetModified = null;\n                        this.onResetModified = null;\n                        this.onAnnotationEditor = null;\n                    }\n                    getValue(key, defaultValue) {\n                        const value = this.#storage.get(key);\n                        if (value === undefined) return defaultValue;\n                        return Object.assign(defaultValue, value);\n                    }\n                    getRawValue(key) {\n                        return this.#storage.get(key);\n                    }\n                    remove(key) {\n                        this.#storage.delete(key);\n                        if (this.#storage.size === 0) this.resetModified();\n                        if (typeof this.onAnnotationEditor === \"function\") {\n                            for (const value of this.#storage.values()){\n                                if (value instanceof _editor.AnnotationEditor) return;\n                            }\n                            this.onAnnotationEditor(null);\n                        }\n                    }\n                    setValue(key, value) {\n                        const obj = this.#storage.get(key);\n                        let modified = false;\n                        if (obj !== undefined) {\n                            for (const [entry, val] of Object.entries(value))if (obj[entry] !== val) {\n                                modified = true;\n                                obj[entry] = val;\n                            }\n                        } else {\n                            modified = true;\n                            this.#storage.set(key, value);\n                        }\n                        if (modified) this.#setModified();\n                        if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") this.onAnnotationEditor(value.constructor._type);\n                    }\n                    has(key) {\n                        return this.#storage.has(key);\n                    }\n                    getAll() {\n                        return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n                    }\n                    setAll(obj) {\n                        for (const [key, val] of Object.entries(obj))this.setValue(key, val);\n                    }\n                    get size() {\n                        return this.#storage.size;\n                    }\n                    #setModified() {\n                        if (!this.#modified) {\n                            this.#modified = true;\n                            if (typeof this.onSetModified === \"function\") this.onSetModified();\n                        }\n                    }\n                    resetModified() {\n                        if (this.#modified) {\n                            this.#modified = false;\n                            if (typeof this.onResetModified === \"function\") this.onResetModified();\n                        }\n                    }\n                    get print() {\n                        return new PrintAnnotationStorage(this);\n                    }\n                    get serializable() {\n                        if (this.#storage.size === 0) return SerializableEmpty;\n                        const map = new Map(), hash = new _murmurhash.MurmurHash3_64(), transfers = [];\n                        const context = Object.create(null);\n                        let hasBitmap = false;\n                        for (const [key, val] of this.#storage){\n                            const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n                            if (serialized) {\n                                map.set(key, serialized);\n                                hash.update(`${key}:${JSON.stringify(serialized)}`);\n                                hasBitmap ||= !!serialized.bitmap;\n                            }\n                        }\n                        if (hasBitmap) {\n                            for (const value of map.values())if (value.bitmap) transfers.push(value.bitmap);\n                        }\n                        return map.size > 0 ? {\n                            map: map,\n                            hash: hash.hexdigest(),\n                            transfers: transfers\n                        } : SerializableEmpty;\n                    }\n                }\n                exports.AnnotationStorage = AnnotationStorage;\n                class PrintAnnotationStorage extends AnnotationStorage {\n                    #serializable;\n                    constructor(parent){\n                        super();\n                        const { map, hash, transfers } = parent.serializable;\n                        const clone = structuredClone(map, transfers ? {\n                            transfer: transfers\n                        } : null);\n                        this.#serializable = {\n                            map: clone,\n                            hash: hash,\n                            transfers: transfers\n                        };\n                    }\n                    get print() {\n                        (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n                    }\n                    get serializable() {\n                        return this.#serializable;\n                    }\n                }\n                exports.PrintAnnotationStorage = PrintAnnotationStorage;\n            /***/ },\n            /* 4 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.AnnotationEditor = void 0;\n                var _tools = __w_pdfjs_require__(5);\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                class AnnotationEditor {\n                    #altText = \"\";\n                    #altTextDecorative = false;\n                    #altTextButton = null;\n                    #altTextTooltip = null;\n                    #altTextTooltipTimeout = null;\n                    #keepAspectRatio = false;\n                    #resizersDiv = null;\n                    #boundFocusin = this.focusin.bind(this);\n                    #boundFocusout = this.focusout.bind(this);\n                    #hasBeenClicked = false;\n                    #isEditing = false;\n                    #isInEditMode = false;\n                    _initialOptions = Object.create(null);\n                    _uiManager = null;\n                    _focusEventsAllowed = true;\n                    _l10nPromise = null;\n                    #isDraggable = false;\n                    #zIndex = AnnotationEditor._zIndex++;\n                    static _borderLineWidth = -1;\n                    static _colorManager = new _tools.ColorManager();\n                    static _zIndex = 1;\n                    static SMALL_EDITOR_SIZE = 0;\n                    constructor(parameters){\n                        if (this.constructor === AnnotationEditor) (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n                        this.parent = parameters.parent;\n                        this.id = parameters.id;\n                        this.width = this.height = null;\n                        this.pageIndex = parameters.parent.pageIndex;\n                        this.name = parameters.name;\n                        this.div = null;\n                        this._uiManager = parameters.uiManager;\n                        this.annotationElementId = null;\n                        this._willKeepAspectRatio = false;\n                        this._initialOptions.isCentered = parameters.isCentered;\n                        this._structTreeParentId = null;\n                        const { rotation, rawDims: { pageWidth, pageHeight, pageX, pageY } } = this.parent.viewport;\n                        this.rotation = rotation;\n                        this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n                        this.pageDimensions = [\n                            pageWidth,\n                            pageHeight\n                        ];\n                        this.pageTranslation = [\n                            pageX,\n                            pageY\n                        ];\n                        const [width, height] = this.parentDimensions;\n                        this.x = parameters.x / width;\n                        this.y = parameters.y / height;\n                        this.isAttachedToDOM = false;\n                        this.deleted = false;\n                    }\n                    get editorType() {\n                        return Object.getPrototypeOf(this).constructor._type;\n                    }\n                    static get _defaultLineColor() {\n                        return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n                    }\n                    static deleteAnnotationElement(editor) {\n                        const fakeEditor = new FakeEditor({\n                            id: editor.parent.getNextId(),\n                            parent: editor.parent,\n                            uiManager: editor._uiManager\n                        });\n                        fakeEditor.annotationElementId = editor.annotationElementId;\n                        fakeEditor.deleted = true;\n                        fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n                    }\n                    static initialize(l10n, options = null) {\n                        AnnotationEditor._l10nPromise ||= new Map([\n                            \"editor_alt_text_button_label\",\n                            \"editor_alt_text_edit_button_label\",\n                            \"editor_alt_text_decorative_tooltip\"\n                        ].map((str)=>[\n                                str,\n                                l10n.get(str)\n                            ]));\n                        if (options?.strings) for (const str of options.strings)AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n                        if (AnnotationEditor._borderLineWidth !== -1) return;\n                        const style = getComputedStyle(document.documentElement);\n                        AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n                    }\n                    static updateDefaultParams(_type, _value) {}\n                    static get defaultPropertiesToUpdate() {\n                        return [];\n                    }\n                    static isHandlingMimeForPasting(mime) {\n                        return false;\n                    }\n                    static paste(item, parent) {\n                        (0, _util.unreachable)(\"Not implemented\");\n                    }\n                    get propertiesToUpdate() {\n                        return [];\n                    }\n                    get _isDraggable() {\n                        return this.#isDraggable;\n                    }\n                    set _isDraggable(value) {\n                        this.#isDraggable = value;\n                        this.div?.classList.toggle(\"draggable\", value);\n                    }\n                    center() {\n                        const [pageWidth, pageHeight] = this.pageDimensions;\n                        switch(this.parentRotation){\n                            case 90:\n                                this.x -= this.height * pageHeight / (pageWidth * 2);\n                                this.y += this.width * pageWidth / (pageHeight * 2);\n                                break;\n                            case 180:\n                                this.x += this.width / 2;\n                                this.y += this.height / 2;\n                                break;\n                            case 270:\n                                this.x += this.height * pageHeight / (pageWidth * 2);\n                                this.y -= this.width * pageWidth / (pageHeight * 2);\n                                break;\n                            default:\n                                this.x -= this.width / 2;\n                                this.y -= this.height / 2;\n                                break;\n                        }\n                        this.fixAndSetPosition();\n                    }\n                    addCommands(params) {\n                        this._uiManager.addCommands(params);\n                    }\n                    get currentLayer() {\n                        return this._uiManager.currentLayer;\n                    }\n                    setInBackground() {\n                        this.div.style.zIndex = 0;\n                    }\n                    setInForeground() {\n                        this.div.style.zIndex = this.#zIndex;\n                    }\n                    setParent(parent) {\n                        if (parent !== null) {\n                            this.pageIndex = parent.pageIndex;\n                            this.pageDimensions = parent.pageDimensions;\n                        }\n                        this.parent = parent;\n                    }\n                    focusin(event) {\n                        if (!this._focusEventsAllowed) return;\n                        if (!this.#hasBeenClicked) this.parent.setSelected(this);\n                        else this.#hasBeenClicked = false;\n                    }\n                    focusout(event) {\n                        if (!this._focusEventsAllowed) return;\n                        if (!this.isAttachedToDOM) return;\n                        const target = event.relatedTarget;\n                        if (target?.closest(`#${this.id}`)) return;\n                        event.preventDefault();\n                        if (!this.parent?.isMultipleSelection) this.commitOrRemove();\n                    }\n                    commitOrRemove() {\n                        if (this.isEmpty()) this.remove();\n                        else this.commit();\n                    }\n                    commit() {\n                        this.addToAnnotationStorage();\n                    }\n                    addToAnnotationStorage() {\n                        this._uiManager.addToAnnotationStorage(this);\n                    }\n                    setAt(x, y, tx, ty) {\n                        const [width, height] = this.parentDimensions;\n                        [tx, ty] = this.screenToPageTranslation(tx, ty);\n                        this.x = (x + tx) / width;\n                        this.y = (y + ty) / height;\n                        this.fixAndSetPosition();\n                    }\n                    #translate([width, height], x, y) {\n                        [x, y] = this.screenToPageTranslation(x, y);\n                        this.x += x / width;\n                        this.y += y / height;\n                        this.fixAndSetPosition();\n                    }\n                    translate(x, y) {\n                        this.#translate(this.parentDimensions, x, y);\n                    }\n                    translateInPage(x, y) {\n                        this.#translate(this.pageDimensions, x, y);\n                        this.div.scrollIntoView({\n                            block: \"nearest\"\n                        });\n                    }\n                    drag(tx, ty) {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.x += tx / parentWidth;\n                        this.y += ty / parentHeight;\n                        if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n                            const { x, y } = this.div.getBoundingClientRect();\n                            if (this.parent.findNewParent(this, x, y)) {\n                                this.x -= Math.floor(this.x);\n                                this.y -= Math.floor(this.y);\n                            }\n                        }\n                        let { x, y } = this;\n                        const [bx, by] = this.#getBaseTranslation();\n                        x += bx;\n                        y += by;\n                        this.div.style.left = `${(100 * x).toFixed(2)}%`;\n                        this.div.style.top = `${(100 * y).toFixed(2)}%`;\n                        this.div.scrollIntoView({\n                            block: \"nearest\"\n                        });\n                    }\n                    #getBaseTranslation() {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        const { _borderLineWidth } = AnnotationEditor;\n                        const x = _borderLineWidth / parentWidth;\n                        const y = _borderLineWidth / parentHeight;\n                        switch(this.rotation){\n                            case 90:\n                                return [\n                                    -x,\n                                    y\n                                ];\n                            case 180:\n                                return [\n                                    x,\n                                    y\n                                ];\n                            case 270:\n                                return [\n                                    x,\n                                    -y\n                                ];\n                            default:\n                                return [\n                                    -x,\n                                    -y\n                                ];\n                        }\n                    }\n                    fixAndSetPosition() {\n                        const [pageWidth, pageHeight] = this.pageDimensions;\n                        let { x, y, width, height } = this;\n                        width *= pageWidth;\n                        height *= pageHeight;\n                        x *= pageWidth;\n                        y *= pageHeight;\n                        switch(this.rotation){\n                            case 0:\n                                x = Math.max(0, Math.min(pageWidth - width, x));\n                                y = Math.max(0, Math.min(pageHeight - height, y));\n                                break;\n                            case 90:\n                                x = Math.max(0, Math.min(pageWidth - height, x));\n                                y = Math.min(pageHeight, Math.max(width, y));\n                                break;\n                            case 180:\n                                x = Math.min(pageWidth, Math.max(width, x));\n                                y = Math.min(pageHeight, Math.max(height, y));\n                                break;\n                            case 270:\n                                x = Math.min(pageWidth, Math.max(height, x));\n                                y = Math.max(0, Math.min(pageHeight - width, y));\n                                break;\n                        }\n                        this.x = x /= pageWidth;\n                        this.y = y /= pageHeight;\n                        const [bx, by] = this.#getBaseTranslation();\n                        x += bx;\n                        y += by;\n                        const { style } = this.div;\n                        style.left = `${(100 * x).toFixed(2)}%`;\n                        style.top = `${(100 * y).toFixed(2)}%`;\n                        this.moveInDOM();\n                    }\n                    static #rotatePoint(x, y, angle) {\n                        switch(angle){\n                            case 90:\n                                return [\n                                    y,\n                                    -x\n                                ];\n                            case 180:\n                                return [\n                                    -x,\n                                    -y\n                                ];\n                            case 270:\n                                return [\n                                    -y,\n                                    x\n                                ];\n                            default:\n                                return [\n                                    x,\n                                    y\n                                ];\n                        }\n                    }\n                    screenToPageTranslation(x, y) {\n                        return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n                    }\n                    pageTranslationToScreen(x, y) {\n                        return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n                    }\n                    #getRotationMatrix(rotation) {\n                        switch(rotation){\n                            case 90:\n                                {\n                                    const [pageWidth, pageHeight] = this.pageDimensions;\n                                    return [\n                                        0,\n                                        -pageWidth / pageHeight,\n                                        pageHeight / pageWidth,\n                                        0\n                                    ];\n                                }\n                            case 180:\n                                return [\n                                    -1,\n                                    0,\n                                    0,\n                                    -1\n                                ];\n                            case 270:\n                                {\n                                    const [pageWidth, pageHeight] = this.pageDimensions;\n                                    return [\n                                        0,\n                                        pageWidth / pageHeight,\n                                        -pageHeight / pageWidth,\n                                        0\n                                    ];\n                                }\n                            default:\n                                return [\n                                    1,\n                                    0,\n                                    0,\n                                    1\n                                ];\n                        }\n                    }\n                    get parentScale() {\n                        return this._uiManager.viewParameters.realScale;\n                    }\n                    get parentRotation() {\n                        return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n                    }\n                    get parentDimensions() {\n                        const { parentScale, pageDimensions: [pageWidth, pageHeight] } = this;\n                        const scaledWidth = pageWidth * parentScale;\n                        const scaledHeight = pageHeight * parentScale;\n                        return _util.FeatureTest.isCSSRoundSupported ? [\n                            Math.round(scaledWidth),\n                            Math.round(scaledHeight)\n                        ] : [\n                            scaledWidth,\n                            scaledHeight\n                        ];\n                    }\n                    setDims(width, height) {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n                        if (!this.#keepAspectRatio) this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n                        this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n                    }\n                    fixDims() {\n                        const { style } = this.div;\n                        const { height, width } = style;\n                        const widthPercent = width.endsWith(\"%\");\n                        const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n                        if (widthPercent && heightPercent) return;\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        if (!widthPercent) style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n                        if (!this.#keepAspectRatio && !heightPercent) style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n                    }\n                    getInitialTranslation() {\n                        return [\n                            0,\n                            0\n                        ];\n                    }\n                    #createResizers() {\n                        if (this.#resizersDiv) return;\n                        this.#resizersDiv = document.createElement(\"div\");\n                        this.#resizersDiv.classList.add(\"resizers\");\n                        const classes = [\n                            \"topLeft\",\n                            \"topRight\",\n                            \"bottomRight\",\n                            \"bottomLeft\"\n                        ];\n                        if (!this._willKeepAspectRatio) classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n                        for (const name of classes){\n                            const div = document.createElement(\"div\");\n                            this.#resizersDiv.append(div);\n                            div.classList.add(\"resizer\", name);\n                            div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n                            div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n                        }\n                        this.div.prepend(this.#resizersDiv);\n                    }\n                    #resizerPointerdown(name, event) {\n                        event.preventDefault();\n                        const { isMac } = _util.FeatureTest.platform;\n                        if (event.button !== 0 || event.ctrlKey && isMac) return;\n                        const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n                        const savedDraggable = this._isDraggable;\n                        this._isDraggable = false;\n                        const pointerMoveOptions = {\n                            passive: true,\n                            capture: true\n                        };\n                        window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n                        const savedX = this.x;\n                        const savedY = this.y;\n                        const savedWidth = this.width;\n                        const savedHeight = this.height;\n                        const savedParentCursor = this.parent.div.style.cursor;\n                        const savedCursor = this.div.style.cursor;\n                        this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n                        const pointerUpCallback = ()=>{\n                            this._isDraggable = savedDraggable;\n                            window.removeEventListener(\"pointerup\", pointerUpCallback);\n                            window.removeEventListener(\"blur\", pointerUpCallback);\n                            window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n                            this.parent.div.style.cursor = savedParentCursor;\n                            this.div.style.cursor = savedCursor;\n                            const newX = this.x;\n                            const newY = this.y;\n                            const newWidth = this.width;\n                            const newHeight = this.height;\n                            if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) return;\n                            this.addCommands({\n                                cmd: ()=>{\n                                    this.width = newWidth;\n                                    this.height = newHeight;\n                                    this.x = newX;\n                                    this.y = newY;\n                                    const [parentWidth, parentHeight] = this.parentDimensions;\n                                    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n                                    this.fixAndSetPosition();\n                                },\n                                undo: ()=>{\n                                    this.width = savedWidth;\n                                    this.height = savedHeight;\n                                    this.x = savedX;\n                                    this.y = savedY;\n                                    const [parentWidth, parentHeight] = this.parentDimensions;\n                                    this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n                                    this.fixAndSetPosition();\n                                },\n                                mustExec: true\n                            });\n                        };\n                        window.addEventListener(\"pointerup\", pointerUpCallback);\n                        window.addEventListener(\"blur\", pointerUpCallback);\n                    }\n                    #resizerPointermove(name, event) {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        const savedX = this.x;\n                        const savedY = this.y;\n                        const savedWidth = this.width;\n                        const savedHeight = this.height;\n                        const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n                        const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n                        const round = (x)=>Math.round(x * 10000) / 10000;\n                        const rotationMatrix = this.#getRotationMatrix(this.rotation);\n                        const transf = (x, y)=>[\n                                rotationMatrix[0] * x + rotationMatrix[2] * y,\n                                rotationMatrix[1] * x + rotationMatrix[3] * y\n                            ];\n                        const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n                        const invTransf = (x, y)=>[\n                                invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n                                invRotationMatrix[1] * x + invRotationMatrix[3] * y\n                            ];\n                        let getPoint;\n                        let getOpposite;\n                        let isDiagonal = false;\n                        let isHorizontal = false;\n                        switch(name){\n                            case \"topLeft\":\n                                isDiagonal = true;\n                                getPoint = (w, h)=>[\n                                        0,\n                                        0\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        w,\n                                        h\n                                    ];\n                                break;\n                            case \"topMiddle\":\n                                getPoint = (w, h)=>[\n                                        w / 2,\n                                        0\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        w / 2,\n                                        h\n                                    ];\n                                break;\n                            case \"topRight\":\n                                isDiagonal = true;\n                                getPoint = (w, h)=>[\n                                        w,\n                                        0\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        0,\n                                        h\n                                    ];\n                                break;\n                            case \"middleRight\":\n                                isHorizontal = true;\n                                getPoint = (w, h)=>[\n                                        w,\n                                        h / 2\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        0,\n                                        h / 2\n                                    ];\n                                break;\n                            case \"bottomRight\":\n                                isDiagonal = true;\n                                getPoint = (w, h)=>[\n                                        w,\n                                        h\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        0,\n                                        0\n                                    ];\n                                break;\n                            case \"bottomMiddle\":\n                                getPoint = (w, h)=>[\n                                        w / 2,\n                                        h\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        w / 2,\n                                        0\n                                    ];\n                                break;\n                            case \"bottomLeft\":\n                                isDiagonal = true;\n                                getPoint = (w, h)=>[\n                                        0,\n                                        h\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        w,\n                                        0\n                                    ];\n                                break;\n                            case \"middleLeft\":\n                                isHorizontal = true;\n                                getPoint = (w, h)=>[\n                                        0,\n                                        h / 2\n                                    ];\n                                getOpposite = (w, h)=>[\n                                        w,\n                                        h / 2\n                                    ];\n                                break;\n                        }\n                        const point = getPoint(savedWidth, savedHeight);\n                        const oppositePoint = getOpposite(savedWidth, savedHeight);\n                        let transfOppositePoint = transf(...oppositePoint);\n                        const oppositeX = round(savedX + transfOppositePoint[0]);\n                        const oppositeY = round(savedY + transfOppositePoint[1]);\n                        let ratioX = 1;\n                        let ratioY = 1;\n                        let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n                        [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n                        if (isDiagonal) {\n                            const oldDiag = Math.hypot(savedWidth, savedHeight);\n                            ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n                        } else if (isHorizontal) ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n                        else ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n                        const newWidth = round(savedWidth * ratioX);\n                        const newHeight = round(savedHeight * ratioY);\n                        transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n                        const newX = oppositeX - transfOppositePoint[0];\n                        const newY = oppositeY - transfOppositePoint[1];\n                        this.width = newWidth;\n                        this.height = newHeight;\n                        this.x = newX;\n                        this.y = newY;\n                        this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n                        this.fixAndSetPosition();\n                    }\n                    async addAltTextButton() {\n                        if (this.#altTextButton) return;\n                        const altText = this.#altTextButton = document.createElement(\"button\");\n                        altText.className = \"altText\";\n                        const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n                        altText.textContent = msg;\n                        altText.setAttribute(\"aria-label\", msg);\n                        altText.tabIndex = \"0\";\n                        altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n                        altText.addEventListener(\"pointerdown\", (event)=>event.stopPropagation());\n                        altText.addEventListener(\"click\", (event)=>{\n                            event.preventDefault();\n                            this._uiManager.editAltText(this);\n                        }, {\n                            capture: true\n                        });\n                        altText.addEventListener(\"keydown\", (event)=>{\n                            if (event.target === altText && event.key === \"Enter\") {\n                                event.preventDefault();\n                                this._uiManager.editAltText(this);\n                            }\n                        });\n                        this.#setAltTextButtonState();\n                        this.div.append(altText);\n                        if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n                            const PERCENT = 40;\n                            AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n                        }\n                    }\n                    async #setAltTextButtonState() {\n                        const button = this.#altTextButton;\n                        if (!button) return;\n                        if (!this.#altText && !this.#altTextDecorative) {\n                            button.classList.remove(\"done\");\n                            this.#altTextTooltip?.remove();\n                            return;\n                        }\n                        AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then((msg)=>{\n                            button.setAttribute(\"aria-label\", msg);\n                        });\n                        let tooltip = this.#altTextTooltip;\n                        if (!tooltip) {\n                            this.#altTextTooltip = tooltip = document.createElement(\"span\");\n                            tooltip.className = \"tooltip\";\n                            tooltip.setAttribute(\"role\", \"tooltip\");\n                            const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n                            button.setAttribute(\"aria-describedby\", id);\n                            const DELAY_TO_SHOW_TOOLTIP = 100;\n                            button.addEventListener(\"mouseenter\", ()=>{\n                                this.#altTextTooltipTimeout = setTimeout(()=>{\n                                    this.#altTextTooltipTimeout = null;\n                                    this.#altTextTooltip.classList.add(\"show\");\n                                    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n                                        source: this,\n                                        details: {\n                                            type: \"editing\",\n                                            subtype: this.editorType,\n                                            data: {\n                                                action: \"alt_text_tooltip\"\n                                            }\n                                        }\n                                    });\n                                }, DELAY_TO_SHOW_TOOLTIP);\n                            });\n                            button.addEventListener(\"mouseleave\", ()=>{\n                                clearTimeout(this.#altTextTooltipTimeout);\n                                this.#altTextTooltipTimeout = null;\n                                this.#altTextTooltip?.classList.remove(\"show\");\n                            });\n                        }\n                        button.classList.add(\"done\");\n                        tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n                        if (!tooltip.parentNode) button.append(tooltip);\n                    }\n                    getClientDimensions() {\n                        return this.div.getBoundingClientRect();\n                    }\n                    get altTextData() {\n                        return {\n                            altText: this.#altText,\n                            decorative: this.#altTextDecorative\n                        };\n                    }\n                    set altTextData({ altText, decorative }) {\n                        if (this.#altText === altText && this.#altTextDecorative === decorative) return;\n                        this.#altText = altText;\n                        this.#altTextDecorative = decorative;\n                        this.#setAltTextButtonState();\n                    }\n                    render() {\n                        this.div = document.createElement(\"div\");\n                        this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n                        this.div.className = this.name;\n                        this.div.setAttribute(\"id\", this.id);\n                        this.div.setAttribute(\"tabIndex\", 0);\n                        this.setInForeground();\n                        this.div.addEventListener(\"focusin\", this.#boundFocusin);\n                        this.div.addEventListener(\"focusout\", this.#boundFocusout);\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        if (this.parentRotation % 180 !== 0) {\n                            this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n                            this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n                        }\n                        const [tx, ty] = this.getInitialTranslation();\n                        this.translate(tx, ty);\n                        (0, _tools.bindEvents)(this, this.div, [\n                            \"pointerdown\"\n                        ]);\n                        return this.div;\n                    }\n                    pointerdown(event) {\n                        const { isMac } = _util.FeatureTest.platform;\n                        if (event.button !== 0 || event.ctrlKey && isMac) {\n                            event.preventDefault();\n                            return;\n                        }\n                        this.#hasBeenClicked = true;\n                        this.#setUpDragSession(event);\n                    }\n                    #setUpDragSession(event) {\n                        if (!this._isDraggable) return;\n                        const isSelected = this._uiManager.isSelected(this);\n                        this._uiManager.setUpDragSession();\n                        let pointerMoveOptions, pointerMoveCallback;\n                        if (isSelected) {\n                            pointerMoveOptions = {\n                                passive: true,\n                                capture: true\n                            };\n                            pointerMoveCallback = (e)=>{\n                                const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n                                this._uiManager.dragSelectedEditors(tx, ty);\n                            };\n                            window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n                        }\n                        const pointerUpCallback = ()=>{\n                            window.removeEventListener(\"pointerup\", pointerUpCallback);\n                            window.removeEventListener(\"blur\", pointerUpCallback);\n                            if (isSelected) window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n                            this.#hasBeenClicked = false;\n                            if (!this._uiManager.endDragSession()) {\n                                const { isMac } = _util.FeatureTest.platform;\n                                if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) this.parent.toggleSelected(this);\n                                else this.parent.setSelected(this);\n                            }\n                        };\n                        window.addEventListener(\"pointerup\", pointerUpCallback);\n                        window.addEventListener(\"blur\", pointerUpCallback);\n                    }\n                    moveInDOM() {\n                        this.parent?.moveEditorInDOM(this);\n                    }\n                    _setParentAndPosition(parent, x, y) {\n                        parent.changeParent(this);\n                        this.x = x;\n                        this.y = y;\n                        this.fixAndSetPosition();\n                    }\n                    getRect(tx, ty) {\n                        const scale = this.parentScale;\n                        const [pageWidth, pageHeight] = this.pageDimensions;\n                        const [pageX, pageY] = this.pageTranslation;\n                        const shiftX = tx / scale;\n                        const shiftY = ty / scale;\n                        const x = this.x * pageWidth;\n                        const y = this.y * pageHeight;\n                        const width = this.width * pageWidth;\n                        const height = this.height * pageHeight;\n                        switch(this.rotation){\n                            case 0:\n                                return [\n                                    x + shiftX + pageX,\n                                    pageHeight - y - shiftY - height + pageY,\n                                    x + shiftX + width + pageX,\n                                    pageHeight - y - shiftY + pageY\n                                ];\n                            case 90:\n                                return [\n                                    x + shiftY + pageX,\n                                    pageHeight - y + shiftX + pageY,\n                                    x + shiftY + height + pageX,\n                                    pageHeight - y + shiftX + width + pageY\n                                ];\n                            case 180:\n                                return [\n                                    x - shiftX - width + pageX,\n                                    pageHeight - y + shiftY + pageY,\n                                    x - shiftX + pageX,\n                                    pageHeight - y + shiftY + height + pageY\n                                ];\n                            case 270:\n                                return [\n                                    x - shiftY - height + pageX,\n                                    pageHeight - y - shiftX - width + pageY,\n                                    x - shiftY + pageX,\n                                    pageHeight - y - shiftX + pageY\n                                ];\n                            default:\n                                throw new Error(\"Invalid rotation\");\n                        }\n                    }\n                    getRectInCurrentCoords(rect, pageHeight) {\n                        const [x1, y1, x2, y2] = rect;\n                        const width = x2 - x1;\n                        const height = y2 - y1;\n                        switch(this.rotation){\n                            case 0:\n                                return [\n                                    x1,\n                                    pageHeight - y2,\n                                    width,\n                                    height\n                                ];\n                            case 90:\n                                return [\n                                    x1,\n                                    pageHeight - y1,\n                                    height,\n                                    width\n                                ];\n                            case 180:\n                                return [\n                                    x2,\n                                    pageHeight - y1,\n                                    width,\n                                    height\n                                ];\n                            case 270:\n                                return [\n                                    x2,\n                                    pageHeight - y2,\n                                    height,\n                                    width\n                                ];\n                            default:\n                                throw new Error(\"Invalid rotation\");\n                        }\n                    }\n                    onceAdded() {}\n                    isEmpty() {\n                        return false;\n                    }\n                    enableEditMode() {\n                        this.#isInEditMode = true;\n                    }\n                    disableEditMode() {\n                        this.#isInEditMode = false;\n                    }\n                    isInEditMode() {\n                        return this.#isInEditMode;\n                    }\n                    shouldGetKeyboardEvents() {\n                        return false;\n                    }\n                    needsToBeRebuilt() {\n                        return this.div && !this.isAttachedToDOM;\n                    }\n                    rebuild() {\n                        this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n                        this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n                    }\n                    serialize(isForCopying = false, context = null) {\n                        (0, _util.unreachable)(\"An editor must be serializable\");\n                    }\n                    static deserialize(data, parent, uiManager) {\n                        const editor = new this.prototype.constructor({\n                            parent: parent,\n                            id: parent.getNextId(),\n                            uiManager: uiManager\n                        });\n                        editor.rotation = data.rotation;\n                        const [pageWidth, pageHeight] = editor.pageDimensions;\n                        const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n                        editor.x = x / pageWidth;\n                        editor.y = y / pageHeight;\n                        editor.width = width / pageWidth;\n                        editor.height = height / pageHeight;\n                        return editor;\n                    }\n                    remove() {\n                        this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n                        this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n                        if (!this.isEmpty()) this.commit();\n                        if (this.parent) this.parent.remove(this);\n                        else this._uiManager.removeEditor(this);\n                        this.#altTextButton?.remove();\n                        this.#altTextButton = null;\n                        this.#altTextTooltip = null;\n                    }\n                    get isResizable() {\n                        return false;\n                    }\n                    makeResizable() {\n                        if (this.isResizable) {\n                            this.#createResizers();\n                            this.#resizersDiv.classList.remove(\"hidden\");\n                        }\n                    }\n                    select() {\n                        this.makeResizable();\n                        this.div?.classList.add(\"selectedEditor\");\n                    }\n                    unselect() {\n                        this.#resizersDiv?.classList.add(\"hidden\");\n                        this.div?.classList.remove(\"selectedEditor\");\n                        if (this.div?.contains(document.activeElement)) this._uiManager.currentLayer.div.focus();\n                    }\n                    updateParams(type, value) {}\n                    disableEditing() {\n                        if (this.#altTextButton) this.#altTextButton.hidden = true;\n                    }\n                    enableEditing() {\n                        if (this.#altTextButton) this.#altTextButton.hidden = false;\n                    }\n                    enterInEditMode() {}\n                    get contentDiv() {\n                        return this.div;\n                    }\n                    get isEditing() {\n                        return this.#isEditing;\n                    }\n                    set isEditing(value) {\n                        this.#isEditing = value;\n                        if (!this.parent) return;\n                        if (value) {\n                            this.parent.setSelected(this);\n                            this.parent.setActiveEditor(this);\n                        } else this.parent.setActiveEditor(null);\n                    }\n                    setAspectRatio(width, height) {\n                        this.#keepAspectRatio = true;\n                        const aspectRatio = width / height;\n                        const { style } = this.div;\n                        style.aspectRatio = aspectRatio;\n                        style.height = \"auto\";\n                    }\n                    static get MIN_SIZE() {\n                        return 16;\n                    }\n                }\n                exports.AnnotationEditor = AnnotationEditor;\n                class FakeEditor extends AnnotationEditor {\n                    constructor(params){\n                        super(params);\n                        this.annotationElementId = params.annotationElementId;\n                        this.deleted = true;\n                    }\n                    serialize() {\n                        return {\n                            id: this.annotationElementId,\n                            deleted: true,\n                            pageIndex: this.pageIndex\n                        };\n                    }\n                }\n            /***/ },\n            /* 5 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\n                exports.bindEvents = bindEvents;\n                exports.opacityToHex = opacityToHex;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                function bindEvents(obj, element, names) {\n                    for (const name of names)element.addEventListener(name, obj[name].bind(obj));\n                }\n                function opacityToHex(opacity) {\n                    return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n                }\n                class IdManager {\n                    #id = 0;\n                    getId() {\n                        return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n                    }\n                }\n                class ImageManager {\n                    #baseId = (0, _util.getUuid)();\n                    #id = 0;\n                    #cache = null;\n                    static get _isSVGFittingCanvas() {\n                        const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n                        const canvas = new OffscreenCanvas(1, 3);\n                        const ctx = canvas.getContext(\"2d\");\n                        const image = new Image();\n                        image.src = svg;\n                        const promise = image.decode().then(()=>{\n                            ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n                            return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n                        });\n                        return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n                    }\n                    async #get(key, rawData) {\n                        this.#cache ||= new Map();\n                        let data = this.#cache.get(key);\n                        if (data === null) return null;\n                        if (data?.bitmap) {\n                            data.refCounter += 1;\n                            return data;\n                        }\n                        try {\n                            data ||= {\n                                bitmap: null,\n                                id: `image_${this.#baseId}_${this.#id++}`,\n                                refCounter: 0,\n                                isSvg: false\n                            };\n                            let image;\n                            if (typeof rawData === \"string\") {\n                                data.url = rawData;\n                                const response = await fetch(rawData);\n                                if (!response.ok) throw new Error(response.statusText);\n                                image = await response.blob();\n                            } else image = data.file = rawData;\n                            if (image.type === \"image/svg+xml\") {\n                                const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n                                const fileReader = new FileReader();\n                                const imageElement = new Image();\n                                const imagePromise = new Promise((resolve, reject)=>{\n                                    imageElement.onload = ()=>{\n                                        data.bitmap = imageElement;\n                                        data.isSvg = true;\n                                        resolve();\n                                    };\n                                    fileReader.onload = async ()=>{\n                                        const url = data.svgUrl = fileReader.result;\n                                        imageElement.src = await mustRemoveAspectRatioPromise ? `${url}#svgView(preserveAspectRatio(none))` : url;\n                                    };\n                                    imageElement.onerror = fileReader.onerror = reject;\n                                });\n                                fileReader.readAsDataURL(image);\n                                await imagePromise;\n                            } else data.bitmap = await createImageBitmap(image);\n                            data.refCounter = 1;\n                        } catch (e) {\n                            console.error(e);\n                            data = null;\n                        }\n                        this.#cache.set(key, data);\n                        if (data) this.#cache.set(data.id, data);\n                        return data;\n                    }\n                    async getFromFile(file) {\n                        const { lastModified, name, size, type } = file;\n                        return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n                    }\n                    async getFromUrl(url) {\n                        return this.#get(url, url);\n                    }\n                    async getFromId(id) {\n                        this.#cache ||= new Map();\n                        const data = this.#cache.get(id);\n                        if (!data) return null;\n                        if (data.bitmap) {\n                            data.refCounter += 1;\n                            return data;\n                        }\n                        if (data.file) return this.getFromFile(data.file);\n                        return this.getFromUrl(data.url);\n                    }\n                    getSvgUrl(id) {\n                        const data = this.#cache.get(id);\n                        if (!data?.isSvg) return null;\n                        return data.svgUrl;\n                    }\n                    deleteId(id) {\n                        this.#cache ||= new Map();\n                        const data = this.#cache.get(id);\n                        if (!data) return;\n                        data.refCounter -= 1;\n                        if (data.refCounter !== 0) return;\n                        data.bitmap = null;\n                    }\n                    isValidId(id) {\n                        return id.startsWith(`image_${this.#baseId}_`);\n                    }\n                }\n                class CommandManager {\n                    #commands = [];\n                    #locked = false;\n                    #maxSize;\n                    #position = -1;\n                    constructor(maxSize = 128){\n                        this.#maxSize = maxSize;\n                    }\n                    add({ cmd, undo, mustExec, type = NaN, overwriteIfSameType = false, keepUndo = false }) {\n                        if (mustExec) cmd();\n                        if (this.#locked) return;\n                        const save = {\n                            cmd: cmd,\n                            undo: undo,\n                            type: type\n                        };\n                        if (this.#position === -1) {\n                            if (this.#commands.length > 0) this.#commands.length = 0;\n                            this.#position = 0;\n                            this.#commands.push(save);\n                            return;\n                        }\n                        if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n                            if (keepUndo) save.undo = this.#commands[this.#position].undo;\n                            this.#commands[this.#position] = save;\n                            return;\n                        }\n                        const next = this.#position + 1;\n                        if (next === this.#maxSize) this.#commands.splice(0, 1);\n                        else {\n                            this.#position = next;\n                            if (next < this.#commands.length) this.#commands.splice(next);\n                        }\n                        this.#commands.push(save);\n                    }\n                    undo() {\n                        if (this.#position === -1) return;\n                        this.#locked = true;\n                        this.#commands[this.#position].undo();\n                        this.#locked = false;\n                        this.#position -= 1;\n                    }\n                    redo() {\n                        if (this.#position < this.#commands.length - 1) {\n                            this.#position += 1;\n                            this.#locked = true;\n                            this.#commands[this.#position].cmd();\n                            this.#locked = false;\n                        }\n                    }\n                    hasSomethingToUndo() {\n                        return this.#position !== -1;\n                    }\n                    hasSomethingToRedo() {\n                        return this.#position < this.#commands.length - 1;\n                    }\n                    destroy() {\n                        this.#commands = null;\n                    }\n                }\n                exports.CommandManager = CommandManager;\n                class KeyboardManager {\n                    constructor(callbacks){\n                        this.buffer = [];\n                        this.callbacks = new Map();\n                        this.allKeys = new Set();\n                        const { isMac } = _util.FeatureTest.platform;\n                        for (const [keys, callback, options = {}] of callbacks)for (const key of keys){\n                            const isMacKey = key.startsWith(\"mac+\");\n                            if (isMac && isMacKey) {\n                                this.callbacks.set(key.slice(4), {\n                                    callback: callback,\n                                    options: options\n                                });\n                                this.allKeys.add(key.split(\"+\").at(-1));\n                            } else if (!isMac && !isMacKey) {\n                                this.callbacks.set(key, {\n                                    callback: callback,\n                                    options: options\n                                });\n                                this.allKeys.add(key.split(\"+\").at(-1));\n                            }\n                        }\n                    }\n                    #serialize(event) {\n                        if (event.altKey) this.buffer.push(\"alt\");\n                        if (event.ctrlKey) this.buffer.push(\"ctrl\");\n                        if (event.metaKey) this.buffer.push(\"meta\");\n                        if (event.shiftKey) this.buffer.push(\"shift\");\n                        this.buffer.push(event.key);\n                        const str = this.buffer.join(\"+\");\n                        this.buffer.length = 0;\n                        return str;\n                    }\n                    exec(self, event) {\n                        if (!this.allKeys.has(event.key)) return;\n                        const info = this.callbacks.get(this.#serialize(event));\n                        if (!info) return;\n                        const { callback, options: { bubbles = false, args = [], checker = null } } = info;\n                        if (checker && !checker(self, event)) return;\n                        callback.bind(self, ...args)();\n                        if (!bubbles) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                    }\n                }\n                exports.KeyboardManager = KeyboardManager;\n                class ColorManager {\n                    static _colorsMapping = new Map([\n                        [\n                            \"CanvasText\",\n                            [\n                                0,\n                                0,\n                                0\n                            ]\n                        ],\n                        [\n                            \"Canvas\",\n                            [\n                                255,\n                                255,\n                                255\n                            ]\n                        ]\n                    ]);\n                    get _colors() {\n                        const colors = new Map([\n                            [\n                                \"CanvasText\",\n                                null\n                            ],\n                            [\n                                \"Canvas\",\n                                null\n                            ]\n                        ]);\n                        (0, _display_utils.getColorValues)(colors);\n                        return (0, _util.shadow)(this, \"_colors\", colors);\n                    }\n                    convert(color) {\n                        const rgb = (0, _display_utils.getRGB)(color);\n                        if (!window.matchMedia(\"(forced-colors: active)\").matches) return rgb;\n                        for (const [name, RGB] of this._colors){\n                            if (RGB.every((x, i)=>x === rgb[i])) return ColorManager._colorsMapping.get(name);\n                        }\n                        return rgb;\n                    }\n                    getHexCode(name) {\n                        const rgb = this._colors.get(name);\n                        if (!rgb) return name;\n                        return _util.Util.makeHexColor(...rgb);\n                    }\n                }\n                exports.ColorManager = ColorManager;\n                class AnnotationEditorUIManager {\n                    #activeEditor = null;\n                    #allEditors = new Map();\n                    #allLayers = new Map();\n                    #altTextManager = null;\n                    #annotationStorage = null;\n                    #commandManager = new CommandManager();\n                    #currentPageIndex = 0;\n                    #deletedAnnotationsElementIds = new Set();\n                    #draggingEditors = null;\n                    #editorTypes = null;\n                    #editorsToRescale = new Set();\n                    #filterFactory = null;\n                    #idManager = new IdManager();\n                    #isEnabled = false;\n                    #isWaiting = false;\n                    #lastActiveElement = null;\n                    #mode = _util.AnnotationEditorType.NONE;\n                    #selectedEditors = new Set();\n                    #pageColors = null;\n                    #boundBlur = this.blur.bind(this);\n                    #boundFocus = this.focus.bind(this);\n                    #boundCopy = this.copy.bind(this);\n                    #boundCut = this.cut.bind(this);\n                    #boundPaste = this.paste.bind(this);\n                    #boundKeydown = this.keydown.bind(this);\n                    #boundOnEditingAction = this.onEditingAction.bind(this);\n                    #boundOnPageChanging = this.onPageChanging.bind(this);\n                    #boundOnScaleChanging = this.onScaleChanging.bind(this);\n                    #boundOnRotationChanging = this.onRotationChanging.bind(this);\n                    #previousStates = {\n                        isEditing: false,\n                        isEmpty: true,\n                        hasSomethingToUndo: false,\n                        hasSomethingToRedo: false,\n                        hasSelectedEditor: false\n                    };\n                    #translation = [\n                        0,\n                        0\n                    ];\n                    #translationTimeoutId = null;\n                    #container = null;\n                    #viewer = null;\n                    static TRANSLATE_SMALL = 1;\n                    static TRANSLATE_BIG = 10;\n                    static get _keyboardManager() {\n                        const proto = AnnotationEditorUIManager.prototype;\n                        const arrowChecker = (self)=>{\n                            const { activeElement } = document;\n                            return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n                        };\n                        const small = this.TRANSLATE_SMALL;\n                        const big = this.TRANSLATE_BIG;\n                        return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([\n                            [\n                                [\n                                    \"ctrl+a\",\n                                    \"mac+meta+a\"\n                                ],\n                                proto.selectAll\n                            ],\n                            [\n                                [\n                                    \"ctrl+z\",\n                                    \"mac+meta+z\"\n                                ],\n                                proto.undo\n                            ],\n                            [\n                                [\n                                    \"ctrl+y\",\n                                    \"ctrl+shift+z\",\n                                    \"mac+meta+shift+z\",\n                                    \"ctrl+shift+Z\",\n                                    \"mac+meta+shift+Z\"\n                                ],\n                                proto.redo\n                            ],\n                            [\n                                [\n                                    \"Backspace\",\n                                    \"alt+Backspace\",\n                                    \"ctrl+Backspace\",\n                                    \"shift+Backspace\",\n                                    \"mac+Backspace\",\n                                    \"mac+alt+Backspace\",\n                                    \"mac+ctrl+Backspace\",\n                                    \"Delete\",\n                                    \"ctrl+Delete\",\n                                    \"shift+Delete\",\n                                    \"mac+Delete\"\n                                ],\n                                proto.delete\n                            ],\n                            [\n                                [\n                                    \"Escape\",\n                                    \"mac+Escape\"\n                                ],\n                                proto.unselectAll\n                            ],\n                            [\n                                [\n                                    \"ArrowLeft\",\n                                    \"mac+ArrowLeft\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        -small,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowLeft\",\n                                    \"mac+shift+ArrowLeft\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        -big,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowRight\",\n                                    \"mac+ArrowRight\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        small,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowRight\",\n                                    \"mac+shift+ArrowRight\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        big,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowUp\",\n                                    \"mac+ArrowUp\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        0,\n                                        -small\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowUp\",\n                                    \"mac+shift+ArrowUp\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        0,\n                                        -big\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowDown\",\n                                    \"mac+ArrowDown\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        0,\n                                        small\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowDown\",\n                                    \"mac+shift+ArrowDown\"\n                                ],\n                                proto.translateSelectedEditors,\n                                {\n                                    args: [\n                                        0,\n                                        big\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ]\n                        ]));\n                    }\n                    constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors){\n                        this.#container = container;\n                        this.#viewer = viewer;\n                        this.#altTextManager = altTextManager;\n                        this._eventBus = eventBus;\n                        this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n                        this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n                        this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n                        this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n                        this.#annotationStorage = pdfDocument.annotationStorage;\n                        this.#filterFactory = pdfDocument.filterFactory;\n                        this.#pageColors = pageColors;\n                        this.viewParameters = {\n                            realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n                            rotation: 0\n                        };\n                    }\n                    destroy() {\n                        this.#removeKeyboardManager();\n                        this.#removeFocusManager();\n                        this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n                        this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n                        this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n                        this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n                        for (const layer of this.#allLayers.values())layer.destroy();\n                        this.#allLayers.clear();\n                        this.#allEditors.clear();\n                        this.#editorsToRescale.clear();\n                        this.#activeEditor = null;\n                        this.#selectedEditors.clear();\n                        this.#commandManager.destroy();\n                        this.#altTextManager.destroy();\n                    }\n                    get hcmFilter() {\n                        return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n                    }\n                    get direction() {\n                        return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n                    }\n                    editAltText(editor) {\n                        this.#altTextManager?.editAltText(this, editor);\n                    }\n                    onPageChanging({ pageNumber }) {\n                        this.#currentPageIndex = pageNumber - 1;\n                    }\n                    focusMainContainer() {\n                        this.#container.focus();\n                    }\n                    findParent(x, y) {\n                        for (const layer of this.#allLayers.values()){\n                            const { x: layerX, y: layerY, width, height } = layer.div.getBoundingClientRect();\n                            if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) return layer;\n                        }\n                        return null;\n                    }\n                    disableUserSelect(value = false) {\n                        this.#viewer.classList.toggle(\"noUserSelect\", value);\n                    }\n                    addShouldRescale(editor) {\n                        this.#editorsToRescale.add(editor);\n                    }\n                    removeShouldRescale(editor) {\n                        this.#editorsToRescale.delete(editor);\n                    }\n                    onScaleChanging({ scale }) {\n                        this.commitOrRemove();\n                        this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n                        for (const editor of this.#editorsToRescale)editor.onScaleChanging();\n                    }\n                    onRotationChanging({ pagesRotation }) {\n                        this.commitOrRemove();\n                        this.viewParameters.rotation = pagesRotation;\n                    }\n                    addToAnnotationStorage(editor) {\n                        if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) this.#annotationStorage.setValue(editor.id, editor);\n                    }\n                    #addFocusManager() {\n                        window.addEventListener(\"focus\", this.#boundFocus);\n                        window.addEventListener(\"blur\", this.#boundBlur);\n                    }\n                    #removeFocusManager() {\n                        window.removeEventListener(\"focus\", this.#boundFocus);\n                        window.removeEventListener(\"blur\", this.#boundBlur);\n                    }\n                    blur() {\n                        if (!this.hasSelection) return;\n                        const { activeElement } = document;\n                        for (const editor of this.#selectedEditors)if (editor.div.contains(activeElement)) {\n                            this.#lastActiveElement = [\n                                editor,\n                                activeElement\n                            ];\n                            editor._focusEventsAllowed = false;\n                            break;\n                        }\n                    }\n                    focus() {\n                        if (!this.#lastActiveElement) return;\n                        const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n                        this.#lastActiveElement = null;\n                        lastActiveElement.addEventListener(\"focusin\", ()=>{\n                            lastEditor._focusEventsAllowed = true;\n                        }, {\n                            once: true\n                        });\n                        lastActiveElement.focus();\n                    }\n                    #addKeyboardManager() {\n                        window.addEventListener(\"keydown\", this.#boundKeydown, {\n                            capture: true\n                        });\n                    }\n                    #removeKeyboardManager() {\n                        window.removeEventListener(\"keydown\", this.#boundKeydown, {\n                            capture: true\n                        });\n                    }\n                    #addCopyPasteListeners() {\n                        document.addEventListener(\"copy\", this.#boundCopy);\n                        document.addEventListener(\"cut\", this.#boundCut);\n                        document.addEventListener(\"paste\", this.#boundPaste);\n                    }\n                    #removeCopyPasteListeners() {\n                        document.removeEventListener(\"copy\", this.#boundCopy);\n                        document.removeEventListener(\"cut\", this.#boundCut);\n                        document.removeEventListener(\"paste\", this.#boundPaste);\n                    }\n                    addEditListeners() {\n                        this.#addKeyboardManager();\n                        this.#addCopyPasteListeners();\n                    }\n                    removeEditListeners() {\n                        this.#removeKeyboardManager();\n                        this.#removeCopyPasteListeners();\n                    }\n                    copy(event) {\n                        event.preventDefault();\n                        this.#activeEditor?.commitOrRemove();\n                        if (!this.hasSelection) return;\n                        const editors = [];\n                        for (const editor of this.#selectedEditors){\n                            const serialized = editor.serialize(true);\n                            if (serialized) editors.push(serialized);\n                        }\n                        if (editors.length === 0) return;\n                        event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n                    }\n                    cut(event) {\n                        this.copy(event);\n                        this.delete();\n                    }\n                    paste(event) {\n                        event.preventDefault();\n                        const { clipboardData } = event;\n                        for (const item of clipboardData.items){\n                            for (const editorType of this.#editorTypes)if (editorType.isHandlingMimeForPasting(item.type)) {\n                                editorType.paste(item, this.currentLayer);\n                                return;\n                            }\n                        }\n                        let data = clipboardData.getData(\"application/pdfjs\");\n                        if (!data) return;\n                        try {\n                            data = JSON.parse(data);\n                        } catch (ex) {\n                            (0, _util.warn)(`paste: \"${ex.message}\".`);\n                            return;\n                        }\n                        if (!Array.isArray(data)) return;\n                        this.unselectAll();\n                        const layer = this.currentLayer;\n                        try {\n                            const newEditors = [];\n                            for (const editor of data){\n                                const deserializedEditor = layer.deserialize(editor);\n                                if (!deserializedEditor) return;\n                                newEditors.push(deserializedEditor);\n                            }\n                            const cmd = ()=>{\n                                for (const editor of newEditors)this.#addEditorToLayer(editor);\n                                this.#selectEditors(newEditors);\n                            };\n                            const undo = ()=>{\n                                for (const editor of newEditors)editor.remove();\n                            };\n                            this.addCommands({\n                                cmd: cmd,\n                                undo: undo,\n                                mustExec: true\n                            });\n                        } catch (ex) {\n                            (0, _util.warn)(`paste: \"${ex.message}\".`);\n                        }\n                    }\n                    keydown(event) {\n                        if (!this.getActive()?.shouldGetKeyboardEvents()) AnnotationEditorUIManager._keyboardManager.exec(this, event);\n                    }\n                    onEditingAction(details) {\n                        if ([\n                            \"undo\",\n                            \"redo\",\n                            \"delete\",\n                            \"selectAll\"\n                        ].includes(details.name)) this[details.name]();\n                    }\n                    #dispatchUpdateStates(details) {\n                        const hasChanged = Object.entries(details).some(([key, value])=>this.#previousStates[key] !== value);\n                        if (hasChanged) this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n                            source: this,\n                            details: Object.assign(this.#previousStates, details)\n                        });\n                    }\n                    #dispatchUpdateUI(details) {\n                        this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n                            source: this,\n                            details: details\n                        });\n                    }\n                    setEditingState(isEditing) {\n                        if (isEditing) {\n                            this.#addFocusManager();\n                            this.#addKeyboardManager();\n                            this.#addCopyPasteListeners();\n                            this.#dispatchUpdateStates({\n                                isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n                                isEmpty: this.#isEmpty(),\n                                hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n                                hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n                                hasSelectedEditor: false\n                            });\n                        } else {\n                            this.#removeFocusManager();\n                            this.#removeKeyboardManager();\n                            this.#removeCopyPasteListeners();\n                            this.#dispatchUpdateStates({\n                                isEditing: false\n                            });\n                            this.disableUserSelect(false);\n                        }\n                    }\n                    registerEditorTypes(types) {\n                        if (this.#editorTypes) return;\n                        this.#editorTypes = types;\n                        for (const editorType of this.#editorTypes)this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n                    }\n                    getId() {\n                        return this.#idManager.getId();\n                    }\n                    get currentLayer() {\n                        return this.#allLayers.get(this.#currentPageIndex);\n                    }\n                    getLayer(pageIndex) {\n                        return this.#allLayers.get(pageIndex);\n                    }\n                    get currentPageIndex() {\n                        return this.#currentPageIndex;\n                    }\n                    addLayer(layer) {\n                        this.#allLayers.set(layer.pageIndex, layer);\n                        if (this.#isEnabled) layer.enable();\n                        else layer.disable();\n                    }\n                    removeLayer(layer) {\n                        this.#allLayers.delete(layer.pageIndex);\n                    }\n                    updateMode(mode, editId = null) {\n                        if (this.#mode === mode) return;\n                        this.#mode = mode;\n                        if (mode === _util.AnnotationEditorType.NONE) {\n                            this.setEditingState(false);\n                            this.#disableAll();\n                            return;\n                        }\n                        this.setEditingState(true);\n                        this.#enableAll();\n                        this.unselectAll();\n                        for (const layer of this.#allLayers.values())layer.updateMode(mode);\n                        if (!editId) return;\n                        for (const editor of this.#allEditors.values())if (editor.annotationElementId === editId) {\n                            this.setSelected(editor);\n                            editor.enterInEditMode();\n                            break;\n                        }\n                    }\n                    updateToolbar(mode) {\n                        if (mode === this.#mode) return;\n                        this._eventBus.dispatch(\"switchannotationeditormode\", {\n                            source: this,\n                            mode: mode\n                        });\n                    }\n                    updateParams(type, value) {\n                        if (!this.#editorTypes) return;\n                        if (type === _util.AnnotationEditorParamsType.CREATE) {\n                            this.currentLayer.addNewEditor(type);\n                            return;\n                        }\n                        for (const editor of this.#selectedEditors)editor.updateParams(type, value);\n                        for (const editorType of this.#editorTypes)editorType.updateDefaultParams(type, value);\n                    }\n                    enableWaiting(mustWait = false) {\n                        if (this.#isWaiting === mustWait) return;\n                        this.#isWaiting = mustWait;\n                        for (const layer of this.#allLayers.values()){\n                            if (mustWait) layer.disableClick();\n                            else layer.enableClick();\n                            layer.div.classList.toggle(\"waiting\", mustWait);\n                        }\n                    }\n                    #enableAll() {\n                        if (!this.#isEnabled) {\n                            this.#isEnabled = true;\n                            for (const layer of this.#allLayers.values())layer.enable();\n                        }\n                    }\n                    #disableAll() {\n                        this.unselectAll();\n                        if (this.#isEnabled) {\n                            this.#isEnabled = false;\n                            for (const layer of this.#allLayers.values())layer.disable();\n                        }\n                    }\n                    getEditors(pageIndex) {\n                        const editors = [];\n                        for (const editor of this.#allEditors.values())if (editor.pageIndex === pageIndex) editors.push(editor);\n                        return editors;\n                    }\n                    getEditor(id) {\n                        return this.#allEditors.get(id);\n                    }\n                    addEditor(editor) {\n                        this.#allEditors.set(editor.id, editor);\n                    }\n                    removeEditor(editor) {\n                        this.#allEditors.delete(editor.id);\n                        this.unselect(editor);\n                        if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) this.#annotationStorage?.remove(editor.id);\n                    }\n                    addDeletedAnnotationElement(editor) {\n                        this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n                        editor.deleted = true;\n                    }\n                    isDeletedAnnotationElement(annotationElementId) {\n                        return this.#deletedAnnotationsElementIds.has(annotationElementId);\n                    }\n                    removeDeletedAnnotationElement(editor) {\n                        this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n                        editor.deleted = false;\n                    }\n                    #addEditorToLayer(editor) {\n                        const layer = this.#allLayers.get(editor.pageIndex);\n                        if (layer) layer.addOrRebuild(editor);\n                        else this.addEditor(editor);\n                    }\n                    setActiveEditor(editor) {\n                        if (this.#activeEditor === editor) return;\n                        this.#activeEditor = editor;\n                        if (editor) this.#dispatchUpdateUI(editor.propertiesToUpdate);\n                    }\n                    toggleSelected(editor) {\n                        if (this.#selectedEditors.has(editor)) {\n                            this.#selectedEditors.delete(editor);\n                            editor.unselect();\n                            this.#dispatchUpdateStates({\n                                hasSelectedEditor: this.hasSelection\n                            });\n                            return;\n                        }\n                        this.#selectedEditors.add(editor);\n                        editor.select();\n                        this.#dispatchUpdateUI(editor.propertiesToUpdate);\n                        this.#dispatchUpdateStates({\n                            hasSelectedEditor: true\n                        });\n                    }\n                    setSelected(editor) {\n                        for (const ed of this.#selectedEditors)if (ed !== editor) ed.unselect();\n                        this.#selectedEditors.clear();\n                        this.#selectedEditors.add(editor);\n                        editor.select();\n                        this.#dispatchUpdateUI(editor.propertiesToUpdate);\n                        this.#dispatchUpdateStates({\n                            hasSelectedEditor: true\n                        });\n                    }\n                    isSelected(editor) {\n                        return this.#selectedEditors.has(editor);\n                    }\n                    unselect(editor) {\n                        editor.unselect();\n                        this.#selectedEditors.delete(editor);\n                        this.#dispatchUpdateStates({\n                            hasSelectedEditor: this.hasSelection\n                        });\n                    }\n                    get hasSelection() {\n                        return this.#selectedEditors.size !== 0;\n                    }\n                    undo() {\n                        this.#commandManager.undo();\n                        this.#dispatchUpdateStates({\n                            hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n                            hasSomethingToRedo: true,\n                            isEmpty: this.#isEmpty()\n                        });\n                    }\n                    redo() {\n                        this.#commandManager.redo();\n                        this.#dispatchUpdateStates({\n                            hasSomethingToUndo: true,\n                            hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n                            isEmpty: this.#isEmpty()\n                        });\n                    }\n                    addCommands(params) {\n                        this.#commandManager.add(params);\n                        this.#dispatchUpdateStates({\n                            hasSomethingToUndo: true,\n                            hasSomethingToRedo: false,\n                            isEmpty: this.#isEmpty()\n                        });\n                    }\n                    #isEmpty() {\n                        if (this.#allEditors.size === 0) return true;\n                        if (this.#allEditors.size === 1) {\n                            for (const editor of this.#allEditors.values())return editor.isEmpty();\n                        }\n                        return false;\n                    }\n                    delete() {\n                        this.commitOrRemove();\n                        if (!this.hasSelection) return;\n                        const editors = [\n                            ...this.#selectedEditors\n                        ];\n                        const cmd = ()=>{\n                            for (const editor of editors)editor.remove();\n                        };\n                        const undo = ()=>{\n                            for (const editor of editors)this.#addEditorToLayer(editor);\n                        };\n                        this.addCommands({\n                            cmd: cmd,\n                            undo: undo,\n                            mustExec: true\n                        });\n                    }\n                    commitOrRemove() {\n                        this.#activeEditor?.commitOrRemove();\n                    }\n                    hasSomethingToControl() {\n                        return this.#activeEditor || this.hasSelection;\n                    }\n                    #selectEditors(editors) {\n                        this.#selectedEditors.clear();\n                        for (const editor of editors){\n                            if (editor.isEmpty()) continue;\n                            this.#selectedEditors.add(editor);\n                            editor.select();\n                        }\n                        this.#dispatchUpdateStates({\n                            hasSelectedEditor: true\n                        });\n                    }\n                    selectAll() {\n                        for (const editor of this.#selectedEditors)editor.commit();\n                        this.#selectEditors(this.#allEditors.values());\n                    }\n                    unselectAll() {\n                        if (this.#activeEditor) {\n                            this.#activeEditor.commitOrRemove();\n                            return;\n                        }\n                        if (!this.hasSelection) return;\n                        for (const editor of this.#selectedEditors)editor.unselect();\n                        this.#selectedEditors.clear();\n                        this.#dispatchUpdateStates({\n                            hasSelectedEditor: false\n                        });\n                    }\n                    translateSelectedEditors(x, y, noCommit = false) {\n                        if (!noCommit) this.commitOrRemove();\n                        if (!this.hasSelection) return;\n                        this.#translation[0] += x;\n                        this.#translation[1] += y;\n                        const [totalX, totalY] = this.#translation;\n                        const editors = [\n                            ...this.#selectedEditors\n                        ];\n                        const TIME_TO_WAIT = 1000;\n                        if (this.#translationTimeoutId) clearTimeout(this.#translationTimeoutId);\n                        this.#translationTimeoutId = setTimeout(()=>{\n                            this.#translationTimeoutId = null;\n                            this.#translation[0] = this.#translation[1] = 0;\n                            this.addCommands({\n                                cmd: ()=>{\n                                    for (const editor of editors)if (this.#allEditors.has(editor.id)) editor.translateInPage(totalX, totalY);\n                                },\n                                undo: ()=>{\n                                    for (const editor of editors)if (this.#allEditors.has(editor.id)) editor.translateInPage(-totalX, -totalY);\n                                },\n                                mustExec: false\n                            });\n                        }, TIME_TO_WAIT);\n                        for (const editor of editors)editor.translateInPage(x, y);\n                    }\n                    setUpDragSession() {\n                        if (!this.hasSelection) return;\n                        this.disableUserSelect(true);\n                        this.#draggingEditors = new Map();\n                        for (const editor of this.#selectedEditors)this.#draggingEditors.set(editor, {\n                            savedX: editor.x,\n                            savedY: editor.y,\n                            savedPageIndex: editor.pageIndex,\n                            newX: 0,\n                            newY: 0,\n                            newPageIndex: -1\n                        });\n                    }\n                    endDragSession() {\n                        if (!this.#draggingEditors) return false;\n                        this.disableUserSelect(false);\n                        const map = this.#draggingEditors;\n                        this.#draggingEditors = null;\n                        let mustBeAddedInUndoStack = false;\n                        for (const [{ x, y, pageIndex }, value] of map){\n                            value.newX = x;\n                            value.newY = y;\n                            value.newPageIndex = pageIndex;\n                            mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n                        }\n                        if (!mustBeAddedInUndoStack) return false;\n                        const move = (editor, x, y, pageIndex)=>{\n                            if (this.#allEditors.has(editor.id)) {\n                                const parent = this.#allLayers.get(pageIndex);\n                                if (parent) editor._setParentAndPosition(parent, x, y);\n                                else {\n                                    editor.pageIndex = pageIndex;\n                                    editor.x = x;\n                                    editor.y = y;\n                                }\n                            }\n                        };\n                        this.addCommands({\n                            cmd: ()=>{\n                                for (const [editor, { newX, newY, newPageIndex }] of map)move(editor, newX, newY, newPageIndex);\n                            },\n                            undo: ()=>{\n                                for (const [editor, { savedX, savedY, savedPageIndex }] of map)move(editor, savedX, savedY, savedPageIndex);\n                            },\n                            mustExec: true\n                        });\n                        return true;\n                    }\n                    dragSelectedEditors(tx, ty) {\n                        if (!this.#draggingEditors) return;\n                        for (const editor of this.#draggingEditors.keys())editor.drag(tx, ty);\n                    }\n                    rebuild(editor) {\n                        if (editor.parent === null) {\n                            const parent = this.getLayer(editor.pageIndex);\n                            if (parent) {\n                                parent.changeParent(editor);\n                                parent.addOrRebuild(editor);\n                            } else {\n                                this.addEditor(editor);\n                                this.addToAnnotationStorage(editor);\n                                editor.rebuild();\n                            }\n                        } else editor.parent.addOrRebuild(editor);\n                    }\n                    isActive(editor) {\n                        return this.#activeEditor === editor;\n                    }\n                    getActive() {\n                        return this.#activeEditor;\n                    }\n                    getMode() {\n                        return this.#mode;\n                    }\n                    get imageManager() {\n                        return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n                    }\n                }\n                exports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n            /***/ },\n            /* 6 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n                exports.deprecated = deprecated;\n                exports.getColorValues = getColorValues;\n                exports.getCurrentTransform = getCurrentTransform;\n                exports.getCurrentTransformInverse = getCurrentTransformInverse;\n                exports.getFilenameFromUrl = getFilenameFromUrl;\n                exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n                exports.getRGB = getRGB;\n                exports.getXfaPageViewport = getXfaPageViewport;\n                exports.isDataScheme = isDataScheme;\n                exports.isPdfFile = isPdfFile;\n                exports.isValidFetchUrl = isValidFetchUrl;\n                exports.loadScript = loadScript;\n                exports.noContextMenu = noContextMenu;\n                exports.setLayerDimensions = setLayerDimensions;\n                var _base_factory = __w_pdfjs_require__(7);\n                var _util = __w_pdfjs_require__(1);\n                const SVG_NS = \"http://www.w3.org/2000/svg\";\n                class PixelsPerInch {\n                    static CSS = 96.0;\n                    static PDF = 72.0;\n                    static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n                }\n                exports.PixelsPerInch = PixelsPerInch;\n                class DOMFilterFactory extends _base_factory.BaseFilterFactory {\n                    #_cache;\n                    #_defs;\n                    #docId;\n                    #document;\n                    #hcmFilter;\n                    #hcmKey;\n                    #hcmUrl;\n                    #hcmHighlightFilter;\n                    #hcmHighlightKey;\n                    #hcmHighlightUrl;\n                    #id = 0;\n                    constructor({ docId, ownerDocument = globalThis.document } = {}){\n                        super();\n                        this.#docId = docId;\n                        this.#document = ownerDocument;\n                    }\n                    get #cache() {\n                        return this.#_cache ||= new Map();\n                    }\n                    get #defs() {\n                        if (!this.#_defs) {\n                            const div = this.#document.createElement(\"div\");\n                            const { style } = div;\n                            style.visibility = \"hidden\";\n                            style.contain = \"strict\";\n                            style.width = style.height = 0;\n                            style.position = \"absolute\";\n                            style.top = style.left = 0;\n                            style.zIndex = -1;\n                            const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n                            svg.setAttribute(\"width\", 0);\n                            svg.setAttribute(\"height\", 0);\n                            this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n                            div.append(svg);\n                            svg.append(this.#_defs);\n                            this.#document.body.append(div);\n                        }\n                        return this.#_defs;\n                    }\n                    addFilter(maps) {\n                        if (!maps) return \"none\";\n                        let value = this.#cache.get(maps);\n                        if (value) return value;\n                        let tableR, tableG, tableB, key;\n                        if (maps.length === 1) {\n                            const mapR = maps[0];\n                            const buffer = new Array(256);\n                            for(let i = 0; i < 256; i++)buffer[i] = mapR[i] / 255;\n                            key = tableR = tableG = tableB = buffer.join(\",\");\n                        } else {\n                            const [mapR, mapG, mapB] = maps;\n                            const bufferR = new Array(256);\n                            const bufferG = new Array(256);\n                            const bufferB = new Array(256);\n                            for(let i = 0; i < 256; i++){\n                                bufferR[i] = mapR[i] / 255;\n                                bufferG[i] = mapG[i] / 255;\n                                bufferB[i] = mapB[i] / 255;\n                            }\n                            tableR = bufferR.join(\",\");\n                            tableG = bufferG.join(\",\");\n                            tableB = bufferB.join(\",\");\n                            key = `${tableR}${tableG}${tableB}`;\n                        }\n                        value = this.#cache.get(key);\n                        if (value) {\n                            this.#cache.set(maps, value);\n                            return value;\n                        }\n                        const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n                        const url = `url(#${id})`;\n                        this.#cache.set(maps, url);\n                        this.#cache.set(key, url);\n                        const filter = this.#createFilter(id);\n                        this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n                        return url;\n                    }\n                    addHCMFilter(fgColor, bgColor) {\n                        const key = `${fgColor}-${bgColor}`;\n                        if (this.#hcmKey === key) return this.#hcmUrl;\n                        this.#hcmKey = key;\n                        this.#hcmUrl = \"none\";\n                        this.#hcmFilter?.remove();\n                        if (!fgColor || !bgColor) return this.#hcmUrl;\n                        const fgRGB = this.#getRGB(fgColor);\n                        fgColor = _util.Util.makeHexColor(...fgRGB);\n                        const bgRGB = this.#getRGB(bgColor);\n                        bgColor = _util.Util.makeHexColor(...bgRGB);\n                        this.#defs.style.color = \"\";\n                        if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) return this.#hcmUrl;\n                        const map = new Array(256);\n                        for(let i = 0; i <= 255; i++){\n                            const x = i / 255;\n                            map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n                        }\n                        const table = map.join(\",\");\n                        const id = `g_${this.#docId}_hcm_filter`;\n                        const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n                        this.#addTransferMapConversion(table, table, table, filter);\n                        this.#addGrayConversion(filter);\n                        const getSteps = (c, n)=>{\n                            const start = fgRGB[c] / 255;\n                            const end = bgRGB[c] / 255;\n                            const arr = new Array(n + 1);\n                            for(let i = 0; i <= n; i++)arr[i] = start + i / n * (end - start);\n                            return arr.join(\",\");\n                        };\n                        this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n                        this.#hcmUrl = `url(#${id})`;\n                        return this.#hcmUrl;\n                    }\n                    addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n                        const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n                        if (this.#hcmHighlightKey === key) return this.#hcmHighlightUrl;\n                        this.#hcmHighlightKey = key;\n                        this.#hcmHighlightUrl = \"none\";\n                        this.#hcmHighlightFilter?.remove();\n                        if (!fgColor || !bgColor) return this.#hcmHighlightUrl;\n                        const [fgRGB, bgRGB] = [\n                            fgColor,\n                            bgColor\n                        ].map(this.#getRGB.bind(this));\n                        let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n                        let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n                        let [newFgRGB, newBgRGB] = [\n                            newFgColor,\n                            newBgColor\n                        ].map(this.#getRGB.bind(this));\n                        if (bgGray < fgGray) [fgGray, bgGray, newFgRGB, newBgRGB] = [\n                            bgGray,\n                            fgGray,\n                            newBgRGB,\n                            newFgRGB\n                        ];\n                        this.#defs.style.color = \"\";\n                        const getSteps = (fg, bg, n)=>{\n                            const arr = new Array(256);\n                            const step = (bgGray - fgGray) / n;\n                            const newStart = fg / 255;\n                            const newStep = (bg - fg) / (255 * n);\n                            let prev = 0;\n                            for(let i = 0; i <= n; i++){\n                                const k = Math.round(fgGray + i * step);\n                                const value = newStart + i * newStep;\n                                for(let j = prev; j <= k; j++)arr[j] = value;\n                                prev = k + 1;\n                            }\n                            for(let i = prev; i < 256; i++)arr[i] = arr[prev - 1];\n                            return arr.join(\",\");\n                        };\n                        const id = `g_${this.#docId}_hcm_highlight_filter`;\n                        const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n                        this.#addGrayConversion(filter);\n                        this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n                        this.#hcmHighlightUrl = `url(#${id})`;\n                        return this.#hcmHighlightUrl;\n                    }\n                    destroy(keepHCM = false) {\n                        if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) return;\n                        if (this.#_defs) {\n                            this.#_defs.parentNode.parentNode.remove();\n                            this.#_defs = null;\n                        }\n                        if (this.#_cache) {\n                            this.#_cache.clear();\n                            this.#_cache = null;\n                        }\n                        this.#id = 0;\n                    }\n                    #addGrayConversion(filter) {\n                        const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n                        feColorMatrix.setAttribute(\"type\", \"matrix\");\n                        feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n                        filter.append(feColorMatrix);\n                    }\n                    #createFilter(id) {\n                        const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n                        filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n                        filter.setAttribute(\"id\", id);\n                        this.#defs.append(filter);\n                        return filter;\n                    }\n                    #appendFeFunc(feComponentTransfer, func, table) {\n                        const feFunc = this.#document.createElementNS(SVG_NS, func);\n                        feFunc.setAttribute(\"type\", \"discrete\");\n                        feFunc.setAttribute(\"tableValues\", table);\n                        feComponentTransfer.append(feFunc);\n                    }\n                    #addTransferMapConversion(rTable, gTable, bTable, filter) {\n                        const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n                        filter.append(feComponentTransfer);\n                        this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n                        this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n                        this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n                    }\n                    #getRGB(color) {\n                        this.#defs.style.color = color;\n                        return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n                    }\n                }\n                exports.DOMFilterFactory = DOMFilterFactory;\n                class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n                    constructor({ ownerDocument = globalThis.document } = {}){\n                        super();\n                        this._document = ownerDocument;\n                    }\n                    _createCanvas(width, height) {\n                        const canvas = this._document.createElement(\"canvas\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        return canvas;\n                    }\n                }\n                exports.DOMCanvasFactory = DOMCanvasFactory;\n                async function fetchData(url, asTypedArray = false) {\n                    if (isValidFetchUrl(url, document.baseURI)) {\n                        const response = await fetch(url);\n                        if (!response.ok) throw new Error(response.statusText);\n                        return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n                    }\n                    return new Promise((resolve, reject)=>{\n                        const request = new XMLHttpRequest();\n                        request.open(\"GET\", url, true);\n                        if (asTypedArray) request.responseType = \"arraybuffer\";\n                        request.onreadystatechange = ()=>{\n                            if (request.readyState !== XMLHttpRequest.DONE) return;\n                            if (request.status === 200 || request.status === 0) {\n                                let data;\n                                if (asTypedArray && request.response) data = new Uint8Array(request.response);\n                                else if (!asTypedArray && request.responseText) data = (0, _util.stringToBytes)(request.responseText);\n                                if (data) {\n                                    resolve(data);\n                                    return;\n                                }\n                            }\n                            reject(new Error(request.statusText));\n                        };\n                        request.send(null);\n                    });\n                }\n                class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n                    _fetchData(url, compressionType) {\n                        return fetchData(url, this.isCompressed).then((data)=>{\n                            return {\n                                cMapData: data,\n                                compressionType: compressionType\n                            };\n                        });\n                    }\n                }\n                exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n                class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n                    _fetchData(url) {\n                        return fetchData(url, true);\n                    }\n                }\n                exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n                class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n                    _createSVG(type) {\n                        return document.createElementNS(SVG_NS, type);\n                    }\n                }\n                exports.DOMSVGFactory = DOMSVGFactory;\n                class PageViewport {\n                    constructor({ viewBox, scale, rotation, offsetX = 0, offsetY = 0, dontFlip = false }){\n                        this.viewBox = viewBox;\n                        this.scale = scale;\n                        this.rotation = rotation;\n                        this.offsetX = offsetX;\n                        this.offsetY = offsetY;\n                        const centerX = (viewBox[2] + viewBox[0]) / 2;\n                        const centerY = (viewBox[3] + viewBox[1]) / 2;\n                        let rotateA, rotateB, rotateC, rotateD;\n                        rotation %= 360;\n                        if (rotation < 0) rotation += 360;\n                        switch(rotation){\n                            case 180:\n                                rotateA = -1;\n                                rotateB = 0;\n                                rotateC = 0;\n                                rotateD = 1;\n                                break;\n                            case 90:\n                                rotateA = 0;\n                                rotateB = 1;\n                                rotateC = 1;\n                                rotateD = 0;\n                                break;\n                            case 270:\n                                rotateA = 0;\n                                rotateB = -1;\n                                rotateC = -1;\n                                rotateD = 0;\n                                break;\n                            case 0:\n                                rotateA = 1;\n                                rotateB = 0;\n                                rotateC = 0;\n                                rotateD = -1;\n                                break;\n                            default:\n                                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n                        }\n                        if (dontFlip) {\n                            rotateC = -rotateC;\n                            rotateD = -rotateD;\n                        }\n                        let offsetCanvasX, offsetCanvasY;\n                        let width, height;\n                        if (rotateA === 0) {\n                            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n                            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n                            width = (viewBox[3] - viewBox[1]) * scale;\n                            height = (viewBox[2] - viewBox[0]) * scale;\n                        } else {\n                            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n                            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n                            width = (viewBox[2] - viewBox[0]) * scale;\n                            height = (viewBox[3] - viewBox[1]) * scale;\n                        }\n                        this.transform = [\n                            rotateA * scale,\n                            rotateB * scale,\n                            rotateC * scale,\n                            rotateD * scale,\n                            offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n                            offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n                        ];\n                        this.width = width;\n                        this.height = height;\n                    }\n                    get rawDims() {\n                        const { viewBox } = this;\n                        return (0, _util.shadow)(this, \"rawDims\", {\n                            pageWidth: viewBox[2] - viewBox[0],\n                            pageHeight: viewBox[3] - viewBox[1],\n                            pageX: viewBox[0],\n                            pageY: viewBox[1]\n                        });\n                    }\n                    clone({ scale = this.scale, rotation = this.rotation, offsetX = this.offsetX, offsetY = this.offsetY, dontFlip = false } = {}) {\n                        return new PageViewport({\n                            viewBox: this.viewBox.slice(),\n                            scale: scale,\n                            rotation: rotation,\n                            offsetX: offsetX,\n                            offsetY: offsetY,\n                            dontFlip: dontFlip\n                        });\n                    }\n                    convertToViewportPoint(x, y) {\n                        return _util.Util.applyTransform([\n                            x,\n                            y\n                        ], this.transform);\n                    }\n                    convertToViewportRectangle(rect) {\n                        const topLeft = _util.Util.applyTransform([\n                            rect[0],\n                            rect[1]\n                        ], this.transform);\n                        const bottomRight = _util.Util.applyTransform([\n                            rect[2],\n                            rect[3]\n                        ], this.transform);\n                        return [\n                            topLeft[0],\n                            topLeft[1],\n                            bottomRight[0],\n                            bottomRight[1]\n                        ];\n                    }\n                    convertToPdfPoint(x, y) {\n                        return _util.Util.applyInverseTransform([\n                            x,\n                            y\n                        ], this.transform);\n                    }\n                }\n                exports.PageViewport = PageViewport;\n                class RenderingCancelledException extends _util.BaseException {\n                    constructor(msg, extraDelay = 0){\n                        super(msg, \"RenderingCancelledException\");\n                        this.extraDelay = extraDelay;\n                    }\n                }\n                exports.RenderingCancelledException = RenderingCancelledException;\n                function isDataScheme(url) {\n                    const ii = url.length;\n                    let i = 0;\n                    while(i < ii && url[i].trim() === \"\")i++;\n                    return url.substring(i, i + 5).toLowerCase() === \"data:\";\n                }\n                function isPdfFile(filename) {\n                    return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n                }\n                function getFilenameFromUrl(url, onlyStripPath = false) {\n                    if (!onlyStripPath) [url] = url.split(/[#?]/, 1);\n                    return url.substring(url.lastIndexOf(\"/\") + 1);\n                }\n                function getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n                    if (typeof url !== \"string\") return defaultFilename;\n                    if (isDataScheme(url)) {\n                        (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n                        return defaultFilename;\n                    }\n                    const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n                    const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n                    const splitURI = reURI.exec(url);\n                    let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n                    if (suggestedFilename) {\n                        suggestedFilename = suggestedFilename[0];\n                        if (suggestedFilename.includes(\"%\")) try {\n                            suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n                        } catch  {}\n                    }\n                    return suggestedFilename || defaultFilename;\n                }\n                class StatTimer {\n                    started = Object.create(null);\n                    times = [];\n                    time(name) {\n                        if (name in this.started) (0, _util.warn)(`Timer is already running for ${name}`);\n                        this.started[name] = Date.now();\n                    }\n                    timeEnd(name) {\n                        if (!(name in this.started)) (0, _util.warn)(`Timer has not been started for ${name}`);\n                        this.times.push({\n                            name: name,\n                            start: this.started[name],\n                            end: Date.now()\n                        });\n                        delete this.started[name];\n                    }\n                    toString() {\n                        const outBuf = [];\n                        let longest = 0;\n                        for (const { name } of this.times)longest = Math.max(name.length, longest);\n                        for (const { name, start, end } of this.times)outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n                        return outBuf.join(\"\");\n                    }\n                }\n                exports.StatTimer = StatTimer;\n                function isValidFetchUrl(url, baseUrl) {\n                    try {\n                        const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n                        return protocol === \"http:\" || protocol === \"https:\";\n                    } catch  {\n                        return false;\n                    }\n                }\n                function noContextMenu(e) {\n                    e.preventDefault();\n                }\n                function loadScript(src, removeScriptElement = false) {\n                    return new Promise((resolve, reject)=>{\n                        const script = document.createElement(\"script\");\n                        script.src = src;\n                        script.onload = function(evt) {\n                            if (removeScriptElement) script.remove();\n                            resolve(evt);\n                        };\n                        script.onerror = function() {\n                            reject(new Error(`Cannot load script at: ${script.src}`));\n                        };\n                        (document.head || document.documentElement).append(script);\n                    });\n                }\n                function deprecated(details) {\n                    console.log(\"Deprecated API usage: \" + details);\n                }\n                let pdfDateStringRegex;\n                class PDFDateString {\n                    static toDateObject(input) {\n                        if (!input || typeof input !== \"string\") return null;\n                        pdfDateStringRegex ||= new RegExp(\"^D:(\\\\d{4})(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?(\\\\d{2})?([Z|+|-])?(\\\\d{2})?'?(\\\\d{2})?'?\");\n                        const matches = pdfDateStringRegex.exec(input);\n                        if (!matches) return null;\n                        const year = parseInt(matches[1], 10);\n                        let month = parseInt(matches[2], 10);\n                        month = month >= 1 && month <= 12 ? month - 1 : 0;\n                        let day = parseInt(matches[3], 10);\n                        day = day >= 1 && day <= 31 ? day : 1;\n                        let hour = parseInt(matches[4], 10);\n                        hour = hour >= 0 && hour <= 23 ? hour : 0;\n                        let minute = parseInt(matches[5], 10);\n                        minute = minute >= 0 && minute <= 59 ? minute : 0;\n                        let second = parseInt(matches[6], 10);\n                        second = second >= 0 && second <= 59 ? second : 0;\n                        const universalTimeRelation = matches[7] || \"Z\";\n                        let offsetHour = parseInt(matches[8], 10);\n                        offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n                        let offsetMinute = parseInt(matches[9], 10) || 0;\n                        offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n                        if (universalTimeRelation === \"-\") {\n                            hour += offsetHour;\n                            minute += offsetMinute;\n                        } else if (universalTimeRelation === \"+\") {\n                            hour -= offsetHour;\n                            minute -= offsetMinute;\n                        }\n                        return new Date(Date.UTC(year, month, day, hour, minute, second));\n                    }\n                }\n                exports.PDFDateString = PDFDateString;\n                function getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n                    const { width, height } = xfaPage.attributes.style;\n                    const viewBox = [\n                        0,\n                        0,\n                        parseInt(width),\n                        parseInt(height)\n                    ];\n                    return new PageViewport({\n                        viewBox: viewBox,\n                        scale: scale,\n                        rotation: rotation\n                    });\n                }\n                function getRGB(color) {\n                    if (color.startsWith(\"#\")) {\n                        const colorRGB = parseInt(color.slice(1), 16);\n                        return [\n                            (colorRGB & 0xff0000) >> 16,\n                            (colorRGB & 0x00ff00) >> 8,\n                            colorRGB & 0x0000ff\n                        ];\n                    }\n                    if (color.startsWith(\"rgb(\")) return color.slice(4, -1).split(\",\").map((x)=>parseInt(x));\n                    if (color.startsWith(\"rgba(\")) return color.slice(5, -1).split(\",\").map((x)=>parseInt(x)).slice(0, 3);\n                    (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n                    return [\n                        0,\n                        0,\n                        0\n                    ];\n                }\n                function getColorValues(colors) {\n                    const span = document.createElement(\"span\");\n                    span.style.visibility = \"hidden\";\n                    document.body.append(span);\n                    for (const name of colors.keys()){\n                        span.style.color = name;\n                        const computedColor = window.getComputedStyle(span).color;\n                        colors.set(name, getRGB(computedColor));\n                    }\n                    span.remove();\n                }\n                function getCurrentTransform(ctx) {\n                    const { a, b, c, d, e, f } = ctx.getTransform();\n                    return [\n                        a,\n                        b,\n                        c,\n                        d,\n                        e,\n                        f\n                    ];\n                }\n                function getCurrentTransformInverse(ctx) {\n                    const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n                    return [\n                        a,\n                        b,\n                        c,\n                        d,\n                        e,\n                        f\n                    ];\n                }\n                function setLayerDimensions(div, viewport, mustFlip = false, mustRotate = true) {\n                    if (viewport instanceof PageViewport) {\n                        const { pageWidth, pageHeight } = viewport.rawDims;\n                        const { style } = div;\n                        const useRound = _util.FeatureTest.isCSSRoundSupported;\n                        const w = `var(--scale-factor) * ${pageWidth}px`, h = `var(--scale-factor) * ${pageHeight}px`;\n                        const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`, heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n                        if (!mustFlip || viewport.rotation % 180 === 0) {\n                            style.width = widthStr;\n                            style.height = heightStr;\n                        } else {\n                            style.width = heightStr;\n                            style.height = widthStr;\n                        }\n                    }\n                    if (mustRotate) div.setAttribute(\"data-main-rotation\", viewport.rotation);\n                }\n            /***/ },\n            /* 7 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n                var _util = __w_pdfjs_require__(1);\n                class BaseFilterFactory {\n                    constructor(){\n                        if (this.constructor === BaseFilterFactory) (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n                    }\n                    addFilter(maps) {\n                        return \"none\";\n                    }\n                    addHCMFilter(fgColor, bgColor) {\n                        return \"none\";\n                    }\n                    addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n                        return \"none\";\n                    }\n                    destroy(keepHCM = false) {}\n                }\n                exports.BaseFilterFactory = BaseFilterFactory;\n                class BaseCanvasFactory {\n                    constructor(){\n                        if (this.constructor === BaseCanvasFactory) (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n                    }\n                    create(width, height) {\n                        if (width <= 0 || height <= 0) throw new Error(\"Invalid canvas size\");\n                        const canvas = this._createCanvas(width, height);\n                        return {\n                            canvas: canvas,\n                            context: canvas.getContext(\"2d\")\n                        };\n                    }\n                    reset(canvasAndContext, width, height) {\n                        if (!canvasAndContext.canvas) throw new Error(\"Canvas is not specified\");\n                        if (width <= 0 || height <= 0) throw new Error(\"Invalid canvas size\");\n                        canvasAndContext.canvas.width = width;\n                        canvasAndContext.canvas.height = height;\n                    }\n                    destroy(canvasAndContext) {\n                        if (!canvasAndContext.canvas) throw new Error(\"Canvas is not specified\");\n                        canvasAndContext.canvas.width = 0;\n                        canvasAndContext.canvas.height = 0;\n                        canvasAndContext.canvas = null;\n                        canvasAndContext.context = null;\n                    }\n                    _createCanvas(width, height) {\n                        (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n                    }\n                }\n                exports.BaseCanvasFactory = BaseCanvasFactory;\n                class BaseCMapReaderFactory {\n                    constructor({ baseUrl = null, isCompressed = true }){\n                        if (this.constructor === BaseCMapReaderFactory) (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n                        this.baseUrl = baseUrl;\n                        this.isCompressed = isCompressed;\n                    }\n                    async fetch({ name }) {\n                        if (!this.baseUrl) throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n                        if (!name) throw new Error(\"CMap name must be specified.\");\n                        const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                        const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                        return this._fetchData(url, compressionType).catch((reason)=>{\n                            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n                        });\n                    }\n                    _fetchData(url, compressionType) {\n                        (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n                    }\n                }\n                exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n                class BaseStandardFontDataFactory {\n                    constructor({ baseUrl = null }){\n                        if (this.constructor === BaseStandardFontDataFactory) (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n                        this.baseUrl = baseUrl;\n                    }\n                    async fetch({ filename }) {\n                        if (!this.baseUrl) throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that the \"standardFontDataUrl\" API parameter is provided.');\n                        if (!filename) throw new Error(\"Font filename must be specified.\");\n                        const url = `${this.baseUrl}${filename}`;\n                        return this._fetchData(url).catch((reason)=>{\n                            throw new Error(`Unable to load font data at: ${url}`);\n                        });\n                    }\n                    _fetchData(url) {\n                        (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n                    }\n                }\n                exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n                class BaseSVGFactory {\n                    constructor(){\n                        if (this.constructor === BaseSVGFactory) (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n                    }\n                    create(width, height, skipDimensions = false) {\n                        if (width <= 0 || height <= 0) throw new Error(\"Invalid SVG dimensions\");\n                        const svg = this._createSVG(\"svg:svg\");\n                        svg.setAttribute(\"version\", \"1.1\");\n                        if (!skipDimensions) {\n                            svg.setAttribute(\"width\", `${width}px`);\n                            svg.setAttribute(\"height\", `${height}px`);\n                        }\n                        svg.setAttribute(\"preserveAspectRatio\", \"none\");\n                        svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n                        return svg;\n                    }\n                    createElement(type) {\n                        if (typeof type !== \"string\") throw new Error(\"Invalid SVG element type\");\n                        return this._createSVG(type);\n                    }\n                    _createSVG(type) {\n                        (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n                    }\n                }\n                exports.BaseSVGFactory = BaseSVGFactory;\n            /***/ },\n            /* 8 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.MurmurHash3_64 = void 0;\n                var _util = __w_pdfjs_require__(1);\n                const SEED = 0xc3d2e1f0;\n                const MASK_HIGH = 0xffff0000;\n                const MASK_LOW = 0xffff;\n                class MurmurHash3_64 {\n                    constructor(seed){\n                        this.h1 = seed ? seed & 0xffffffff : SEED;\n                        this.h2 = seed ? seed & 0xffffffff : SEED;\n                    }\n                    update(input) {\n                        let data, length;\n                        if (typeof input === \"string\") {\n                            data = new Uint8Array(input.length * 2);\n                            length = 0;\n                            for(let i = 0, ii = input.length; i < ii; i++){\n                                const code = input.charCodeAt(i);\n                                if (code <= 0xff) data[length++] = code;\n                                else {\n                                    data[length++] = code >>> 8;\n                                    data[length++] = code & 0xff;\n                                }\n                            }\n                        } else if ((0, _util.isArrayBuffer)(input)) {\n                            data = input.slice();\n                            length = data.byteLength;\n                        } else throw new Error(\"Wrong data format in MurmurHash3_64_update. Input must be a string or array.\");\n                        const blockCounts = length >> 2;\n                        const tailLength = length - blockCounts * 4;\n                        const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n                        let k1 = 0, k2 = 0;\n                        let h1 = this.h1, h2 = this.h2;\n                        const C1 = 0xcc9e2d51, C2 = 0x1b873593;\n                        const C1_LOW = C1 & MASK_LOW, C2_LOW = C2 & MASK_LOW;\n                        for(let i = 0; i < blockCounts; i++)if (i & 1) {\n                            k1 = dataUint32[i];\n                            k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                            k1 = k1 << 15 | k1 >>> 17;\n                            k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                            h1 ^= k1;\n                            h1 = h1 << 13 | h1 >>> 19;\n                            h1 = h1 * 5 + 0xe6546b64;\n                        } else {\n                            k2 = dataUint32[i];\n                            k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                            k2 = k2 << 15 | k2 >>> 17;\n                            k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                            h2 ^= k2;\n                            h2 = h2 << 13 | h2 >>> 19;\n                            h2 = h2 * 5 + 0xe6546b64;\n                        }\n                        k1 = 0;\n                        switch(tailLength){\n                            case 3:\n                                k1 ^= data[blockCounts * 4 + 2] << 16;\n                            case 2:\n                                k1 ^= data[blockCounts * 4 + 1] << 8;\n                            case 1:\n                                k1 ^= data[blockCounts * 4];\n                                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                                k1 = k1 << 15 | k1 >>> 17;\n                                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                                if (blockCounts & 1) h1 ^= k1;\n                                else h2 ^= k1;\n                        }\n                        this.h1 = h1;\n                        this.h2 = h2;\n                    }\n                    hexdigest() {\n                        let h1 = this.h1, h2 = this.h2;\n                        h1 ^= h2 >>> 1;\n                        h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n                        h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n                        h1 ^= h2 >>> 1;\n                        h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n                        h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n                        h1 ^= h2 >>> 1;\n                        return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n                    }\n                }\n                exports.MurmurHash3_64 = MurmurHash3_64;\n            /***/ },\n            /* 9 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.FontLoader = exports.FontFaceObject = void 0;\n                var _util = __w_pdfjs_require__(1);\n                class FontLoader {\n                    #systemFonts = new Set();\n                    constructor({ ownerDocument = globalThis.document, styleElement = null }){\n                        this._document = ownerDocument;\n                        this.nativeFontFaces = new Set();\n                        this.styleElement = null;\n                        this.loadingRequests = [];\n                        this.loadTestFontId = 0;\n                    }\n                    addNativeFontFace(nativeFontFace) {\n                        this.nativeFontFaces.add(nativeFontFace);\n                        this._document.fonts.add(nativeFontFace);\n                    }\n                    removeNativeFontFace(nativeFontFace) {\n                        this.nativeFontFaces.delete(nativeFontFace);\n                        this._document.fonts.delete(nativeFontFace);\n                    }\n                    insertRule(rule) {\n                        if (!this.styleElement) {\n                            this.styleElement = this._document.createElement(\"style\");\n                            this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n                        }\n                        const styleSheet = this.styleElement.sheet;\n                        styleSheet.insertRule(rule, styleSheet.cssRules.length);\n                    }\n                    clear() {\n                        for (const nativeFontFace of this.nativeFontFaces)this._document.fonts.delete(nativeFontFace);\n                        this.nativeFontFaces.clear();\n                        this.#systemFonts.clear();\n                        if (this.styleElement) {\n                            this.styleElement.remove();\n                            this.styleElement = null;\n                        }\n                    }\n                    async loadSystemFont(info) {\n                        if (!info || this.#systemFonts.has(info.loadedName)) return;\n                        (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n                        if (this.isFontLoadingAPISupported) {\n                            const { loadedName, src, style } = info;\n                            const fontFace = new FontFace(loadedName, src, style);\n                            this.addNativeFontFace(fontFace);\n                            try {\n                                await fontFace.load();\n                                this.#systemFonts.add(loadedName);\n                            } catch  {\n                                (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n                                this.removeNativeFontFace(fontFace);\n                            }\n                            return;\n                        }\n                        (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n                    }\n                    async bind(font) {\n                        if (font.attached || font.missingFile && !font.systemFontInfo) return;\n                        font.attached = true;\n                        if (font.systemFontInfo) {\n                            await this.loadSystemFont(font.systemFontInfo);\n                            return;\n                        }\n                        if (this.isFontLoadingAPISupported) {\n                            const nativeFontFace = font.createNativeFontFace();\n                            if (nativeFontFace) {\n                                this.addNativeFontFace(nativeFontFace);\n                                try {\n                                    await nativeFontFace.loaded;\n                                } catch (ex) {\n                                    (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                                    font.disableFontFace = true;\n                                    throw ex;\n                                }\n                            }\n                            return;\n                        }\n                        const rule = font.createFontFaceRule();\n                        if (rule) {\n                            this.insertRule(rule);\n                            if (this.isSyncFontLoadingSupported) return;\n                            await new Promise((resolve)=>{\n                                const request = this._queueLoadingCallback(resolve);\n                                this._prepareFontLoadEvent(font, request);\n                            });\n                        }\n                    }\n                    get isFontLoadingAPISupported() {\n                        const hasFonts = !!this._document?.fonts;\n                        return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n                    }\n                    get isSyncFontLoadingSupported() {\n                        let supported = false;\n                        if (_util.isNodeJS) supported = true;\n                        else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) supported = true;\n                        return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n                    }\n                    _queueLoadingCallback(callback) {\n                        function completeRequest() {\n                            (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                            request.done = true;\n                            while(loadingRequests.length > 0 && loadingRequests[0].done){\n                                const otherRequest = loadingRequests.shift();\n                                setTimeout(otherRequest.callback, 0);\n                            }\n                        }\n                        const { loadingRequests } = this;\n                        const request = {\n                            done: false,\n                            complete: completeRequest,\n                            callback: callback\n                        };\n                        loadingRequests.push(request);\n                        return request;\n                    }\n                    get _loadTestFont() {\n                        const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n                        return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n                    }\n                    _prepareFontLoadEvent(font, request) {\n                        function int32(data, offset) {\n                            return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n                        }\n                        function spliceString(s, offset, remove, insert) {\n                            const chunk1 = s.substring(0, offset);\n                            const chunk2 = s.substring(offset + remove);\n                            return chunk1 + insert + chunk2;\n                        }\n                        let i, ii;\n                        const canvas = this._document.createElement(\"canvas\");\n                        canvas.width = 1;\n                        canvas.height = 1;\n                        const ctx = canvas.getContext(\"2d\");\n                        let called = 0;\n                        function isFontReady(name, callback) {\n                            if (++called > 30) {\n                                (0, _util.warn)(\"Load test font never loaded.\");\n                                callback();\n                                return;\n                            }\n                            ctx.font = \"30px \" + name;\n                            ctx.fillText(\".\", 0, 20);\n                            const imageData = ctx.getImageData(0, 0, 1, 1);\n                            if (imageData.data[3] > 0) {\n                                callback();\n                                return;\n                            }\n                            setTimeout(isFontReady.bind(null, name, callback));\n                        }\n                        const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n                        let data = this._loadTestFont;\n                        const COMMENT_OFFSET = 976;\n                        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n                        const CFF_CHECKSUM_OFFSET = 16;\n                        const XXXX_VALUE = 0x58585858;\n                        let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n                        for(i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4)checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n                        if (i < loadTestFontId.length) checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n                        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n                        const url = `url(data:font/opentype;base64,${btoa(data)});`;\n                        const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n                        this.insertRule(rule);\n                        const div = this._document.createElement(\"div\");\n                        div.style.visibility = \"hidden\";\n                        div.style.width = div.style.height = \"10px\";\n                        div.style.position = \"absolute\";\n                        div.style.top = div.style.left = \"0px\";\n                        for (const name of [\n                            font.loadedName,\n                            loadTestFontId\n                        ]){\n                            const span = this._document.createElement(\"span\");\n                            span.textContent = \"Hi\";\n                            span.style.fontFamily = name;\n                            div.append(span);\n                        }\n                        this._document.body.append(div);\n                        isFontReady(loadTestFontId, ()=>{\n                            div.remove();\n                            request.complete();\n                        });\n                    }\n                }\n                exports.FontLoader = FontLoader;\n                class FontFaceObject {\n                    constructor(translatedData, { isEvalSupported = true, disableFontFace = false, ignoreErrors = false, inspectFont = null }){\n                        this.compiledGlyphs = Object.create(null);\n                        for(const i in translatedData)this[i] = translatedData[i];\n                        this.isEvalSupported = isEvalSupported !== false;\n                        this.disableFontFace = disableFontFace === true;\n                        this.ignoreErrors = ignoreErrors === true;\n                        this._inspectFont = inspectFont;\n                    }\n                    createNativeFontFace() {\n                        if (!this.data || this.disableFontFace) return null;\n                        let nativeFontFace;\n                        if (!this.cssFontInfo) nativeFontFace = new FontFace(this.loadedName, this.data, {});\n                        else {\n                            const css = {\n                                weight: this.cssFontInfo.fontWeight\n                            };\n                            if (this.cssFontInfo.italicAngle) css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n                            nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n                        }\n                        this._inspectFont?.(this);\n                        return nativeFontFace;\n                    }\n                    createFontFaceRule() {\n                        if (!this.data || this.disableFontFace) return null;\n                        const data = (0, _util.bytesToString)(this.data);\n                        const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n                        let rule;\n                        if (!this.cssFontInfo) rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n                        else {\n                            let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n                            if (this.cssFontInfo.italicAngle) css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n                            rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n                        }\n                        this._inspectFont?.(this, url);\n                        return rule;\n                    }\n                    getPathGenerator(objs, character) {\n                        if (this.compiledGlyphs[character] !== undefined) return this.compiledGlyphs[character];\n                        let cmds;\n                        try {\n                            cmds = objs.get(this.loadedName + \"_path_\" + character);\n                        } catch (ex) {\n                            if (!this.ignoreErrors) throw ex;\n                            (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n                            return this.compiledGlyphs[character] = function(c, size) {};\n                        }\n                        if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n                            const jsBuf = [];\n                            for (const current of cmds){\n                                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n                            }\n                            return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n                        }\n                        return this.compiledGlyphs[character] = function(c, size) {\n                            for (const current of cmds){\n                                if (current.cmd === \"scale\") current.args = [\n                                    size,\n                                    -size\n                                ];\n                                c[current.cmd].apply(c, current.args);\n                            }\n                        };\n                    }\n                }\n                exports.FontFaceObject = FontFaceObject;\n            /***/ },\n            /* 10 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n                var _base_factory = __w_pdfjs_require__(7);\n                var _util = __w_pdfjs_require__(1);\n                const fetchData = function(url) {\n                    return new Promise((resolve, reject)=>{\n                        const fs = (parcelRequire(\"kjyEk\"));\n                        fs.readFile(url, (error, data)=>{\n                            if (error || !data) {\n                                reject(new Error(error));\n                                return;\n                            }\n                            resolve(new Uint8Array(data));\n                        });\n                    });\n                };\n                class NodeFilterFactory extends _base_factory.BaseFilterFactory {\n                }\n                exports.NodeFilterFactory = NodeFilterFactory;\n                class NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n                    _createCanvas(width, height) {\n                        const Canvas = (parcelRequire(\"kjyEk\"));\n                        return Canvas.createCanvas(width, height);\n                    }\n                }\n                exports.NodeCanvasFactory = NodeCanvasFactory;\n                class NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n                    _fetchData(url, compressionType) {\n                        return fetchData(url).then((data)=>{\n                            return {\n                                cMapData: data,\n                                compressionType: compressionType\n                            };\n                        });\n                    }\n                }\n                exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n                class NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n                    _fetchData(url) {\n                        return fetchData(url);\n                    }\n                }\n                exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n            /***/ },\n            /* 11 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.CanvasGraphics = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _pattern_helper = __w_pdfjs_require__(12);\n                var _image_utils = __w_pdfjs_require__(13);\n                const MIN_FONT_SIZE = 16;\n                const MAX_FONT_SIZE = 100;\n                const MAX_GROUP_SIZE = 4096;\n                const EXECUTION_TIME = 15;\n                const EXECUTION_STEPS = 10;\n                const MAX_SIZE_TO_COMPILE = 1000;\n                const FULL_CHUNK_HEIGHT = 16;\n                function mirrorContextOperations(ctx, destCtx) {\n                    if (ctx._removeMirroring) throw new Error(\"Context is already forwarding operations.\");\n                    ctx.__originalSave = ctx.save;\n                    ctx.__originalRestore = ctx.restore;\n                    ctx.__originalRotate = ctx.rotate;\n                    ctx.__originalScale = ctx.scale;\n                    ctx.__originalTranslate = ctx.translate;\n                    ctx.__originalTransform = ctx.transform;\n                    ctx.__originalSetTransform = ctx.setTransform;\n                    ctx.__originalResetTransform = ctx.resetTransform;\n                    ctx.__originalClip = ctx.clip;\n                    ctx.__originalMoveTo = ctx.moveTo;\n                    ctx.__originalLineTo = ctx.lineTo;\n                    ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n                    ctx.__originalRect = ctx.rect;\n                    ctx.__originalClosePath = ctx.closePath;\n                    ctx.__originalBeginPath = ctx.beginPath;\n                    ctx._removeMirroring = ()=>{\n                        ctx.save = ctx.__originalSave;\n                        ctx.restore = ctx.__originalRestore;\n                        ctx.rotate = ctx.__originalRotate;\n                        ctx.scale = ctx.__originalScale;\n                        ctx.translate = ctx.__originalTranslate;\n                        ctx.transform = ctx.__originalTransform;\n                        ctx.setTransform = ctx.__originalSetTransform;\n                        ctx.resetTransform = ctx.__originalResetTransform;\n                        ctx.clip = ctx.__originalClip;\n                        ctx.moveTo = ctx.__originalMoveTo;\n                        ctx.lineTo = ctx.__originalLineTo;\n                        ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n                        ctx.rect = ctx.__originalRect;\n                        ctx.closePath = ctx.__originalClosePath;\n                        ctx.beginPath = ctx.__originalBeginPath;\n                        delete ctx._removeMirroring;\n                    };\n                    ctx.save = function ctxSave() {\n                        destCtx.save();\n                        this.__originalSave();\n                    };\n                    ctx.restore = function ctxRestore() {\n                        destCtx.restore();\n                        this.__originalRestore();\n                    };\n                    ctx.translate = function ctxTranslate(x, y) {\n                        destCtx.translate(x, y);\n                        this.__originalTranslate(x, y);\n                    };\n                    ctx.scale = function ctxScale(x, y) {\n                        destCtx.scale(x, y);\n                        this.__originalScale(x, y);\n                    };\n                    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n                        destCtx.transform(a, b, c, d, e, f);\n                        this.__originalTransform(a, b, c, d, e, f);\n                    };\n                    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n                        destCtx.setTransform(a, b, c, d, e, f);\n                        this.__originalSetTransform(a, b, c, d, e, f);\n                    };\n                    ctx.resetTransform = function ctxResetTransform() {\n                        destCtx.resetTransform();\n                        this.__originalResetTransform();\n                    };\n                    ctx.rotate = function ctxRotate(angle) {\n                        destCtx.rotate(angle);\n                        this.__originalRotate(angle);\n                    };\n                    ctx.clip = function ctxRotate(rule) {\n                        destCtx.clip(rule);\n                        this.__originalClip(rule);\n                    };\n                    ctx.moveTo = function(x, y) {\n                        destCtx.moveTo(x, y);\n                        this.__originalMoveTo(x, y);\n                    };\n                    ctx.lineTo = function(x, y) {\n                        destCtx.lineTo(x, y);\n                        this.__originalLineTo(x, y);\n                    };\n                    ctx.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n                        destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n                        this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n                    };\n                    ctx.rect = function(x, y, width, height) {\n                        destCtx.rect(x, y, width, height);\n                        this.__originalRect(x, y, width, height);\n                    };\n                    ctx.closePath = function() {\n                        destCtx.closePath();\n                        this.__originalClosePath();\n                    };\n                    ctx.beginPath = function() {\n                        destCtx.beginPath();\n                        this.__originalBeginPath();\n                    };\n                }\n                class CachedCanvases {\n                    constructor(canvasFactory){\n                        this.canvasFactory = canvasFactory;\n                        this.cache = Object.create(null);\n                    }\n                    getCanvas(id, width, height) {\n                        let canvasEntry;\n                        if (this.cache[id] !== undefined) {\n                            canvasEntry = this.cache[id];\n                            this.canvasFactory.reset(canvasEntry, width, height);\n                        } else {\n                            canvasEntry = this.canvasFactory.create(width, height);\n                            this.cache[id] = canvasEntry;\n                        }\n                        return canvasEntry;\n                    }\n                    delete(id) {\n                        delete this.cache[id];\n                    }\n                    clear() {\n                        for(const id in this.cache){\n                            const canvasEntry = this.cache[id];\n                            this.canvasFactory.destroy(canvasEntry);\n                            delete this.cache[id];\n                        }\n                    }\n                }\n                function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n                    const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n                    if (b === 0 && c === 0) {\n                        const tlX = destX * a + tx;\n                        const rTlX = Math.round(tlX);\n                        const tlY = destY * d + ty;\n                        const rTlY = Math.round(tlY);\n                        const brX = (destX + destW) * a + tx;\n                        const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n                        const brY = (destY + destH) * d + ty;\n                        const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n                        ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n                        ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n                        ctx.setTransform(a, b, c, d, tx, ty);\n                        return [\n                            rWidth,\n                            rHeight\n                        ];\n                    }\n                    if (a === 0 && d === 0) {\n                        const tlX = destY * c + tx;\n                        const rTlX = Math.round(tlX);\n                        const tlY = destX * b + ty;\n                        const rTlY = Math.round(tlY);\n                        const brX = (destY + destH) * c + tx;\n                        const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n                        const brY = (destX + destW) * b + ty;\n                        const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n                        ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n                        ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n                        ctx.setTransform(a, b, c, d, tx, ty);\n                        return [\n                            rHeight,\n                            rWidth\n                        ];\n                    }\n                    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n                    const scaleX = Math.hypot(a, b);\n                    const scaleY = Math.hypot(c, d);\n                    return [\n                        scaleX * destW,\n                        scaleY * destH\n                    ];\n                }\n                function compileType3Glyph(imgData) {\n                    const { width, height } = imgData;\n                    if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) return null;\n                    const POINT_TO_PROCESS_LIMIT = 1000;\n                    const POINT_TYPES = new Uint8Array([\n                        0,\n                        2,\n                        4,\n                        0,\n                        1,\n                        0,\n                        5,\n                        4,\n                        8,\n                        10,\n                        0,\n                        8,\n                        0,\n                        2,\n                        1,\n                        0\n                    ]);\n                    const width1 = width + 1;\n                    let points = new Uint8Array(width1 * (height + 1));\n                    let i, j, j0;\n                    const lineSize = width + 7 & -8;\n                    let data = new Uint8Array(lineSize * height), pos = 0;\n                    for (const elem of imgData.data){\n                        let mask = 128;\n                        while(mask > 0){\n                            data[pos++] = elem & mask ? 0 : 255;\n                            mask >>= 1;\n                        }\n                    }\n                    let count = 0;\n                    pos = 0;\n                    if (data[pos] !== 0) {\n                        points[0] = 1;\n                        ++count;\n                    }\n                    for(j = 1; j < width; j++){\n                        if (data[pos] !== data[pos + 1]) {\n                            points[j] = data[pos] ? 2 : 1;\n                            ++count;\n                        }\n                        pos++;\n                    }\n                    if (data[pos] !== 0) {\n                        points[j] = 2;\n                        ++count;\n                    }\n                    for(i = 1; i < height; i++){\n                        pos = i * lineSize;\n                        j0 = i * width1;\n                        if (data[pos - lineSize] !== data[pos]) {\n                            points[j0] = data[pos] ? 1 : 8;\n                            ++count;\n                        }\n                        let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n                        for(j = 1; j < width; j++){\n                            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n                            if (POINT_TYPES[sum]) {\n                                points[j0 + j] = POINT_TYPES[sum];\n                                ++count;\n                            }\n                            pos++;\n                        }\n                        if (data[pos - lineSize] !== data[pos]) {\n                            points[j0 + j] = data[pos] ? 2 : 4;\n                            ++count;\n                        }\n                        if (count > POINT_TO_PROCESS_LIMIT) return null;\n                    }\n                    pos = lineSize * (height - 1);\n                    j0 = i * width1;\n                    if (data[pos] !== 0) {\n                        points[j0] = 8;\n                        ++count;\n                    }\n                    for(j = 1; j < width; j++){\n                        if (data[pos] !== data[pos + 1]) {\n                            points[j0 + j] = data[pos] ? 4 : 8;\n                            ++count;\n                        }\n                        pos++;\n                    }\n                    if (data[pos] !== 0) {\n                        points[j0 + j] = 4;\n                        ++count;\n                    }\n                    if (count > POINT_TO_PROCESS_LIMIT) return null;\n                    const steps = new Int32Array([\n                        0,\n                        width1,\n                        -1,\n                        0,\n                        -width1,\n                        0,\n                        0,\n                        0,\n                        1\n                    ]);\n                    const path = new Path2D();\n                    for(i = 0; count && i <= height; i++){\n                        let p = i * width1;\n                        const end = p + width;\n                        while(p < end && !points[p])p++;\n                        if (p === end) continue;\n                        path.moveTo(p % width1, i);\n                        const p0 = p;\n                        let type = points[p];\n                        do {\n                            const step = steps[type];\n                            do p += step;\n                            while (!points[p]);\n                            const pp = points[p];\n                            if (pp !== 5 && pp !== 10) {\n                                type = pp;\n                                points[p] = 0;\n                            } else {\n                                type = pp & 0x33 * type >> 4;\n                                points[p] &= type >> 2 | type << 2;\n                            }\n                            path.lineTo(p % width1, p / width1 | 0);\n                            if (!points[p]) --count;\n                        }while (p0 !== p);\n                        --i;\n                    }\n                    data = null;\n                    points = null;\n                    const drawOutline = function(c) {\n                        c.save();\n                        c.scale(1 / width, -1 / height);\n                        c.translate(0, -height);\n                        c.fill(path);\n                        c.beginPath();\n                        c.restore();\n                    };\n                    return drawOutline;\n                }\n                class CanvasExtraState {\n                    constructor(width, height){\n                        this.alphaIsShape = false;\n                        this.fontSize = 0;\n                        this.fontSizeScale = 1;\n                        this.textMatrix = _util.IDENTITY_MATRIX;\n                        this.textMatrixScale = 1;\n                        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n                        this.leading = 0;\n                        this.x = 0;\n                        this.y = 0;\n                        this.lineX = 0;\n                        this.lineY = 0;\n                        this.charSpacing = 0;\n                        this.wordSpacing = 0;\n                        this.textHScale = 1;\n                        this.textRenderingMode = _util.TextRenderingMode.FILL;\n                        this.textRise = 0;\n                        this.fillColor = \"#000000\";\n                        this.strokeColor = \"#000000\";\n                        this.patternFill = false;\n                        this.fillAlpha = 1;\n                        this.strokeAlpha = 1;\n                        this.lineWidth = 1;\n                        this.activeSMask = null;\n                        this.transferMaps = \"none\";\n                        this.startNewPathAndClipBox([\n                            0,\n                            0,\n                            width,\n                            height\n                        ]);\n                    }\n                    clone() {\n                        const clone = Object.create(this);\n                        clone.clipBox = this.clipBox.slice();\n                        return clone;\n                    }\n                    setCurrentPoint(x, y) {\n                        this.x = x;\n                        this.y = y;\n                    }\n                    updatePathMinMax(transform, x, y) {\n                        [x, y] = _util.Util.applyTransform([\n                            x,\n                            y\n                        ], transform);\n                        this.minX = Math.min(this.minX, x);\n                        this.minY = Math.min(this.minY, y);\n                        this.maxX = Math.max(this.maxX, x);\n                        this.maxY = Math.max(this.maxY, y);\n                    }\n                    updateRectMinMax(transform, rect) {\n                        const p1 = _util.Util.applyTransform(rect, transform);\n                        const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n                        this.minX = Math.min(this.minX, p1[0], p2[0]);\n                        this.minY = Math.min(this.minY, p1[1], p2[1]);\n                        this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n                        this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n                    }\n                    updateScalingPathMinMax(transform, minMax) {\n                        _util.Util.scaleMinMax(transform, minMax);\n                        this.minX = Math.min(this.minX, minMax[0]);\n                        this.maxX = Math.max(this.maxX, minMax[1]);\n                        this.minY = Math.min(this.minY, minMax[2]);\n                        this.maxY = Math.max(this.maxY, minMax[3]);\n                    }\n                    updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n                        const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n                        if (minMax) {\n                            minMax[0] = Math.min(minMax[0], box[0], box[2]);\n                            minMax[1] = Math.max(minMax[1], box[0], box[2]);\n                            minMax[2] = Math.min(minMax[2], box[1], box[3]);\n                            minMax[3] = Math.max(minMax[3], box[1], box[3]);\n                            return;\n                        }\n                        this.updateRectMinMax(transform, box);\n                    }\n                    getPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n                        const box = [\n                            this.minX,\n                            this.minY,\n                            this.maxX,\n                            this.maxY\n                        ];\n                        if (pathType === _pattern_helper.PathType.STROKE) {\n                            if (!transform) (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n                            const scale = _util.Util.singularValueDecompose2dScale(transform);\n                            const xStrokePad = scale[0] * this.lineWidth / 2;\n                            const yStrokePad = scale[1] * this.lineWidth / 2;\n                            box[0] -= xStrokePad;\n                            box[1] -= yStrokePad;\n                            box[2] += xStrokePad;\n                            box[3] += yStrokePad;\n                        }\n                        return box;\n                    }\n                    updateClipFromPath() {\n                        const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n                        this.startNewPathAndClipBox(intersect || [\n                            0,\n                            0,\n                            0,\n                            0\n                        ]);\n                    }\n                    isEmptyClip() {\n                        return this.minX === Infinity;\n                    }\n                    startNewPathAndClipBox(box) {\n                        this.clipBox = box;\n                        this.minX = Infinity;\n                        this.minY = Infinity;\n                        this.maxX = 0;\n                        this.maxY = 0;\n                    }\n                    getClippedPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n                        return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n                    }\n                }\n                function putBinaryImageData(ctx, imgData) {\n                    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n                        ctx.putImageData(imgData, 0, 0);\n                        return;\n                    }\n                    const height = imgData.height, width = imgData.width;\n                    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n                    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n                    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n                    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n                    let srcPos = 0, destPos;\n                    const src = imgData.data;\n                    const dest = chunkImgData.data;\n                    let i, j, thisChunkHeight, elemsInThisChunk;\n                    if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n                        const srcLength = src.byteLength;\n                        const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n                        const dest32DataLength = dest32.length;\n                        const fullSrcDiff = width + 7 >> 3;\n                        const white = 0xffffffff;\n                        const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n                        for(i = 0; i < totalChunks; i++){\n                            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n                            destPos = 0;\n                            for(j = 0; j < thisChunkHeight; j++){\n                                const srcDiff = srcLength - srcPos;\n                                let k = 0;\n                                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                                const kEndUnrolled = kEnd & -8;\n                                let mask = 0;\n                                let srcByte = 0;\n                                for(; k < kEndUnrolled; k += 8){\n                                    srcByte = src[srcPos++];\n                                    dest32[destPos++] = srcByte & 128 ? white : black;\n                                    dest32[destPos++] = srcByte & 64 ? white : black;\n                                    dest32[destPos++] = srcByte & 32 ? white : black;\n                                    dest32[destPos++] = srcByte & 16 ? white : black;\n                                    dest32[destPos++] = srcByte & 8 ? white : black;\n                                    dest32[destPos++] = srcByte & 4 ? white : black;\n                                    dest32[destPos++] = srcByte & 2 ? white : black;\n                                    dest32[destPos++] = srcByte & 1 ? white : black;\n                                }\n                                for(; k < kEnd; k++){\n                                    if (mask === 0) {\n                                        srcByte = src[srcPos++];\n                                        mask = 128;\n                                    }\n                                    dest32[destPos++] = srcByte & mask ? white : black;\n                                    mask >>= 1;\n                                }\n                            }\n                            while(destPos < dest32DataLength)dest32[destPos++] = 0;\n                            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n                        }\n                    } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n                        j = 0;\n                        elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n                        for(i = 0; i < fullChunks; i++){\n                            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n                            srcPos += elemsInThisChunk;\n                            ctx.putImageData(chunkImgData, 0, j);\n                            j += FULL_CHUNK_HEIGHT;\n                        }\n                        if (i < totalChunks) {\n                            elemsInThisChunk = width * partialChunkHeight * 4;\n                            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n                            ctx.putImageData(chunkImgData, 0, j);\n                        }\n                    } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n                        thisChunkHeight = FULL_CHUNK_HEIGHT;\n                        elemsInThisChunk = width * thisChunkHeight;\n                        for(i = 0; i < totalChunks; i++){\n                            if (i >= fullChunks) {\n                                thisChunkHeight = partialChunkHeight;\n                                elemsInThisChunk = width * thisChunkHeight;\n                            }\n                            destPos = 0;\n                            for(j = elemsInThisChunk; j--;){\n                                dest[destPos++] = src[srcPos++];\n                                dest[destPos++] = src[srcPos++];\n                                dest[destPos++] = src[srcPos++];\n                                dest[destPos++] = 255;\n                            }\n                            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n                        }\n                    } else throw new Error(`bad image kind: ${imgData.kind}`);\n                }\n                function putBinaryImageMask(ctx, imgData) {\n                    if (imgData.bitmap) {\n                        ctx.drawImage(imgData.bitmap, 0, 0);\n                        return;\n                    }\n                    const height = imgData.height, width = imgData.width;\n                    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n                    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n                    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n                    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n                    let srcPos = 0;\n                    const src = imgData.data;\n                    const dest = chunkImgData.data;\n                    for(let i = 0; i < totalChunks; i++){\n                        const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n                        ({ srcPos } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n                            src: src,\n                            srcPos: srcPos,\n                            dest: dest,\n                            width: width,\n                            height: thisChunkHeight,\n                            nonBlackColor: 0\n                        }));\n                        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n                    }\n                }\n                function copyCtxState(sourceCtx, destCtx) {\n                    const properties = [\n                        \"strokeStyle\",\n                        \"fillStyle\",\n                        \"fillRule\",\n                        \"globalAlpha\",\n                        \"lineWidth\",\n                        \"lineCap\",\n                        \"lineJoin\",\n                        \"miterLimit\",\n                        \"globalCompositeOperation\",\n                        \"font\",\n                        \"filter\"\n                    ];\n                    for (const property of properties)if (sourceCtx[property] !== undefined) destCtx[property] = sourceCtx[property];\n                    if (sourceCtx.setLineDash !== undefined) {\n                        destCtx.setLineDash(sourceCtx.getLineDash());\n                        destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n                    }\n                }\n                function resetCtxToDefault(ctx) {\n                    ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n                    ctx.fillRule = \"nonzero\";\n                    ctx.globalAlpha = 1;\n                    ctx.lineWidth = 1;\n                    ctx.lineCap = \"butt\";\n                    ctx.lineJoin = \"miter\";\n                    ctx.miterLimit = 10;\n                    ctx.globalCompositeOperation = \"source-over\";\n                    ctx.font = \"10px sans-serif\";\n                    if (ctx.setLineDash !== undefined) {\n                        ctx.setLineDash([]);\n                        ctx.lineDashOffset = 0;\n                    }\n                    if (!_util.isNodeJS) {\n                        const { filter } = ctx;\n                        if (filter !== \"none\" && filter !== \"\") ctx.filter = \"none\";\n                    }\n                }\n                function composeSMaskBackdrop(bytes, r0, g0, b0) {\n                    const length = bytes.length;\n                    for(let i = 3; i < length; i += 4){\n                        const alpha = bytes[i];\n                        if (alpha === 0) {\n                            bytes[i - 3] = r0;\n                            bytes[i - 2] = g0;\n                            bytes[i - 1] = b0;\n                        } else if (alpha < 255) {\n                            const alpha_ = 255 - alpha;\n                            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n                            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n                            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n                        }\n                    }\n                }\n                function composeSMaskAlpha(maskData, layerData, transferMap) {\n                    const length = maskData.length;\n                    const scale = 1 / 255;\n                    for(let i = 3; i < length; i += 4){\n                        const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n                        layerData[i] = layerData[i] * alpha * scale | 0;\n                    }\n                }\n                function composeSMaskLuminosity(maskData, layerData, transferMap) {\n                    const length = maskData.length;\n                    for(let i = 3; i < length; i += 4){\n                        const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n                        layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n                    }\n                }\n                function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n                    const hasBackdrop = !!backdrop;\n                    const r0 = hasBackdrop ? backdrop[0] : 0;\n                    const g0 = hasBackdrop ? backdrop[1] : 0;\n                    const b0 = hasBackdrop ? backdrop[2] : 0;\n                    const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n                    const PIXELS_TO_PROCESS = 1048576;\n                    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n                    for(let row = 0; row < height; row += chunkSize){\n                        const chunkHeight = Math.min(chunkSize, height - row);\n                        const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n                        const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n                        if (hasBackdrop) composeSMaskBackdrop(maskData.data, r0, g0, b0);\n                        composeFn(maskData.data, layerData.data, transferMap);\n                        layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n                    }\n                }\n                function composeSMask(ctx, smask, layerCtx, layerBox) {\n                    const layerOffsetX = layerBox[0];\n                    const layerOffsetY = layerBox[1];\n                    const layerWidth = layerBox[2] - layerOffsetX;\n                    const layerHeight = layerBox[3] - layerOffsetY;\n                    if (layerWidth === 0 || layerHeight === 0) return;\n                    genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n                    ctx.save();\n                    ctx.globalAlpha = 1;\n                    ctx.globalCompositeOperation = \"source-over\";\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    ctx.drawImage(layerCtx.canvas, 0, 0);\n                    ctx.restore();\n                }\n                function getImageSmoothingEnabled(transform, interpolate) {\n                    const scale = _util.Util.singularValueDecompose2dScale(transform);\n                    scale[0] = Math.fround(scale[0]);\n                    scale[1] = Math.fround(scale[1]);\n                    const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n                    if (interpolate !== undefined) return interpolate;\n                    else if (scale[0] <= actualScale || scale[1] <= actualScale) return true;\n                    return false;\n                }\n                const LINE_CAP_STYLES = [\n                    \"butt\",\n                    \"round\",\n                    \"square\"\n                ];\n                const LINE_JOIN_STYLES = [\n                    \"miter\",\n                    \"round\",\n                    \"bevel\"\n                ];\n                const NORMAL_CLIP = {};\n                const EO_CLIP = {};\n                class CanvasGraphics {\n                    constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, { optionalContentConfig, markedContentStack = null }, annotationCanvasMap, pageColors){\n                        this.ctx = canvasCtx;\n                        this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n                        this.stateStack = [];\n                        this.pendingClip = null;\n                        this.pendingEOFill = false;\n                        this.res = null;\n                        this.xobjs = null;\n                        this.commonObjs = commonObjs;\n                        this.objs = objs;\n                        this.canvasFactory = canvasFactory;\n                        this.filterFactory = filterFactory;\n                        this.groupStack = [];\n                        this.processingType3 = null;\n                        this.baseTransform = null;\n                        this.baseTransformStack = [];\n                        this.groupLevel = 0;\n                        this.smaskStack = [];\n                        this.smaskCounter = 0;\n                        this.tempSMask = null;\n                        this.suspendedCtx = null;\n                        this.contentVisible = true;\n                        this.markedContentStack = markedContentStack || [];\n                        this.optionalContentConfig = optionalContentConfig;\n                        this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n                        this.cachedPatterns = new Map();\n                        this.annotationCanvasMap = annotationCanvasMap;\n                        this.viewportScale = 1;\n                        this.outputScaleX = 1;\n                        this.outputScaleY = 1;\n                        this.pageColors = pageColors;\n                        this._cachedScaleForStroking = [\n                            -1,\n                            0\n                        ];\n                        this._cachedGetSinglePixelWidth = null;\n                        this._cachedBitmapsMap = new Map();\n                    }\n                    getObject(data, fallback = null) {\n                        if (typeof data === \"string\") return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n                        return fallback;\n                    }\n                    beginDrawing({ transform, viewport, transparency = false, background = null }) {\n                        const width = this.ctx.canvas.width;\n                        const height = this.ctx.canvas.height;\n                        const savedFillStyle = this.ctx.fillStyle;\n                        this.ctx.fillStyle = background || \"#ffffff\";\n                        this.ctx.fillRect(0, 0, width, height);\n                        this.ctx.fillStyle = savedFillStyle;\n                        if (transparency) {\n                            const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n                            this.compositeCtx = this.ctx;\n                            this.transparentCanvas = transparentCanvas.canvas;\n                            this.ctx = transparentCanvas.context;\n                            this.ctx.save();\n                            this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n                        }\n                        this.ctx.save();\n                        resetCtxToDefault(this.ctx);\n                        if (transform) {\n                            this.ctx.transform(...transform);\n                            this.outputScaleX = transform[0];\n                            this.outputScaleY = transform[0];\n                        }\n                        this.ctx.transform(...viewport.transform);\n                        this.viewportScale = viewport.scale;\n                        this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n                    }\n                    executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n                        const argsArray = operatorList.argsArray;\n                        const fnArray = operatorList.fnArray;\n                        let i = executionStartIdx || 0;\n                        const argsArrayLen = argsArray.length;\n                        if (argsArrayLen === i) return i;\n                        const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n                        const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n                        let steps = 0;\n                        const commonObjs = this.commonObjs;\n                        const objs = this.objs;\n                        let fnId;\n                        while(true){\n                            if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                                stepper.breakIt(i, continueCallback);\n                                return i;\n                            }\n                            fnId = fnArray[i];\n                            if (fnId !== _util.OPS.dependency) this[fnId].apply(this, argsArray[i]);\n                            else for (const depObjId of argsArray[i]){\n                                const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                                if (!objsPool.has(depObjId)) {\n                                    objsPool.get(depObjId, continueCallback);\n                                    return i;\n                                }\n                            }\n                            i++;\n                            if (i === argsArrayLen) return i;\n                            if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                                if (Date.now() > endTime) {\n                                    continueCallback();\n                                    return i;\n                                }\n                                steps = 0;\n                            }\n                        }\n                    }\n                    #restoreInitialState() {\n                        while(this.stateStack.length || this.inSMaskMode)this.restore();\n                        this.ctx.restore();\n                        if (this.transparentCanvas) {\n                            this.ctx = this.compositeCtx;\n                            this.ctx.save();\n                            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n                            this.ctx.drawImage(this.transparentCanvas, 0, 0);\n                            this.ctx.restore();\n                            this.transparentCanvas = null;\n                        }\n                    }\n                    endDrawing() {\n                        this.#restoreInitialState();\n                        this.cachedCanvases.clear();\n                        this.cachedPatterns.clear();\n                        for (const cache of this._cachedBitmapsMap.values()){\n                            for (const canvas of cache.values())if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) canvas.width = canvas.height = 0;\n                            cache.clear();\n                        }\n                        this._cachedBitmapsMap.clear();\n                        this.#drawFilter();\n                    }\n                    #drawFilter() {\n                        if (this.pageColors) {\n                            const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n                            if (hcmFilterId !== \"none\") {\n                                const savedFilter = this.ctx.filter;\n                                this.ctx.filter = hcmFilterId;\n                                this.ctx.drawImage(this.ctx.canvas, 0, 0);\n                                this.ctx.filter = savedFilter;\n                            }\n                        }\n                    }\n                    _scaleImage(img, inverseTransform) {\n                        const width = img.width;\n                        const height = img.height;\n                        let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n                        let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n                        let paintWidth = width, paintHeight = height;\n                        let tmpCanvasId = \"prescale1\";\n                        let tmpCanvas, tmpCtx;\n                        while(widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1){\n                            let newWidth = paintWidth, newHeight = paintHeight;\n                            if (widthScale > 2 && paintWidth > 1) {\n                                newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n                                widthScale /= paintWidth / newWidth;\n                            }\n                            if (heightScale > 2 && paintHeight > 1) {\n                                newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n                                heightScale /= paintHeight / newHeight;\n                            }\n                            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n                            tmpCtx = tmpCanvas.context;\n                            tmpCtx.clearRect(0, 0, newWidth, newHeight);\n                            tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n                            img = tmpCanvas.canvas;\n                            paintWidth = newWidth;\n                            paintHeight = newHeight;\n                            tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n                        }\n                        return {\n                            img: img,\n                            paintWidth: paintWidth,\n                            paintHeight: paintHeight\n                        };\n                    }\n                    _createMaskCanvas(img) {\n                        const ctx = this.ctx;\n                        const { width, height } = img;\n                        const fillColor = this.current.fillColor;\n                        const isPatternFill = this.current.patternFill;\n                        const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n                        let cache, cacheKey, scaled, maskCanvas;\n                        if ((img.bitmap || img.data) && img.count > 1) {\n                            const mainKey = img.bitmap || img.data.buffer;\n                            cacheKey = JSON.stringify(isPatternFill ? currentTransform : [\n                                currentTransform.slice(0, 4),\n                                fillColor\n                            ]);\n                            cache = this._cachedBitmapsMap.get(mainKey);\n                            if (!cache) {\n                                cache = new Map();\n                                this._cachedBitmapsMap.set(mainKey, cache);\n                            }\n                            const cachedImage = cache.get(cacheKey);\n                            if (cachedImage && !isPatternFill) {\n                                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                                return {\n                                    canvas: cachedImage,\n                                    offsetX: offsetX,\n                                    offsetY: offsetY\n                                };\n                            }\n                            scaled = cachedImage;\n                        }\n                        if (!scaled) {\n                            maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                            putBinaryImageMask(maskCanvas.context, img);\n                        }\n                        let maskToCanvas = _util.Util.transform(currentTransform, [\n                            1 / width,\n                            0,\n                            0,\n                            -1 / height,\n                            0,\n                            0\n                        ]);\n                        maskToCanvas = _util.Util.transform(maskToCanvas, [\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            -height\n                        ]);\n                        const cord1 = _util.Util.applyTransform([\n                            0,\n                            0\n                        ], maskToCanvas);\n                        const cord2 = _util.Util.applyTransform([\n                            width,\n                            height\n                        ], maskToCanvas);\n                        const rect = _util.Util.normalizeRect([\n                            cord1[0],\n                            cord1[1],\n                            cord2[0],\n                            cord2[1]\n                        ]);\n                        const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n                        const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n                        const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n                        const fillCtx = fillCanvas.context;\n                        const offsetX = Math.min(cord1[0], cord2[0]);\n                        const offsetY = Math.min(cord1[1], cord2[1]);\n                        fillCtx.translate(-offsetX, -offsetY);\n                        fillCtx.transform(...maskToCanvas);\n                        if (!scaled) {\n                            scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n                            scaled = scaled.img;\n                            if (cache && isPatternFill) cache.set(cacheKey, scaled);\n                        }\n                        fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n                        drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n                        fillCtx.globalCompositeOperation = \"source-in\";\n                        const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [\n                            1,\n                            0,\n                            0,\n                            1,\n                            -offsetX,\n                            -offsetY\n                        ]);\n                        fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n                        fillCtx.fillRect(0, 0, width, height);\n                        if (cache && !isPatternFill) {\n                            this.cachedCanvases.delete(\"fillCanvas\");\n                            cache.set(cacheKey, fillCanvas.canvas);\n                        }\n                        return {\n                            canvas: fillCanvas.canvas,\n                            offsetX: Math.round(offsetX),\n                            offsetY: Math.round(offsetY)\n                        };\n                    }\n                    setLineWidth(width) {\n                        if (width !== this.current.lineWidth) this._cachedScaleForStroking[0] = -1;\n                        this.current.lineWidth = width;\n                        this.ctx.lineWidth = width;\n                    }\n                    setLineCap(style) {\n                        this.ctx.lineCap = LINE_CAP_STYLES[style];\n                    }\n                    setLineJoin(style) {\n                        this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n                    }\n                    setMiterLimit(limit) {\n                        this.ctx.miterLimit = limit;\n                    }\n                    setDash(dashArray, dashPhase) {\n                        const ctx = this.ctx;\n                        if (ctx.setLineDash !== undefined) {\n                            ctx.setLineDash(dashArray);\n                            ctx.lineDashOffset = dashPhase;\n                        }\n                    }\n                    setRenderingIntent(intent) {}\n                    setFlatness(flatness) {}\n                    setGState(states) {\n                        for (const [key, value] of states)switch(key){\n                            case \"LW\":\n                                this.setLineWidth(value);\n                                break;\n                            case \"LC\":\n                                this.setLineCap(value);\n                                break;\n                            case \"LJ\":\n                                this.setLineJoin(value);\n                                break;\n                            case \"ML\":\n                                this.setMiterLimit(value);\n                                break;\n                            case \"D\":\n                                this.setDash(value[0], value[1]);\n                                break;\n                            case \"RI\":\n                                this.setRenderingIntent(value);\n                                break;\n                            case \"FL\":\n                                this.setFlatness(value);\n                                break;\n                            case \"Font\":\n                                this.setFont(value[0], value[1]);\n                                break;\n                            case \"CA\":\n                                this.current.strokeAlpha = value;\n                                break;\n                            case \"ca\":\n                                this.current.fillAlpha = value;\n                                this.ctx.globalAlpha = value;\n                                break;\n                            case \"BM\":\n                                this.ctx.globalCompositeOperation = value;\n                                break;\n                            case \"SMask\":\n                                this.current.activeSMask = value ? this.tempSMask : null;\n                                this.tempSMask = null;\n                                this.checkSMaskState();\n                                break;\n                            case \"TR\":\n                                this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n                                break;\n                        }\n                    }\n                    get inSMaskMode() {\n                        return !!this.suspendedCtx;\n                    }\n                    checkSMaskState() {\n                        const inSMaskMode = this.inSMaskMode;\n                        if (this.current.activeSMask && !inSMaskMode) this.beginSMaskMode();\n                        else if (!this.current.activeSMask && inSMaskMode) this.endSMaskMode();\n                    }\n                    beginSMaskMode() {\n                        if (this.inSMaskMode) throw new Error(\"beginSMaskMode called while already in smask mode\");\n                        const drawnWidth = this.ctx.canvas.width;\n                        const drawnHeight = this.ctx.canvas.height;\n                        const cacheId = \"smaskGroupAt\" + this.groupLevel;\n                        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n                        this.suspendedCtx = this.ctx;\n                        this.ctx = scratchCanvas.context;\n                        const ctx = this.ctx;\n                        ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n                        copyCtxState(this.suspendedCtx, ctx);\n                        mirrorContextOperations(ctx, this.suspendedCtx);\n                        this.setGState([\n                            [\n                                \"BM\",\n                                \"source-over\"\n                            ],\n                            [\n                                \"ca\",\n                                1\n                            ],\n                            [\n                                \"CA\",\n                                1\n                            ]\n                        ]);\n                    }\n                    endSMaskMode() {\n                        if (!this.inSMaskMode) throw new Error(\"endSMaskMode called while not in smask mode\");\n                        this.ctx._removeMirroring();\n                        copyCtxState(this.ctx, this.suspendedCtx);\n                        this.ctx = this.suspendedCtx;\n                        this.suspendedCtx = null;\n                    }\n                    compose(dirtyBox) {\n                        if (!this.current.activeSMask) return;\n                        if (!dirtyBox) dirtyBox = [\n                            0,\n                            0,\n                            this.ctx.canvas.width,\n                            this.ctx.canvas.height\n                        ];\n                        else {\n                            dirtyBox[0] = Math.floor(dirtyBox[0]);\n                            dirtyBox[1] = Math.floor(dirtyBox[1]);\n                            dirtyBox[2] = Math.ceil(dirtyBox[2]);\n                            dirtyBox[3] = Math.ceil(dirtyBox[3]);\n                        }\n                        const smask = this.current.activeSMask;\n                        const suspendedCtx = this.suspendedCtx;\n                        composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n                        this.ctx.save();\n                        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n                        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n                        this.ctx.restore();\n                    }\n                    save() {\n                        if (this.inSMaskMode) {\n                            copyCtxState(this.ctx, this.suspendedCtx);\n                            this.suspendedCtx.save();\n                        } else this.ctx.save();\n                        const old = this.current;\n                        this.stateStack.push(old);\n                        this.current = old.clone();\n                    }\n                    restore() {\n                        if (this.stateStack.length === 0 && this.inSMaskMode) this.endSMaskMode();\n                        if (this.stateStack.length !== 0) {\n                            this.current = this.stateStack.pop();\n                            if (this.inSMaskMode) {\n                                this.suspendedCtx.restore();\n                                copyCtxState(this.suspendedCtx, this.ctx);\n                            } else this.ctx.restore();\n                            this.checkSMaskState();\n                            this.pendingClip = null;\n                            this._cachedScaleForStroking[0] = -1;\n                            this._cachedGetSinglePixelWidth = null;\n                        }\n                    }\n                    transform(a, b, c, d, e, f) {\n                        this.ctx.transform(a, b, c, d, e, f);\n                        this._cachedScaleForStroking[0] = -1;\n                        this._cachedGetSinglePixelWidth = null;\n                    }\n                    constructPath(ops, args, minMax) {\n                        const ctx = this.ctx;\n                        const current = this.current;\n                        let x = current.x, y = current.y;\n                        let startX, startY;\n                        const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n                        const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n                        const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n                        for(let i = 0, j = 0, ii = ops.length; i < ii; i++)switch(ops[i] | 0){\n                            case _util.OPS.rectangle:\n                                x = args[j++];\n                                y = args[j++];\n                                const width = args[j++];\n                                const height = args[j++];\n                                const xw = x + width;\n                                const yh = y + height;\n                                ctx.moveTo(x, y);\n                                if (width === 0 || height === 0) ctx.lineTo(xw, yh);\n                                else {\n                                    ctx.lineTo(xw, y);\n                                    ctx.lineTo(xw, yh);\n                                    ctx.lineTo(x, yh);\n                                }\n                                if (!isScalingMatrix) current.updateRectMinMax(currentTransform, [\n                                    x,\n                                    y,\n                                    xw,\n                                    yh\n                                ]);\n                                ctx.closePath();\n                                break;\n                            case _util.OPS.moveTo:\n                                x = args[j++];\n                                y = args[j++];\n                                ctx.moveTo(x, y);\n                                if (!isScalingMatrix) current.updatePathMinMax(currentTransform, x, y);\n                                break;\n                            case _util.OPS.lineTo:\n                                x = args[j++];\n                                y = args[j++];\n                                ctx.lineTo(x, y);\n                                if (!isScalingMatrix) current.updatePathMinMax(currentTransform, x, y);\n                                break;\n                            case _util.OPS.curveTo:\n                                startX = x;\n                                startY = y;\n                                x = args[j + 4];\n                                y = args[j + 5];\n                                ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                                current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                                j += 6;\n                                break;\n                            case _util.OPS.curveTo2:\n                                startX = x;\n                                startY = y;\n                                ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                                current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                                x = args[j + 2];\n                                y = args[j + 3];\n                                j += 4;\n                                break;\n                            case _util.OPS.curveTo3:\n                                startX = x;\n                                startY = y;\n                                x = args[j + 2];\n                                y = args[j + 3];\n                                ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                                current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                                j += 4;\n                                break;\n                            case _util.OPS.closePath:\n                                ctx.closePath();\n                                break;\n                        }\n                        if (isScalingMatrix) current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n                        current.setCurrentPoint(x, y);\n                    }\n                    closePath() {\n                        this.ctx.closePath();\n                    }\n                    stroke(consumePath = true) {\n                        const ctx = this.ctx;\n                        const strokeColor = this.current.strokeColor;\n                        ctx.globalAlpha = this.current.strokeAlpha;\n                        if (this.contentVisible) {\n                            if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                                ctx.save();\n                                ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n                                this.rescaleAndStroke(false);\n                                ctx.restore();\n                            } else this.rescaleAndStroke(true);\n                        }\n                        if (consumePath) this.consumePath(this.current.getClippedPathBoundingBox());\n                        ctx.globalAlpha = this.current.fillAlpha;\n                    }\n                    closeStroke() {\n                        this.closePath();\n                        this.stroke();\n                    }\n                    fill(consumePath = true) {\n                        const ctx = this.ctx;\n                        const fillColor = this.current.fillColor;\n                        const isPatternFill = this.current.patternFill;\n                        let needRestore = false;\n                        if (isPatternFill) {\n                            ctx.save();\n                            ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n                            needRestore = true;\n                        }\n                        const intersect = this.current.getClippedPathBoundingBox();\n                        if (this.contentVisible && intersect !== null) {\n                            if (this.pendingEOFill) {\n                                ctx.fill(\"evenodd\");\n                                this.pendingEOFill = false;\n                            } else ctx.fill();\n                        }\n                        if (needRestore) ctx.restore();\n                        if (consumePath) this.consumePath(intersect);\n                    }\n                    eoFill() {\n                        this.pendingEOFill = true;\n                        this.fill();\n                    }\n                    fillStroke() {\n                        this.fill(false);\n                        this.stroke(false);\n                        this.consumePath();\n                    }\n                    eoFillStroke() {\n                        this.pendingEOFill = true;\n                        this.fillStroke();\n                    }\n                    closeFillStroke() {\n                        this.closePath();\n                        this.fillStroke();\n                    }\n                    closeEOFillStroke() {\n                        this.pendingEOFill = true;\n                        this.closePath();\n                        this.fillStroke();\n                    }\n                    endPath() {\n                        this.consumePath();\n                    }\n                    clip() {\n                        this.pendingClip = NORMAL_CLIP;\n                    }\n                    eoClip() {\n                        this.pendingClip = EO_CLIP;\n                    }\n                    beginText() {\n                        this.current.textMatrix = _util.IDENTITY_MATRIX;\n                        this.current.textMatrixScale = 1;\n                        this.current.x = this.current.lineX = 0;\n                        this.current.y = this.current.lineY = 0;\n                    }\n                    endText() {\n                        const paths = this.pendingTextPaths;\n                        const ctx = this.ctx;\n                        if (paths === undefined) {\n                            ctx.beginPath();\n                            return;\n                        }\n                        ctx.save();\n                        ctx.beginPath();\n                        for (const path of paths){\n                            ctx.setTransform(...path.transform);\n                            ctx.translate(path.x, path.y);\n                            path.addToPath(ctx, path.fontSize);\n                        }\n                        ctx.restore();\n                        ctx.clip();\n                        ctx.beginPath();\n                        delete this.pendingTextPaths;\n                    }\n                    setCharSpacing(spacing) {\n                        this.current.charSpacing = spacing;\n                    }\n                    setWordSpacing(spacing) {\n                        this.current.wordSpacing = spacing;\n                    }\n                    setHScale(scale) {\n                        this.current.textHScale = scale / 100;\n                    }\n                    setLeading(leading) {\n                        this.current.leading = -leading;\n                    }\n                    setFont(fontRefName, size) {\n                        const fontObj = this.commonObjs.get(fontRefName);\n                        const current = this.current;\n                        if (!fontObj) throw new Error(`Can't find font for ${fontRefName}`);\n                        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n                        if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n                        if (size < 0) {\n                            size = -size;\n                            current.fontDirection = -1;\n                        } else current.fontDirection = 1;\n                        this.current.font = fontObj;\n                        this.current.fontSize = size;\n                        if (fontObj.isType3Font) return;\n                        const name = fontObj.loadedName || \"sans-serif\";\n                        const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n                        let bold = \"normal\";\n                        if (fontObj.black) bold = \"900\";\n                        else if (fontObj.bold) bold = \"bold\";\n                        const italic = fontObj.italic ? \"italic\" : \"normal\";\n                        let browserFontSize = size;\n                        if (size < MIN_FONT_SIZE) browserFontSize = MIN_FONT_SIZE;\n                        else if (size > MAX_FONT_SIZE) browserFontSize = MAX_FONT_SIZE;\n                        this.current.fontSizeScale = size / browserFontSize;\n                        this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n                    }\n                    setTextRenderingMode(mode) {\n                        this.current.textRenderingMode = mode;\n                    }\n                    setTextRise(rise) {\n                        this.current.textRise = rise;\n                    }\n                    moveText(x, y) {\n                        this.current.x = this.current.lineX += x;\n                        this.current.y = this.current.lineY += y;\n                    }\n                    setLeadingMoveText(x, y) {\n                        this.setLeading(-y);\n                        this.moveText(x, y);\n                    }\n                    setTextMatrix(a, b, c, d, e, f) {\n                        this.current.textMatrix = [\n                            a,\n                            b,\n                            c,\n                            d,\n                            e,\n                            f\n                        ];\n                        this.current.textMatrixScale = Math.hypot(a, b);\n                        this.current.x = this.current.lineX = 0;\n                        this.current.y = this.current.lineY = 0;\n                    }\n                    nextLine() {\n                        this.moveText(0, this.current.leading);\n                    }\n                    paintChar(character, x, y, patternTransform) {\n                        const ctx = this.ctx;\n                        const current = this.current;\n                        const font = current.font;\n                        const textRenderingMode = current.textRenderingMode;\n                        const fontSize = current.fontSize / current.fontSizeScale;\n                        const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n                        const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n                        const patternFill = current.patternFill && !font.missingFile;\n                        let addToPath;\n                        if (font.disableFontFace || isAddToPathSet || patternFill) addToPath = font.getPathGenerator(this.commonObjs, character);\n                        if (font.disableFontFace || patternFill) {\n                            ctx.save();\n                            ctx.translate(x, y);\n                            ctx.beginPath();\n                            addToPath(ctx, fontSize);\n                            if (patternTransform) ctx.setTransform(...patternTransform);\n                            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) ctx.fill();\n                            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) ctx.stroke();\n                            ctx.restore();\n                        } else {\n                            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) ctx.fillText(character, x, y);\n                            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) ctx.strokeText(character, x, y);\n                        }\n                        if (isAddToPathSet) {\n                            const paths = this.pendingTextPaths ||= [];\n                            paths.push({\n                                transform: (0, _display_utils.getCurrentTransform)(ctx),\n                                x: x,\n                                y: y,\n                                fontSize: fontSize,\n                                addToPath: addToPath\n                            });\n                        }\n                    }\n                    get isFontSubpixelAAEnabled() {\n                        const { context: ctx } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n                        ctx.scale(1.5, 1);\n                        ctx.fillText(\"I\", 0, 10);\n                        const data = ctx.getImageData(0, 0, 10, 10).data;\n                        let enabled = false;\n                        for(let i = 3; i < data.length; i += 4)if (data[i] > 0 && data[i] < 255) {\n                            enabled = true;\n                            break;\n                        }\n                        return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n                    }\n                    showText(glyphs) {\n                        const current = this.current;\n                        const font = current.font;\n                        if (font.isType3Font) return this.showType3Text(glyphs);\n                        const fontSize = current.fontSize;\n                        if (fontSize === 0) return undefined;\n                        const ctx = this.ctx;\n                        const fontSizeScale = current.fontSizeScale;\n                        const charSpacing = current.charSpacing;\n                        const wordSpacing = current.wordSpacing;\n                        const fontDirection = current.fontDirection;\n                        const textHScale = current.textHScale * fontDirection;\n                        const glyphsLength = glyphs.length;\n                        const vertical = font.vertical;\n                        const spacingDir = vertical ? 1 : -1;\n                        const defaultVMetrics = font.defaultVMetrics;\n                        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n                        const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n                        ctx.save();\n                        ctx.transform(...current.textMatrix);\n                        ctx.translate(current.x, current.y + current.textRise);\n                        if (fontDirection > 0) ctx.scale(textHScale, -1);\n                        else ctx.scale(textHScale, 1);\n                        let patternTransform;\n                        if (current.patternFill) {\n                            ctx.save();\n                            const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n                            patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n                            ctx.restore();\n                            ctx.fillStyle = pattern;\n                        }\n                        let lineWidth = current.lineWidth;\n                        const scale = current.textMatrixScale;\n                        if (scale === 0 || lineWidth === 0) {\n                            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n                            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) lineWidth = this.getSinglePixelWidth();\n                        } else lineWidth /= scale;\n                        if (fontSizeScale !== 1.0) {\n                            ctx.scale(fontSizeScale, fontSizeScale);\n                            lineWidth /= fontSizeScale;\n                        }\n                        ctx.lineWidth = lineWidth;\n                        if (font.isInvalidPDFjsFont) {\n                            const chars = [];\n                            let width = 0;\n                            for (const glyph of glyphs){\n                                chars.push(glyph.unicode);\n                                width += glyph.width;\n                            }\n                            ctx.fillText(chars.join(\"\"), 0, 0);\n                            current.x += width * widthAdvanceScale * textHScale;\n                            ctx.restore();\n                            this.compose();\n                            return undefined;\n                        }\n                        let x = 0, i;\n                        for(i = 0; i < glyphsLength; ++i){\n                            const glyph = glyphs[i];\n                            if (typeof glyph === \"number\") {\n                                x += spacingDir * glyph * fontSize / 1000;\n                                continue;\n                            }\n                            let restoreNeeded = false;\n                            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                            const character = glyph.fontChar;\n                            const accent = glyph.accent;\n                            let scaledX, scaledY;\n                            let width = glyph.width;\n                            if (vertical) {\n                                const vmetric = glyph.vmetric || defaultVMetrics;\n                                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                                const vy = vmetric[2] * widthAdvanceScale;\n                                width = vmetric ? -vmetric[0] : width;\n                                scaledX = vx / fontSizeScale;\n                                scaledY = (x + vy) / fontSizeScale;\n                            } else {\n                                scaledX = x / fontSizeScale;\n                                scaledY = 0;\n                            }\n                            if (font.remeasure && width > 0) {\n                                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                                    const characterScaleX = width / measuredWidth;\n                                    restoreNeeded = true;\n                                    ctx.save();\n                                    ctx.scale(characterScaleX, 1);\n                                    scaledX /= characterScaleX;\n                                } else if (width !== measuredWidth) scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                            }\n                            if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                                if (simpleFillText && !accent) ctx.fillText(character, scaledX, scaledY);\n                                else {\n                                    this.paintChar(character, scaledX, scaledY, patternTransform);\n                                    if (accent) {\n                                        const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                                        const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                                        this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                                    }\n                                }\n                            }\n                            const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n                            x += charWidth;\n                            if (restoreNeeded) ctx.restore();\n                        }\n                        if (vertical) current.y -= x;\n                        else current.x += x * textHScale;\n                        ctx.restore();\n                        this.compose();\n                        return undefined;\n                    }\n                    showType3Text(glyphs) {\n                        const ctx = this.ctx;\n                        const current = this.current;\n                        const font = current.font;\n                        const fontSize = current.fontSize;\n                        const fontDirection = current.fontDirection;\n                        const spacingDir = font.vertical ? 1 : -1;\n                        const charSpacing = current.charSpacing;\n                        const wordSpacing = current.wordSpacing;\n                        const textHScale = current.textHScale * fontDirection;\n                        const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n                        const glyphsLength = glyphs.length;\n                        const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n                        let i, glyph, width, spacingLength;\n                        if (isTextInvisible || fontSize === 0) return;\n                        this._cachedScaleForStroking[0] = -1;\n                        this._cachedGetSinglePixelWidth = null;\n                        ctx.save();\n                        ctx.transform(...current.textMatrix);\n                        ctx.translate(current.x, current.y);\n                        ctx.scale(textHScale, fontDirection);\n                        for(i = 0; i < glyphsLength; ++i){\n                            glyph = glyphs[i];\n                            if (typeof glyph === \"number\") {\n                                spacingLength = spacingDir * glyph * fontSize / 1000;\n                                this.ctx.translate(spacingLength, 0);\n                                current.x += spacingLength * textHScale;\n                                continue;\n                            }\n                            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                            const operatorList = font.charProcOperatorList[glyph.operatorListId];\n                            if (!operatorList) {\n                                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                                continue;\n                            }\n                            if (this.contentVisible) {\n                                this.processingType3 = glyph;\n                                this.save();\n                                ctx.scale(fontSize, fontSize);\n                                ctx.transform(...fontMatrix);\n                                this.executeOperatorList(operatorList);\n                                this.restore();\n                            }\n                            const transformed = _util.Util.applyTransform([\n                                glyph.width,\n                                0\n                            ], fontMatrix);\n                            width = transformed[0] * fontSize + spacing;\n                            ctx.translate(width, 0);\n                            current.x += width * textHScale;\n                        }\n                        ctx.restore();\n                        this.processingType3 = null;\n                    }\n                    setCharWidth(xWidth, yWidth) {}\n                    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n                        this.ctx.rect(llx, lly, urx - llx, ury - lly);\n                        this.ctx.clip();\n                        this.endPath();\n                    }\n                    getColorN_Pattern(IR) {\n                        let pattern;\n                        if (IR[0] === \"TilingPattern\") {\n                            const color = IR[1];\n                            const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n                            const canvasGraphicsFactory = {\n                                createCanvasGraphics: (ctx)=>{\n                                    return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n                                        optionalContentConfig: this.optionalContentConfig,\n                                        markedContentStack: this.markedContentStack\n                                    });\n                                }\n                            };\n                            pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n                        } else pattern = this._getPattern(IR[1], IR[2]);\n                        return pattern;\n                    }\n                    setStrokeColorN() {\n                        this.current.strokeColor = this.getColorN_Pattern(arguments);\n                    }\n                    setFillColorN() {\n                        this.current.fillColor = this.getColorN_Pattern(arguments);\n                        this.current.patternFill = true;\n                    }\n                    setStrokeRGBColor(r, g, b) {\n                        const color = _util.Util.makeHexColor(r, g, b);\n                        this.ctx.strokeStyle = color;\n                        this.current.strokeColor = color;\n                    }\n                    setFillRGBColor(r, g, b) {\n                        const color = _util.Util.makeHexColor(r, g, b);\n                        this.ctx.fillStyle = color;\n                        this.current.fillColor = color;\n                        this.current.patternFill = false;\n                    }\n                    _getPattern(objId, matrix = null) {\n                        let pattern;\n                        if (this.cachedPatterns.has(objId)) pattern = this.cachedPatterns.get(objId);\n                        else {\n                            pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n                            this.cachedPatterns.set(objId, pattern);\n                        }\n                        if (matrix) pattern.matrix = matrix;\n                        return pattern;\n                    }\n                    shadingFill(objId) {\n                        if (!this.contentVisible) return;\n                        const ctx = this.ctx;\n                        this.save();\n                        const pattern = this._getPattern(objId);\n                        ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n                        const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n                        if (inv) {\n                            const { width, height } = ctx.canvas;\n                            const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([\n                                0,\n                                0,\n                                width,\n                                height\n                            ], inv);\n                            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                        } else this.ctx.fillRect(-10000000000, -10000000000, 2e10, 2e10);\n                        this.compose(this.current.getClippedPathBoundingBox());\n                        this.restore();\n                    }\n                    beginInlineImage() {\n                        (0, _util.unreachable)(\"Should not call beginInlineImage\");\n                    }\n                    beginImageData() {\n                        (0, _util.unreachable)(\"Should not call beginImageData\");\n                    }\n                    paintFormXObjectBegin(matrix, bbox) {\n                        if (!this.contentVisible) return;\n                        this.save();\n                        this.baseTransformStack.push(this.baseTransform);\n                        if (Array.isArray(matrix) && matrix.length === 6) this.transform(...matrix);\n                        this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n                        if (bbox) {\n                            const width = bbox[2] - bbox[0];\n                            const height = bbox[3] - bbox[1];\n                            this.ctx.rect(bbox[0], bbox[1], width, height);\n                            this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n                            this.clip();\n                            this.endPath();\n                        }\n                    }\n                    paintFormXObjectEnd() {\n                        if (!this.contentVisible) return;\n                        this.restore();\n                        this.baseTransform = this.baseTransformStack.pop();\n                    }\n                    beginGroup(group) {\n                        if (!this.contentVisible) return;\n                        this.save();\n                        if (this.inSMaskMode) {\n                            this.endSMaskMode();\n                            this.current.activeSMask = null;\n                        }\n                        const currentCtx = this.ctx;\n                        if (!group.isolated) (0, _util.info)(\"TODO: Support non-isolated groups.\");\n                        if (group.knockout) (0, _util.warn)(\"Knockout groups not supported.\");\n                        const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n                        if (group.matrix) currentCtx.transform(...group.matrix);\n                        if (!group.bbox) throw new Error(\"Bounding box is required.\");\n                        let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n                        const canvasBounds = [\n                            0,\n                            0,\n                            currentCtx.canvas.width,\n                            currentCtx.canvas.height\n                        ];\n                        bounds = _util.Util.intersect(bounds, canvasBounds) || [\n                            0,\n                            0,\n                            0,\n                            0\n                        ];\n                        const offsetX = Math.floor(bounds[0]);\n                        const offsetY = Math.floor(bounds[1]);\n                        let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n                        let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n                        let scaleX = 1, scaleY = 1;\n                        if (drawnWidth > MAX_GROUP_SIZE) {\n                            scaleX = drawnWidth / MAX_GROUP_SIZE;\n                            drawnWidth = MAX_GROUP_SIZE;\n                        }\n                        if (drawnHeight > MAX_GROUP_SIZE) {\n                            scaleY = drawnHeight / MAX_GROUP_SIZE;\n                            drawnHeight = MAX_GROUP_SIZE;\n                        }\n                        this.current.startNewPathAndClipBox([\n                            0,\n                            0,\n                            drawnWidth,\n                            drawnHeight\n                        ]);\n                        let cacheId = \"groupAt\" + this.groupLevel;\n                        if (group.smask) cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n                        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n                        const groupCtx = scratchCanvas.context;\n                        groupCtx.scale(1 / scaleX, 1 / scaleY);\n                        groupCtx.translate(-offsetX, -offsetY);\n                        groupCtx.transform(...currentTransform);\n                        if (group.smask) this.smaskStack.push({\n                            canvas: scratchCanvas.canvas,\n                            context: groupCtx,\n                            offsetX: offsetX,\n                            offsetY: offsetY,\n                            scaleX: scaleX,\n                            scaleY: scaleY,\n                            subtype: group.smask.subtype,\n                            backdrop: group.smask.backdrop,\n                            transferMap: group.smask.transferMap || null,\n                            startTransformInverse: null\n                        });\n                        else {\n                            currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n                            currentCtx.translate(offsetX, offsetY);\n                            currentCtx.scale(scaleX, scaleY);\n                            currentCtx.save();\n                        }\n                        copyCtxState(currentCtx, groupCtx);\n                        this.ctx = groupCtx;\n                        this.setGState([\n                            [\n                                \"BM\",\n                                \"source-over\"\n                            ],\n                            [\n                                \"ca\",\n                                1\n                            ],\n                            [\n                                \"CA\",\n                                1\n                            ]\n                        ]);\n                        this.groupStack.push(currentCtx);\n                        this.groupLevel++;\n                    }\n                    endGroup(group) {\n                        if (!this.contentVisible) return;\n                        this.groupLevel--;\n                        const groupCtx = this.ctx;\n                        const ctx = this.groupStack.pop();\n                        this.ctx = ctx;\n                        this.ctx.imageSmoothingEnabled = false;\n                        if (group.smask) {\n                            this.tempSMask = this.smaskStack.pop();\n                            this.restore();\n                        } else {\n                            this.ctx.restore();\n                            const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n                            this.restore();\n                            this.ctx.save();\n                            this.ctx.setTransform(...currentMtx);\n                            const dirtyBox = _util.Util.getAxialAlignedBoundingBox([\n                                0,\n                                0,\n                                groupCtx.canvas.width,\n                                groupCtx.canvas.height\n                            ], currentMtx);\n                            this.ctx.drawImage(groupCtx.canvas, 0, 0);\n                            this.ctx.restore();\n                            this.compose(dirtyBox);\n                        }\n                    }\n                    beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n                        this.#restoreInitialState();\n                        resetCtxToDefault(this.ctx);\n                        this.ctx.save();\n                        this.save();\n                        if (this.baseTransform) this.ctx.setTransform(...this.baseTransform);\n                        if (Array.isArray(rect) && rect.length === 4) {\n                            const width = rect[2] - rect[0];\n                            const height = rect[3] - rect[1];\n                            if (hasOwnCanvas && this.annotationCanvasMap) {\n                                transform = transform.slice();\n                                transform[4] -= rect[0];\n                                transform[5] -= rect[1];\n                                rect = rect.slice();\n                                rect[0] = rect[1] = 0;\n                                rect[2] = width;\n                                rect[3] = height;\n                                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n                                const { viewportScale } = this;\n                                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                                const { canvas, context } = this.annotationCanvas;\n                                this.annotationCanvasMap.set(id, canvas);\n                                this.annotationCanvas.savedCtx = this.ctx;\n                                this.ctx = context;\n                                this.ctx.save();\n                                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                                resetCtxToDefault(this.ctx);\n                            } else {\n                                resetCtxToDefault(this.ctx);\n                                this.ctx.rect(rect[0], rect[1], width, height);\n                                this.ctx.clip();\n                                this.endPath();\n                            }\n                        }\n                        this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n                        this.transform(...transform);\n                        this.transform(...matrix);\n                    }\n                    endAnnotation() {\n                        if (this.annotationCanvas) {\n                            this.ctx.restore();\n                            this.#drawFilter();\n                            this.ctx = this.annotationCanvas.savedCtx;\n                            delete this.annotationCanvas.savedCtx;\n                            delete this.annotationCanvas;\n                        }\n                    }\n                    paintImageMaskXObject(img) {\n                        if (!this.contentVisible) return;\n                        const count = img.count;\n                        img = this.getObject(img.data, img);\n                        img.count = count;\n                        const ctx = this.ctx;\n                        const glyph = this.processingType3;\n                        if (glyph) {\n                            if (glyph.compiled === undefined) glyph.compiled = compileType3Glyph(img);\n                            if (glyph.compiled) {\n                                glyph.compiled(ctx);\n                                return;\n                            }\n                        }\n                        const mask = this._createMaskCanvas(img);\n                        const maskCanvas = mask.canvas;\n                        ctx.save();\n                        ctx.setTransform(1, 0, 0, 1, 0, 0);\n                        ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n                        ctx.restore();\n                        this.compose();\n                    }\n                    paintImageMaskXObjectRepeat(img, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n                        if (!this.contentVisible) return;\n                        img = this.getObject(img.data, img);\n                        const ctx = this.ctx;\n                        ctx.save();\n                        const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n                        ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n                        const mask = this._createMaskCanvas(img);\n                        ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n                        for(let i = 0, ii = positions.length; i < ii; i += 2){\n                            const trans = _util.Util.transform(currentTransform, [\n                                scaleX,\n                                skewX,\n                                skewY,\n                                scaleY,\n                                positions[i],\n                                positions[i + 1]\n                            ]);\n                            const [x, y] = _util.Util.applyTransform([\n                                0,\n                                0\n                            ], trans);\n                            ctx.drawImage(mask.canvas, x, y);\n                        }\n                        ctx.restore();\n                        this.compose();\n                    }\n                    paintImageMaskXObjectGroup(images) {\n                        if (!this.contentVisible) return;\n                        const ctx = this.ctx;\n                        const fillColor = this.current.fillColor;\n                        const isPatternFill = this.current.patternFill;\n                        for (const image of images){\n                            const { data, width, height, transform } = image;\n                            const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                            const maskCtx = maskCanvas.context;\n                            maskCtx.save();\n                            const img = this.getObject(data, image);\n                            putBinaryImageMask(maskCtx, img);\n                            maskCtx.globalCompositeOperation = \"source-in\";\n                            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n                            maskCtx.fillRect(0, 0, width, height);\n                            maskCtx.restore();\n                            ctx.save();\n                            ctx.transform(...transform);\n                            ctx.scale(1, -1);\n                            drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n                            ctx.restore();\n                        }\n                        this.compose();\n                    }\n                    paintImageXObject(objId) {\n                        if (!this.contentVisible) return;\n                        const imgData = this.getObject(objId);\n                        if (!imgData) {\n                            (0, _util.warn)(\"Dependent image isn't ready yet\");\n                            return;\n                        }\n                        this.paintInlineImageXObject(imgData);\n                    }\n                    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n                        if (!this.contentVisible) return;\n                        const imgData = this.getObject(objId);\n                        if (!imgData) {\n                            (0, _util.warn)(\"Dependent image isn't ready yet\");\n                            return;\n                        }\n                        const width = imgData.width;\n                        const height = imgData.height;\n                        const map = [];\n                        for(let i = 0, ii = positions.length; i < ii; i += 2)map.push({\n                            transform: [\n                                scaleX,\n                                0,\n                                0,\n                                scaleY,\n                                positions[i],\n                                positions[i + 1]\n                            ],\n                            x: 0,\n                            y: 0,\n                            w: width,\n                            h: height\n                        });\n                        this.paintInlineImageXObjectGroup(imgData, map);\n                    }\n                    applyTransferMapsToCanvas(ctx) {\n                        if (this.current.transferMaps !== \"none\") {\n                            ctx.filter = this.current.transferMaps;\n                            ctx.drawImage(ctx.canvas, 0, 0);\n                            ctx.filter = \"none\";\n                        }\n                        return ctx.canvas;\n                    }\n                    applyTransferMapsToBitmap(imgData) {\n                        if (this.current.transferMaps === \"none\") return imgData.bitmap;\n                        const { bitmap, width, height } = imgData;\n                        const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n                        const tmpCtx = tmpCanvas.context;\n                        tmpCtx.filter = this.current.transferMaps;\n                        tmpCtx.drawImage(bitmap, 0, 0);\n                        tmpCtx.filter = \"none\";\n                        return tmpCanvas.canvas;\n                    }\n                    paintInlineImageXObject(imgData) {\n                        if (!this.contentVisible) return;\n                        const width = imgData.width;\n                        const height = imgData.height;\n                        const ctx = this.ctx;\n                        this.save();\n                        if (!_util.isNodeJS) {\n                            const { filter } = ctx;\n                            if (filter !== \"none\" && filter !== \"\") ctx.filter = \"none\";\n                        }\n                        ctx.scale(1 / width, -1 / height);\n                        let imgToPaint;\n                        if (imgData.bitmap) imgToPaint = this.applyTransferMapsToBitmap(imgData);\n                        else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) imgToPaint = imgData;\n                        else {\n                            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n                            const tmpCtx = tmpCanvas.context;\n                            putBinaryImageData(tmpCtx, imgData);\n                            imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n                        }\n                        const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n                        ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n                        drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n                        this.compose();\n                        this.restore();\n                    }\n                    paintInlineImageXObjectGroup(imgData, map) {\n                        if (!this.contentVisible) return;\n                        const ctx = this.ctx;\n                        let imgToPaint;\n                        if (imgData.bitmap) imgToPaint = imgData.bitmap;\n                        else {\n                            const w = imgData.width;\n                            const h = imgData.height;\n                            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n                            const tmpCtx = tmpCanvas.context;\n                            putBinaryImageData(tmpCtx, imgData);\n                            imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n                        }\n                        for (const entry of map){\n                            ctx.save();\n                            ctx.transform(...entry.transform);\n                            ctx.scale(1, -1);\n                            drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n                            ctx.restore();\n                        }\n                        this.compose();\n                    }\n                    paintSolidColorImageMask() {\n                        if (!this.contentVisible) return;\n                        this.ctx.fillRect(0, 0, 1, 1);\n                        this.compose();\n                    }\n                    markPoint(tag) {}\n                    markPointProps(tag, properties) {}\n                    beginMarkedContent(tag) {\n                        this.markedContentStack.push({\n                            visible: true\n                        });\n                    }\n                    beginMarkedContentProps(tag, properties) {\n                        if (tag === \"OC\") this.markedContentStack.push({\n                            visible: this.optionalContentConfig.isVisible(properties)\n                        });\n                        else this.markedContentStack.push({\n                            visible: true\n                        });\n                        this.contentVisible = this.isContentVisible();\n                    }\n                    endMarkedContent() {\n                        this.markedContentStack.pop();\n                        this.contentVisible = this.isContentVisible();\n                    }\n                    beginCompat() {}\n                    endCompat() {}\n                    consumePath(clipBox) {\n                        const isEmpty = this.current.isEmptyClip();\n                        if (this.pendingClip) this.current.updateClipFromPath();\n                        if (!this.pendingClip) this.compose(clipBox);\n                        const ctx = this.ctx;\n                        if (this.pendingClip) {\n                            if (!isEmpty) {\n                                if (this.pendingClip === EO_CLIP) ctx.clip(\"evenodd\");\n                                else ctx.clip();\n                            }\n                            this.pendingClip = null;\n                        }\n                        this.current.startNewPathAndClipBox(this.current.clipBox);\n                        ctx.beginPath();\n                    }\n                    getSinglePixelWidth() {\n                        if (!this._cachedGetSinglePixelWidth) {\n                            const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n                            if (m[1] === 0 && m[2] === 0) this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n                            else {\n                                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                                const normX = Math.hypot(m[0], m[2]);\n                                const normY = Math.hypot(m[1], m[3]);\n                                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n                            }\n                        }\n                        return this._cachedGetSinglePixelWidth;\n                    }\n                    getScaleForStroking() {\n                        if (this._cachedScaleForStroking[0] === -1) {\n                            const { lineWidth } = this.current;\n                            const { a, b, c, d } = this.ctx.getTransform();\n                            let scaleX, scaleY;\n                            if (b === 0 && c === 0) {\n                                const normX = Math.abs(a);\n                                const normY = Math.abs(d);\n                                if (normX === normY) {\n                                    if (lineWidth === 0) scaleX = scaleY = 1 / normX;\n                                    else {\n                                        const scaledLineWidth = normX * lineWidth;\n                                        scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n                                    }\n                                } else if (lineWidth === 0) {\n                                    scaleX = 1 / normX;\n                                    scaleY = 1 / normY;\n                                } else {\n                                    const scaledXLineWidth = normX * lineWidth;\n                                    const scaledYLineWidth = normY * lineWidth;\n                                    scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                                    scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                                }\n                            } else {\n                                const absDet = Math.abs(a * d - b * c);\n                                const normX = Math.hypot(a, b);\n                                const normY = Math.hypot(c, d);\n                                if (lineWidth === 0) {\n                                    scaleX = normY / absDet;\n                                    scaleY = normX / absDet;\n                                } else {\n                                    const baseArea = lineWidth * absDet;\n                                    scaleX = normY > baseArea ? normY / baseArea : 1;\n                                    scaleY = normX > baseArea ? normX / baseArea : 1;\n                                }\n                            }\n                            this._cachedScaleForStroking[0] = scaleX;\n                            this._cachedScaleForStroking[1] = scaleY;\n                        }\n                        return this._cachedScaleForStroking;\n                    }\n                    rescaleAndStroke(saveRestore) {\n                        const { ctx } = this;\n                        const { lineWidth } = this.current;\n                        const [scaleX, scaleY] = this.getScaleForStroking();\n                        ctx.lineWidth = lineWidth || 1;\n                        if (scaleX === 1 && scaleY === 1) {\n                            ctx.stroke();\n                            return;\n                        }\n                        const dashes = ctx.getLineDash();\n                        if (saveRestore) ctx.save();\n                        ctx.scale(scaleX, scaleY);\n                        if (dashes.length > 0) {\n                            const scale = Math.max(scaleX, scaleY);\n                            ctx.setLineDash(dashes.map((x)=>x / scale));\n                            ctx.lineDashOffset /= scale;\n                        }\n                        ctx.stroke();\n                        if (saveRestore) ctx.restore();\n                    }\n                    isContentVisible() {\n                        for(let i = this.markedContentStack.length - 1; i >= 0; i--){\n                            if (!this.markedContentStack[i].visible) return false;\n                        }\n                        return true;\n                    }\n                }\n                exports.CanvasGraphics = CanvasGraphics;\n                for(const op in _util.OPS)if (CanvasGraphics.prototype[op] !== undefined) CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n            /***/ },\n            /* 12 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.TilingPattern = exports.PathType = void 0;\n                exports.getShadingPattern = getShadingPattern;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                const PathType = {\n                    FILL: \"Fill\",\n                    STROKE: \"Stroke\",\n                    SHADING: \"Shading\"\n                };\n                exports.PathType = PathType;\n                function applyBoundingBox(ctx, bbox) {\n                    if (!bbox) return;\n                    const width = bbox[2] - bbox[0];\n                    const height = bbox[3] - bbox[1];\n                    const region = new Path2D();\n                    region.rect(bbox[0], bbox[1], width, height);\n                    ctx.clip(region);\n                }\n                class BaseShadingPattern {\n                    constructor(){\n                        if (this.constructor === BaseShadingPattern) (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n                    }\n                    getPattern() {\n                        (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n                    }\n                }\n                class RadialAxialShadingPattern extends BaseShadingPattern {\n                    constructor(IR){\n                        super();\n                        this._type = IR[1];\n                        this._bbox = IR[2];\n                        this._colorStops = IR[3];\n                        this._p0 = IR[4];\n                        this._p1 = IR[5];\n                        this._r0 = IR[6];\n                        this._r1 = IR[7];\n                        this.matrix = null;\n                    }\n                    _createGradient(ctx) {\n                        let grad;\n                        if (this._type === \"axial\") grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n                        else if (this._type === \"radial\") grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n                        for (const colorStop of this._colorStops)grad.addColorStop(colorStop[0], colorStop[1]);\n                        return grad;\n                    }\n                    getPattern(ctx, owner, inverse, pathType) {\n                        let pattern;\n                        if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n                            const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [\n                                0,\n                                0,\n                                0,\n                                0\n                            ];\n                            const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n                            const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n                            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n                            const tmpCtx = tmpCanvas.context;\n                            tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n                            tmpCtx.beginPath();\n                            tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n                            tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n                            inverse = _util.Util.transform(inverse, [\n                                1,\n                                0,\n                                0,\n                                1,\n                                ownerBBox[0],\n                                ownerBBox[1]\n                            ]);\n                            tmpCtx.transform(...owner.baseTransform);\n                            if (this.matrix) tmpCtx.transform(...this.matrix);\n                            applyBoundingBox(tmpCtx, this._bbox);\n                            tmpCtx.fillStyle = this._createGradient(tmpCtx);\n                            tmpCtx.fill();\n                            pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n                            const domMatrix = new DOMMatrix(inverse);\n                            pattern.setTransform(domMatrix);\n                        } else {\n                            applyBoundingBox(ctx, this._bbox);\n                            pattern = this._createGradient(ctx);\n                        }\n                        return pattern;\n                    }\n                }\n                function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n                    const coords = context.coords, colors = context.colors;\n                    const bytes = data.data, rowSize = data.width * 4;\n                    let tmp;\n                    if (coords[p1 + 1] > coords[p2 + 1]) {\n                        tmp = p1;\n                        p1 = p2;\n                        p2 = tmp;\n                        tmp = c1;\n                        c1 = c2;\n                        c2 = tmp;\n                    }\n                    if (coords[p2 + 1] > coords[p3 + 1]) {\n                        tmp = p2;\n                        p2 = p3;\n                        p3 = tmp;\n                        tmp = c2;\n                        c2 = c3;\n                        c3 = tmp;\n                    }\n                    if (coords[p1 + 1] > coords[p2 + 1]) {\n                        tmp = p1;\n                        p1 = p2;\n                        p2 = tmp;\n                        tmp = c1;\n                        c1 = c2;\n                        c2 = tmp;\n                    }\n                    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n                    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n                    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n                    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n                    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n                    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n                    if (y1 >= y3) return;\n                    const c1r = colors[c1], c1g = colors[c1 + 1], c1b = colors[c1 + 2];\n                    const c2r = colors[c2], c2g = colors[c2 + 1], c2b = colors[c2 + 2];\n                    const c3r = colors[c3], c3g = colors[c3 + 1], c3b = colors[c3 + 2];\n                    const minY = Math.round(y1), maxY = Math.round(y3);\n                    let xa, car, cag, cab;\n                    let xb, cbr, cbg, cbb;\n                    for(let y = minY; y <= maxY; y++){\n                        if (y < y2) {\n                            const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n                            xa = x1 - (x1 - x2) * k;\n                            car = c1r - (c1r - c2r) * k;\n                            cag = c1g - (c1g - c2g) * k;\n                            cab = c1b - (c1b - c2b) * k;\n                        } else {\n                            let k;\n                            if (y > y3) k = 1;\n                            else if (y2 === y3) k = 0;\n                            else k = (y2 - y) / (y2 - y3);\n                            xa = x2 - (x2 - x3) * k;\n                            car = c2r - (c2r - c3r) * k;\n                            cag = c2g - (c2g - c3g) * k;\n                            cab = c2b - (c2b - c3b) * k;\n                        }\n                        let k;\n                        if (y < y1) k = 0;\n                        else if (y > y3) k = 1;\n                        else k = (y1 - y) / (y1 - y3);\n                        xb = x1 - (x1 - x3) * k;\n                        cbr = c1r - (c1r - c3r) * k;\n                        cbg = c1g - (c1g - c3g) * k;\n                        cbb = c1b - (c1b - c3b) * k;\n                        const x1_ = Math.round(Math.min(xa, xb));\n                        const x2_ = Math.round(Math.max(xa, xb));\n                        let j = rowSize * y + x1_ * 4;\n                        for(let x = x1_; x <= x2_; x++){\n                            k = (xa - x) / (xa - xb);\n                            if (k < 0) k = 0;\n                            else if (k > 1) k = 1;\n                            bytes[j++] = car - (car - cbr) * k | 0;\n                            bytes[j++] = cag - (cag - cbg) * k | 0;\n                            bytes[j++] = cab - (cab - cbb) * k | 0;\n                            bytes[j++] = 255;\n                        }\n                    }\n                }\n                function drawFigure(data, figure, context) {\n                    const ps = figure.coords;\n                    const cs = figure.colors;\n                    let i, ii;\n                    switch(figure.type){\n                        case \"lattice\":\n                            const verticesPerRow = figure.verticesPerRow;\n                            const rows = Math.floor(ps.length / verticesPerRow) - 1;\n                            const cols = verticesPerRow - 1;\n                            for(i = 0; i < rows; i++){\n                                let q = i * verticesPerRow;\n                                for(let j = 0; j < cols; j++, q++){\n                                    drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                                    drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                                }\n                            }\n                            break;\n                        case \"triangles\":\n                            for(i = 0, ii = ps.length; i < ii; i += 3)drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n                            break;\n                        default:\n                            throw new Error(\"illegal figure\");\n                    }\n                }\n                class MeshShadingPattern extends BaseShadingPattern {\n                    constructor(IR){\n                        super();\n                        this._coords = IR[2];\n                        this._colors = IR[3];\n                        this._figures = IR[4];\n                        this._bounds = IR[5];\n                        this._bbox = IR[7];\n                        this._background = IR[8];\n                        this.matrix = null;\n                    }\n                    _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n                        const EXPECTED_SCALE = 1.1;\n                        const MAX_PATTERN_SIZE = 3000;\n                        const BORDER_SIZE = 2;\n                        const offsetX = Math.floor(this._bounds[0]);\n                        const offsetY = Math.floor(this._bounds[1]);\n                        const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n                        const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n                        const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n                        const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n                        const scaleX = boundsWidth / width;\n                        const scaleY = boundsHeight / height;\n                        const context = {\n                            coords: this._coords,\n                            colors: this._colors,\n                            offsetX: -offsetX,\n                            offsetY: -offsetY,\n                            scaleX: 1 / scaleX,\n                            scaleY: 1 / scaleY\n                        };\n                        const paddedWidth = width + BORDER_SIZE * 2;\n                        const paddedHeight = height + BORDER_SIZE * 2;\n                        const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n                        const tmpCtx = tmpCanvas.context;\n                        const data = tmpCtx.createImageData(width, height);\n                        if (backgroundColor) {\n                            const bytes = data.data;\n                            for(let i = 0, ii = bytes.length; i < ii; i += 4){\n                                bytes[i] = backgroundColor[0];\n                                bytes[i + 1] = backgroundColor[1];\n                                bytes[i + 2] = backgroundColor[2];\n                                bytes[i + 3] = 255;\n                            }\n                        }\n                        for (const figure of this._figures)drawFigure(data, figure, context);\n                        tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n                        const canvas = tmpCanvas.canvas;\n                        return {\n                            canvas: canvas,\n                            offsetX: offsetX - BORDER_SIZE * scaleX,\n                            offsetY: offsetY - BORDER_SIZE * scaleY,\n                            scaleX: scaleX,\n                            scaleY: scaleY\n                        };\n                    }\n                    getPattern(ctx, owner, inverse, pathType) {\n                        applyBoundingBox(ctx, this._bbox);\n                        let scale;\n                        if (pathType === PathType.SHADING) scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n                        else {\n                            scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n                            if (this.matrix) {\n                                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n                                scale = [\n                                    scale[0] * matrixScale[0],\n                                    scale[1] * matrixScale[1]\n                                ];\n                            }\n                        }\n                        const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n                        if (pathType !== PathType.SHADING) {\n                            ctx.setTransform(...owner.baseTransform);\n                            if (this.matrix) ctx.transform(...this.matrix);\n                        }\n                        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n                        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n                        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n                    }\n                }\n                class DummyShadingPattern extends BaseShadingPattern {\n                    getPattern() {\n                        return \"hotpink\";\n                    }\n                }\n                function getShadingPattern(IR) {\n                    switch(IR[0]){\n                        case \"RadialAxial\":\n                            return new RadialAxialShadingPattern(IR);\n                        case \"Mesh\":\n                            return new MeshShadingPattern(IR);\n                        case \"Dummy\":\n                            return new DummyShadingPattern();\n                    }\n                    throw new Error(`Unknown IR type: ${IR[0]}`);\n                }\n                const PaintType = {\n                    COLORED: 1,\n                    UNCOLORED: 2\n                };\n                class TilingPattern {\n                    static MAX_PATTERN_SIZE = 3000;\n                    constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform){\n                        this.operatorList = IR[2];\n                        this.matrix = IR[3] || [\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0\n                        ];\n                        this.bbox = IR[4];\n                        this.xstep = IR[5];\n                        this.ystep = IR[6];\n                        this.paintType = IR[7];\n                        this.tilingType = IR[8];\n                        this.color = color;\n                        this.ctx = ctx;\n                        this.canvasGraphicsFactory = canvasGraphicsFactory;\n                        this.baseTransform = baseTransform;\n                    }\n                    createPatternCanvas(owner) {\n                        const operatorList = this.operatorList;\n                        const bbox = this.bbox;\n                        const xstep = this.xstep;\n                        const ystep = this.ystep;\n                        const paintType = this.paintType;\n                        const tilingType = this.tilingType;\n                        const color = this.color;\n                        const canvasGraphicsFactory = this.canvasGraphicsFactory;\n                        (0, _util.info)(\"TilingType: \" + tilingType);\n                        const x0 = bbox[0], y0 = bbox[1], x1 = bbox[2], y1 = bbox[3];\n                        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n                        const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n                        const combinedScale = [\n                            matrixScale[0] * curMatrixScale[0],\n                            matrixScale[1] * curMatrixScale[1]\n                        ];\n                        const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n                        const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n                        const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n                        const tmpCtx = tmpCanvas.context;\n                        const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n                        graphics.groupLevel = owner.groupLevel;\n                        this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n                        let adjustedX0 = x0;\n                        let adjustedY0 = y0;\n                        let adjustedX1 = x1;\n                        let adjustedY1 = y1;\n                        if (x0 < 0) {\n                            adjustedX0 = 0;\n                            adjustedX1 += Math.abs(x0);\n                        }\n                        if (y0 < 0) {\n                            adjustedY0 = 0;\n                            adjustedY1 += Math.abs(y0);\n                        }\n                        tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n                        graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n                        tmpCtx.save();\n                        this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n                        graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n                        graphics.executeOperatorList(operatorList);\n                        graphics.endDrawing();\n                        return {\n                            canvas: tmpCanvas.canvas,\n                            scaleX: dimx.scale,\n                            scaleY: dimy.scale,\n                            offsetX: adjustedX0,\n                            offsetY: adjustedY0\n                        };\n                    }\n                    getSizeAndScale(step, realOutputSize, scale) {\n                        step = Math.abs(step);\n                        const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n                        let size = Math.ceil(step * scale);\n                        if (size >= maxSize) size = maxSize;\n                        else scale = size / step;\n                        return {\n                            scale: scale,\n                            size: size\n                        };\n                    }\n                    clipBbox(graphics, x0, y0, x1, y1) {\n                        const bboxWidth = x1 - x0;\n                        const bboxHeight = y1 - y0;\n                        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n                        graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [\n                            x0,\n                            y0,\n                            x1,\n                            y1\n                        ]);\n                        graphics.clip();\n                        graphics.endPath();\n                    }\n                    setFillAndStrokeStyleToContext(graphics, paintType, color) {\n                        const context = graphics.ctx, current = graphics.current;\n                        switch(paintType){\n                            case PaintType.COLORED:\n                                const ctx = this.ctx;\n                                context.fillStyle = ctx.fillStyle;\n                                context.strokeStyle = ctx.strokeStyle;\n                                current.fillColor = ctx.fillStyle;\n                                current.strokeColor = ctx.strokeStyle;\n                                break;\n                            case PaintType.UNCOLORED:\n                                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n                                context.fillStyle = cssColor;\n                                context.strokeStyle = cssColor;\n                                current.fillColor = cssColor;\n                                current.strokeColor = cssColor;\n                                break;\n                            default:\n                                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n                        }\n                    }\n                    getPattern(ctx, owner, inverse, pathType) {\n                        let matrix = inverse;\n                        if (pathType !== PathType.SHADING) {\n                            matrix = _util.Util.transform(matrix, owner.baseTransform);\n                            if (this.matrix) matrix = _util.Util.transform(matrix, this.matrix);\n                        }\n                        const temporaryPatternCanvas = this.createPatternCanvas(owner);\n                        let domMatrix = new DOMMatrix(matrix);\n                        domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n                        domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n                        const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n                        pattern.setTransform(domMatrix);\n                        return pattern;\n                    }\n                }\n                exports.TilingPattern = TilingPattern;\n            /***/ },\n            /* 13 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\n                exports.convertToRGBA = convertToRGBA;\n                exports.grayToRGBA = grayToRGBA;\n                var _util = __w_pdfjs_require__(1);\n                function convertToRGBA(params) {\n                    switch(params.kind){\n                        case _util.ImageKind.GRAYSCALE_1BPP:\n                            return convertBlackAndWhiteToRGBA(params);\n                        case _util.ImageKind.RGB_24BPP:\n                            return convertRGBToRGBA(params);\n                    }\n                    return null;\n                }\n                function convertBlackAndWhiteToRGBA({ src, srcPos = 0, dest, width, height, nonBlackColor = 0xffffffff, inverseDecode = false }) {\n                    const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n                    const [zeroMapping, oneMapping] = inverseDecode ? [\n                        nonBlackColor,\n                        black\n                    ] : [\n                        black,\n                        nonBlackColor\n                    ];\n                    const widthInSource = width >> 3;\n                    const widthRemainder = width & 7;\n                    const srcLength = src.length;\n                    dest = new Uint32Array(dest.buffer);\n                    let destPos = 0;\n                    for(let i = 0; i < height; i++){\n                        for(const max = srcPos + widthInSource; srcPos < max; srcPos++){\n                            const elem = srcPos < srcLength ? src[srcPos] : 255;\n                            dest[destPos++] = elem & 128 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 64 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 32 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 16 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 8 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 4 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 2 ? oneMapping : zeroMapping;\n                            dest[destPos++] = elem & 1 ? oneMapping : zeroMapping;\n                        }\n                        if (widthRemainder === 0) continue;\n                        const elem = srcPos < srcLength ? src[srcPos++] : 255;\n                        for(let j = 0; j < widthRemainder; j++)dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n                    }\n                    return {\n                        srcPos: srcPos,\n                        destPos: destPos\n                    };\n                }\n                function convertRGBToRGBA({ src, srcPos = 0, dest, destPos = 0, width, height }) {\n                    let i = 0;\n                    const len32 = src.length >> 2;\n                    const src32 = new Uint32Array(src.buffer, srcPos, len32);\n                    if (_util.FeatureTest.isLittleEndian) {\n                        for(; i < len32 - 2; i += 3, destPos += 4){\n                            const s1 = src32[i];\n                            const s2 = src32[i + 1];\n                            const s3 = src32[i + 2];\n                            dest[destPos] = s1 | 0xff000000;\n                            dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n                            dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n                            dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n                        }\n                        for(let j = i * 4, jj = src.length; j < jj; j += 3)dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n                    } else {\n                        for(; i < len32 - 2; i += 3, destPos += 4){\n                            const s1 = src32[i];\n                            const s2 = src32[i + 1];\n                            const s3 = src32[i + 2];\n                            dest[destPos] = s1 | 0xff;\n                            dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n                            dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n                            dest[destPos + 3] = s3 << 8 | 0xff;\n                        }\n                        for(let j = i * 4, jj = src.length; j < jj; j += 3)dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n                    }\n                    return {\n                        srcPos: srcPos,\n                        destPos: destPos\n                    };\n                }\n                function grayToRGBA(src, dest) {\n                    if (_util.FeatureTest.isLittleEndian) for(let i = 0, ii = src.length; i < ii; i++)dest[i] = src[i] * 0x10101 | 0xff000000;\n                    else for(let i = 0, ii = src.length; i < ii; i++)dest[i] = src[i] * 0x1010100 | 0x000000ff;\n                }\n            /***/ },\n            /* 14 */ /***/ (__unused_webpack_module, exports)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.GlobalWorkerOptions = void 0;\n                const GlobalWorkerOptions = Object.create(null);\n                exports.GlobalWorkerOptions = GlobalWorkerOptions;\n                GlobalWorkerOptions.workerPort = null;\n                GlobalWorkerOptions.workerSrc = \"\";\n            /***/ },\n            /* 15 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.MessageHandler = void 0;\n                var _util = __w_pdfjs_require__(1);\n                const CallbackKind = {\n                    UNKNOWN: 0,\n                    DATA: 1,\n                    ERROR: 2\n                };\n                const StreamKind = {\n                    UNKNOWN: 0,\n                    CANCEL: 1,\n                    CANCEL_COMPLETE: 2,\n                    CLOSE: 3,\n                    ENQUEUE: 4,\n                    ERROR: 5,\n                    PULL: 6,\n                    PULL_COMPLETE: 7,\n                    START_COMPLETE: 8\n                };\n                function wrapReason(reason) {\n                    if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n                    switch(reason.name){\n                        case \"AbortException\":\n                            return new _util.AbortException(reason.message);\n                        case \"MissingPDFException\":\n                            return new _util.MissingPDFException(reason.message);\n                        case \"PasswordException\":\n                            return new _util.PasswordException(reason.message, reason.code);\n                        case \"UnexpectedResponseException\":\n                            return new _util.UnexpectedResponseException(reason.message, reason.status);\n                        case \"UnknownErrorException\":\n                            return new _util.UnknownErrorException(reason.message, reason.details);\n                        default:\n                            return new _util.UnknownErrorException(reason.message, reason.toString());\n                    }\n                }\n                class MessageHandler {\n                    constructor(sourceName, targetName, comObj){\n                        this.sourceName = sourceName;\n                        this.targetName = targetName;\n                        this.comObj = comObj;\n                        this.callbackId = 1;\n                        this.streamId = 1;\n                        this.streamSinks = Object.create(null);\n                        this.streamControllers = Object.create(null);\n                        this.callbackCapabilities = Object.create(null);\n                        this.actionHandler = Object.create(null);\n                        this._onComObjOnMessage = (event)=>{\n                            const data = event.data;\n                            if (data.targetName !== this.sourceName) return;\n                            if (data.stream) {\n                                this.#processStreamMessage(data);\n                                return;\n                            }\n                            if (data.callback) {\n                                const callbackId = data.callbackId;\n                                const capability = this.callbackCapabilities[callbackId];\n                                if (!capability) throw new Error(`Cannot resolve callback ${callbackId}`);\n                                delete this.callbackCapabilities[callbackId];\n                                if (data.callback === CallbackKind.DATA) capability.resolve(data.data);\n                                else if (data.callback === CallbackKind.ERROR) capability.reject(wrapReason(data.reason));\n                                else throw new Error(\"Unexpected callback case\");\n                                return;\n                            }\n                            const action = this.actionHandler[data.action];\n                            if (!action) throw new Error(`Unknown action from worker: ${data.action}`);\n                            if (data.callbackId) {\n                                const cbSourceName = this.sourceName;\n                                const cbTargetName = data.sourceName;\n                                new Promise(function(resolve) {\n                                    resolve(action(data.data));\n                                }).then(function(result) {\n                                    comObj.postMessage({\n                                        sourceName: cbSourceName,\n                                        targetName: cbTargetName,\n                                        callback: CallbackKind.DATA,\n                                        callbackId: data.callbackId,\n                                        data: result\n                                    });\n                                }, function(reason) {\n                                    comObj.postMessage({\n                                        sourceName: cbSourceName,\n                                        targetName: cbTargetName,\n                                        callback: CallbackKind.ERROR,\n                                        callbackId: data.callbackId,\n                                        reason: wrapReason(reason)\n                                    });\n                                });\n                                return;\n                            }\n                            if (data.streamId) {\n                                this.#createStreamSink(data);\n                                return;\n                            }\n                            action(data.data);\n                        };\n                        comObj.addEventListener(\"message\", this._onComObjOnMessage);\n                    }\n                    on(actionName, handler) {\n                        const ah = this.actionHandler;\n                        if (ah[actionName]) throw new Error(`There is already an actionName called \"${actionName}\"`);\n                        ah[actionName] = handler;\n                    }\n                    send(actionName, data, transfers) {\n                        this.comObj.postMessage({\n                            sourceName: this.sourceName,\n                            targetName: this.targetName,\n                            action: actionName,\n                            data: data\n                        }, transfers);\n                    }\n                    sendWithPromise(actionName, data, transfers) {\n                        const callbackId = this.callbackId++;\n                        const capability = new _util.PromiseCapability();\n                        this.callbackCapabilities[callbackId] = capability;\n                        try {\n                            this.comObj.postMessage({\n                                sourceName: this.sourceName,\n                                targetName: this.targetName,\n                                action: actionName,\n                                callbackId: callbackId,\n                                data: data\n                            }, transfers);\n                        } catch (ex) {\n                            capability.reject(ex);\n                        }\n                        return capability.promise;\n                    }\n                    sendWithStream(actionName, data, queueingStrategy, transfers) {\n                        const streamId = this.streamId++, sourceName = this.sourceName, targetName = this.targetName, comObj = this.comObj;\n                        return new ReadableStream({\n                            start: (controller)=>{\n                                const startCapability = new _util.PromiseCapability();\n                                this.streamControllers[streamId] = {\n                                    controller: controller,\n                                    startCall: startCapability,\n                                    pullCall: null,\n                                    cancelCall: null,\n                                    isClosed: false\n                                };\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    action: actionName,\n                                    streamId: streamId,\n                                    data: data,\n                                    desiredSize: controller.desiredSize\n                                }, transfers);\n                                return startCapability.promise;\n                            },\n                            pull: (controller)=>{\n                                const pullCapability = new _util.PromiseCapability();\n                                this.streamControllers[streamId].pullCall = pullCapability;\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    stream: StreamKind.PULL,\n                                    streamId: streamId,\n                                    desiredSize: controller.desiredSize\n                                });\n                                return pullCapability.promise;\n                            },\n                            cancel: (reason)=>{\n                                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                                const cancelCapability = new _util.PromiseCapability();\n                                this.streamControllers[streamId].cancelCall = cancelCapability;\n                                this.streamControllers[streamId].isClosed = true;\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    stream: StreamKind.CANCEL,\n                                    streamId: streamId,\n                                    reason: wrapReason(reason)\n                                });\n                                return cancelCapability.promise;\n                            }\n                        }, queueingStrategy);\n                    }\n                    #createStreamSink(data) {\n                        const streamId = data.streamId, sourceName = this.sourceName, targetName = data.sourceName, comObj = this.comObj;\n                        const self = this, action = this.actionHandler[data.action];\n                        const streamSink = {\n                            enqueue (chunk, size = 1, transfers) {\n                                if (this.isCancelled) return;\n                                const lastDesiredSize = this.desiredSize;\n                                this.desiredSize -= size;\n                                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                                    this.sinkCapability = new _util.PromiseCapability();\n                                    this.ready = this.sinkCapability.promise;\n                                }\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    stream: StreamKind.ENQUEUE,\n                                    streamId: streamId,\n                                    chunk: chunk\n                                }, transfers);\n                            },\n                            close () {\n                                if (this.isCancelled) return;\n                                this.isCancelled = true;\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    stream: StreamKind.CLOSE,\n                                    streamId: streamId\n                                });\n                                delete self.streamSinks[streamId];\n                            },\n                            error (reason) {\n                                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                                if (this.isCancelled) return;\n                                this.isCancelled = true;\n                                comObj.postMessage({\n                                    sourceName: sourceName,\n                                    targetName: targetName,\n                                    stream: StreamKind.ERROR,\n                                    streamId: streamId,\n                                    reason: wrapReason(reason)\n                                });\n                            },\n                            sinkCapability: new _util.PromiseCapability(),\n                            onPull: null,\n                            onCancel: null,\n                            isCancelled: false,\n                            desiredSize: data.desiredSize,\n                            ready: null\n                        };\n                        streamSink.sinkCapability.resolve();\n                        streamSink.ready = streamSink.sinkCapability.promise;\n                        this.streamSinks[streamId] = streamSink;\n                        new Promise(function(resolve) {\n                            resolve(action(data.data, streamSink));\n                        }).then(function() {\n                            comObj.postMessage({\n                                sourceName: sourceName,\n                                targetName: targetName,\n                                stream: StreamKind.START_COMPLETE,\n                                streamId: streamId,\n                                success: true\n                            });\n                        }, function(reason) {\n                            comObj.postMessage({\n                                sourceName: sourceName,\n                                targetName: targetName,\n                                stream: StreamKind.START_COMPLETE,\n                                streamId: streamId,\n                                reason: wrapReason(reason)\n                            });\n                        });\n                    }\n                    #processStreamMessage(data) {\n                        const streamId = data.streamId, sourceName = this.sourceName, targetName = data.sourceName, comObj = this.comObj;\n                        const streamController = this.streamControllers[streamId], streamSink = this.streamSinks[streamId];\n                        switch(data.stream){\n                            case StreamKind.START_COMPLETE:\n                                if (data.success) streamController.startCall.resolve();\n                                else streamController.startCall.reject(wrapReason(data.reason));\n                                break;\n                            case StreamKind.PULL_COMPLETE:\n                                if (data.success) streamController.pullCall.resolve();\n                                else streamController.pullCall.reject(wrapReason(data.reason));\n                                break;\n                            case StreamKind.PULL:\n                                if (!streamSink) {\n                                    comObj.postMessage({\n                                        sourceName: sourceName,\n                                        targetName: targetName,\n                                        stream: StreamKind.PULL_COMPLETE,\n                                        streamId: streamId,\n                                        success: true\n                                    });\n                                    break;\n                                }\n                                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) streamSink.sinkCapability.resolve();\n                                streamSink.desiredSize = data.desiredSize;\n                                new Promise(function(resolve) {\n                                    resolve(streamSink.onPull?.());\n                                }).then(function() {\n                                    comObj.postMessage({\n                                        sourceName: sourceName,\n                                        targetName: targetName,\n                                        stream: StreamKind.PULL_COMPLETE,\n                                        streamId: streamId,\n                                        success: true\n                                    });\n                                }, function(reason) {\n                                    comObj.postMessage({\n                                        sourceName: sourceName,\n                                        targetName: targetName,\n                                        stream: StreamKind.PULL_COMPLETE,\n                                        streamId: streamId,\n                                        reason: wrapReason(reason)\n                                    });\n                                });\n                                break;\n                            case StreamKind.ENQUEUE:\n                                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n                                if (streamController.isClosed) break;\n                                streamController.controller.enqueue(data.chunk);\n                                break;\n                            case StreamKind.CLOSE:\n                                (0, _util.assert)(streamController, \"close should have stream controller\");\n                                if (streamController.isClosed) break;\n                                streamController.isClosed = true;\n                                streamController.controller.close();\n                                this.#deleteStreamController(streamController, streamId);\n                                break;\n                            case StreamKind.ERROR:\n                                (0, _util.assert)(streamController, \"error should have stream controller\");\n                                streamController.controller.error(wrapReason(data.reason));\n                                this.#deleteStreamController(streamController, streamId);\n                                break;\n                            case StreamKind.CANCEL_COMPLETE:\n                                if (data.success) streamController.cancelCall.resolve();\n                                else streamController.cancelCall.reject(wrapReason(data.reason));\n                                this.#deleteStreamController(streamController, streamId);\n                                break;\n                            case StreamKind.CANCEL:\n                                if (!streamSink) break;\n                                new Promise(function(resolve) {\n                                    resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n                                }).then(function() {\n                                    comObj.postMessage({\n                                        sourceName: sourceName,\n                                        targetName: targetName,\n                                        stream: StreamKind.CANCEL_COMPLETE,\n                                        streamId: streamId,\n                                        success: true\n                                    });\n                                }, function(reason) {\n                                    comObj.postMessage({\n                                        sourceName: sourceName,\n                                        targetName: targetName,\n                                        stream: StreamKind.CANCEL_COMPLETE,\n                                        streamId: streamId,\n                                        reason: wrapReason(reason)\n                                    });\n                                });\n                                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                                streamSink.isCancelled = true;\n                                delete this.streamSinks[streamId];\n                                break;\n                            default:\n                                throw new Error(\"Unexpected stream case\");\n                        }\n                    }\n                    async #deleteStreamController(streamController, streamId) {\n                        await Promise.allSettled([\n                            streamController.startCall?.promise,\n                            streamController.pullCall?.promise,\n                            streamController.cancelCall?.promise\n                        ]);\n                        delete this.streamControllers[streamId];\n                    }\n                    destroy() {\n                        this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n                    }\n                }\n                exports.MessageHandler = MessageHandler;\n            /***/ },\n            /* 16 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.Metadata = void 0;\n                var _util = __w_pdfjs_require__(1);\n                class Metadata {\n                    #metadataMap;\n                    #data;\n                    constructor({ parsedData, rawData }){\n                        this.#metadataMap = parsedData;\n                        this.#data = rawData;\n                    }\n                    getRaw() {\n                        return this.#data;\n                    }\n                    get(name) {\n                        return this.#metadataMap.get(name) ?? null;\n                    }\n                    getAll() {\n                        return (0, _util.objectFromMap)(this.#metadataMap);\n                    }\n                    has(name) {\n                        return this.#metadataMap.has(name);\n                    }\n                }\n                exports.Metadata = Metadata;\n            /***/ },\n            /* 17 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.OptionalContentConfig = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _murmurhash = __w_pdfjs_require__(8);\n                const INTERNAL = Symbol(\"INTERNAL\");\n                class OptionalContentGroup {\n                    #visible = true;\n                    constructor(name, intent){\n                        this.name = name;\n                        this.intent = intent;\n                    }\n                    get visible() {\n                        return this.#visible;\n                    }\n                    _setVisible(internal, visible) {\n                        if (internal !== INTERNAL) (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n                        this.#visible = visible;\n                    }\n                }\n                class OptionalContentConfig {\n                    #cachedGetHash = null;\n                    #groups = new Map();\n                    #initialHash = null;\n                    #order = null;\n                    constructor(data){\n                        this.name = null;\n                        this.creator = null;\n                        if (data === null) return;\n                        this.name = data.name;\n                        this.creator = data.creator;\n                        this.#order = data.order;\n                        for (const group of data.groups)this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n                        if (data.baseState === \"OFF\") for (const group of this.#groups.values())group._setVisible(INTERNAL, false);\n                        for (const on of data.on)this.#groups.get(on)._setVisible(INTERNAL, true);\n                        for (const off of data.off)this.#groups.get(off)._setVisible(INTERNAL, false);\n                        this.#initialHash = this.getHash();\n                    }\n                    #evaluateVisibilityExpression(array) {\n                        const length = array.length;\n                        if (length < 2) return true;\n                        const operator = array[0];\n                        for(let i = 1; i < length; i++){\n                            const element = array[i];\n                            let state;\n                            if (Array.isArray(element)) state = this.#evaluateVisibilityExpression(element);\n                            else if (this.#groups.has(element)) state = this.#groups.get(element).visible;\n                            else {\n                                (0, _util.warn)(`Optional content group not found: ${element}`);\n                                return true;\n                            }\n                            switch(operator){\n                                case \"And\":\n                                    if (!state) return false;\n                                    break;\n                                case \"Or\":\n                                    if (state) return true;\n                                    break;\n                                case \"Not\":\n                                    return !state;\n                                default:\n                                    return true;\n                            }\n                        }\n                        return operator === \"And\";\n                    }\n                    isVisible(group) {\n                        if (this.#groups.size === 0) return true;\n                        if (!group) {\n                            (0, _util.warn)(\"Optional content group not defined.\");\n                            return true;\n                        }\n                        if (group.type === \"OCG\") {\n                            if (!this.#groups.has(group.id)) {\n                                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                                return true;\n                            }\n                            return this.#groups.get(group.id).visible;\n                        } else if (group.type === \"OCMD\") {\n                            if (group.expression) return this.#evaluateVisibilityExpression(group.expression);\n                            if (!group.policy || group.policy === \"AnyOn\") {\n                                for (const id of group.ids){\n                                    if (!this.#groups.has(id)) {\n                                        (0, _util.warn)(`Optional content group not found: ${id}`);\n                                        return true;\n                                    }\n                                    if (this.#groups.get(id).visible) return true;\n                                }\n                                return false;\n                            } else if (group.policy === \"AllOn\") {\n                                for (const id of group.ids){\n                                    if (!this.#groups.has(id)) {\n                                        (0, _util.warn)(`Optional content group not found: ${id}`);\n                                        return true;\n                                    }\n                                    if (!this.#groups.get(id).visible) return false;\n                                }\n                                return true;\n                            } else if (group.policy === \"AnyOff\") {\n                                for (const id of group.ids){\n                                    if (!this.#groups.has(id)) {\n                                        (0, _util.warn)(`Optional content group not found: ${id}`);\n                                        return true;\n                                    }\n                                    if (!this.#groups.get(id).visible) return true;\n                                }\n                                return false;\n                            } else if (group.policy === \"AllOff\") {\n                                for (const id of group.ids){\n                                    if (!this.#groups.has(id)) {\n                                        (0, _util.warn)(`Optional content group not found: ${id}`);\n                                        return true;\n                                    }\n                                    if (this.#groups.get(id).visible) return false;\n                                }\n                                return true;\n                            }\n                            (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n                            return true;\n                        }\n                        (0, _util.warn)(`Unknown group type ${group.type}.`);\n                        return true;\n                    }\n                    setVisibility(id, visible = true) {\n                        if (!this.#groups.has(id)) {\n                            (0, _util.warn)(`Optional content group not found: ${id}`);\n                            return;\n                        }\n                        this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n                        this.#cachedGetHash = null;\n                    }\n                    get hasInitialVisibility() {\n                        return this.#initialHash === null || this.getHash() === this.#initialHash;\n                    }\n                    getOrder() {\n                        if (!this.#groups.size) return null;\n                        if (this.#order) return this.#order.slice();\n                        return [\n                            ...this.#groups.keys()\n                        ];\n                    }\n                    getGroups() {\n                        return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n                    }\n                    getGroup(id) {\n                        return this.#groups.get(id) || null;\n                    }\n                    getHash() {\n                        if (this.#cachedGetHash !== null) return this.#cachedGetHash;\n                        const hash = new _murmurhash.MurmurHash3_64();\n                        for (const [id, group] of this.#groups)hash.update(`${id}:${group.visible}`);\n                        return this.#cachedGetHash = hash.hexdigest();\n                    }\n                }\n                exports.OptionalContentConfig = OptionalContentConfig;\n            /***/ },\n            /* 18 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.PDFDataTransportStream = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                class PDFDataTransportStream {\n                    constructor({ length, initialData, progressiveDone = false, contentDispositionFilename = null, disableRange = false, disableStream = false }, pdfDataRangeTransport){\n                        (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n                        this._queuedChunks = [];\n                        this._progressiveDone = progressiveDone;\n                        this._contentDispositionFilename = contentDispositionFilename;\n                        if (initialData?.length > 0) {\n                            const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n                            this._queuedChunks.push(buffer);\n                        }\n                        this._pdfDataRangeTransport = pdfDataRangeTransport;\n                        this._isStreamingSupported = !disableStream;\n                        this._isRangeSupported = !disableRange;\n                        this._contentLength = length;\n                        this._fullRequestReader = null;\n                        this._rangeReaders = [];\n                        this._pdfDataRangeTransport.addRangeListener((begin, chunk)=>{\n                            this._onReceiveData({\n                                begin: begin,\n                                chunk: chunk\n                            });\n                        });\n                        this._pdfDataRangeTransport.addProgressListener((loaded, total)=>{\n                            this._onProgress({\n                                loaded: loaded,\n                                total: total\n                            });\n                        });\n                        this._pdfDataRangeTransport.addProgressiveReadListener((chunk)=>{\n                            this._onReceiveData({\n                                chunk: chunk\n                            });\n                        });\n                        this._pdfDataRangeTransport.addProgressiveDoneListener(()=>{\n                            this._onProgressiveDone();\n                        });\n                        this._pdfDataRangeTransport.transportReady();\n                    }\n                    _onReceiveData({ begin, chunk }) {\n                        const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n                        if (begin === undefined) {\n                            if (this._fullRequestReader) this._fullRequestReader._enqueue(buffer);\n                            else this._queuedChunks.push(buffer);\n                        } else {\n                            const found = this._rangeReaders.some(function(rangeReader) {\n                                if (rangeReader._begin !== begin) return false;\n                                rangeReader._enqueue(buffer);\n                                return true;\n                            });\n                            (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n                        }\n                    }\n                    get _progressiveDataLength() {\n                        return this._fullRequestReader?._loaded ?? 0;\n                    }\n                    _onProgress(evt) {\n                        if (evt.total === undefined) this._rangeReaders[0]?.onProgress?.({\n                            loaded: evt.loaded\n                        });\n                        else this._fullRequestReader?.onProgress?.({\n                            loaded: evt.loaded,\n                            total: evt.total\n                        });\n                    }\n                    _onProgressiveDone() {\n                        this._fullRequestReader?.progressiveDone();\n                        this._progressiveDone = true;\n                    }\n                    _removeRangeReader(reader) {\n                        const i = this._rangeReaders.indexOf(reader);\n                        if (i >= 0) this._rangeReaders.splice(i, 1);\n                    }\n                    getFullReader() {\n                        (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n                        const queuedChunks = this._queuedChunks;\n                        this._queuedChunks = null;\n                        return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n                    }\n                    getRangeReader(begin, end) {\n                        if (end <= this._progressiveDataLength) return null;\n                        const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n                        this._pdfDataRangeTransport.requestDataRange(begin, end);\n                        this._rangeReaders.push(reader);\n                        return reader;\n                    }\n                    cancelAllRequests(reason) {\n                        this._fullRequestReader?.cancel(reason);\n                        for (const reader of this._rangeReaders.slice(0))reader.cancel(reason);\n                        this._pdfDataRangeTransport.abort();\n                    }\n                }\n                exports.PDFDataTransportStream = PDFDataTransportStream;\n                class PDFDataTransportStreamReader {\n                    constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null){\n                        this._stream = stream;\n                        this._done = progressiveDone || false;\n                        this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n                        this._queuedChunks = queuedChunks || [];\n                        this._loaded = 0;\n                        for (const chunk of this._queuedChunks)this._loaded += chunk.byteLength;\n                        this._requests = [];\n                        this._headersReady = Promise.resolve();\n                        stream._fullRequestReader = this;\n                        this.onProgress = null;\n                    }\n                    _enqueue(chunk) {\n                        if (this._done) return;\n                        if (this._requests.length > 0) {\n                            const requestCapability = this._requests.shift();\n                            requestCapability.resolve({\n                                value: chunk,\n                                done: false\n                            });\n                        } else this._queuedChunks.push(chunk);\n                        this._loaded += chunk.byteLength;\n                    }\n                    get headersReady() {\n                        return this._headersReady;\n                    }\n                    get filename() {\n                        return this._filename;\n                    }\n                    get isRangeSupported() {\n                        return this._stream._isRangeSupported;\n                    }\n                    get isStreamingSupported() {\n                        return this._stream._isStreamingSupported;\n                    }\n                    get contentLength() {\n                        return this._stream._contentLength;\n                    }\n                    async read() {\n                        if (this._queuedChunks.length > 0) {\n                            const chunk = this._queuedChunks.shift();\n                            return {\n                                value: chunk,\n                                done: false\n                            };\n                        }\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        const requestCapability = new _util.PromiseCapability();\n                        this._requests.push(requestCapability);\n                        return requestCapability.promise;\n                    }\n                    cancel(reason) {\n                        this._done = true;\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                    }\n                    progressiveDone() {\n                        if (this._done) return;\n                        this._done = true;\n                    }\n                }\n                class PDFDataTransportStreamRangeReader {\n                    constructor(stream, begin, end){\n                        this._stream = stream;\n                        this._begin = begin;\n                        this._end = end;\n                        this._queuedChunk = null;\n                        this._requests = [];\n                        this._done = false;\n                        this.onProgress = null;\n                    }\n                    _enqueue(chunk) {\n                        if (this._done) return;\n                        if (this._requests.length === 0) this._queuedChunk = chunk;\n                        else {\n                            const requestsCapability = this._requests.shift();\n                            requestsCapability.resolve({\n                                value: chunk,\n                                done: false\n                            });\n                            for (const requestCapability of this._requests)requestCapability.resolve({\n                                value: undefined,\n                                done: true\n                            });\n                            this._requests.length = 0;\n                        }\n                        this._done = true;\n                        this._stream._removeRangeReader(this);\n                    }\n                    get isStreamingSupported() {\n                        return false;\n                    }\n                    async read() {\n                        if (this._queuedChunk) {\n                            const chunk = this._queuedChunk;\n                            this._queuedChunk = null;\n                            return {\n                                value: chunk,\n                                done: false\n                            };\n                        }\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        const requestCapability = new _util.PromiseCapability();\n                        this._requests.push(requestCapability);\n                        return requestCapability.promise;\n                    }\n                    cancel(reason) {\n                        this._done = true;\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                        this._stream._removeRangeReader(this);\n                    }\n                }\n            /***/ },\n            /* 19 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.PDFFetchStream = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _network_utils = __w_pdfjs_require__(20);\n                function createFetchOptions(headers, withCredentials, abortController) {\n                    return {\n                        method: \"GET\",\n                        headers: headers,\n                        signal: abortController.signal,\n                        mode: \"cors\",\n                        credentials: withCredentials ? \"include\" : \"same-origin\",\n                        redirect: \"follow\"\n                    };\n                }\n                function createHeaders(httpHeaders) {\n                    const headers = new Headers();\n                    for(const property in httpHeaders){\n                        const value = httpHeaders[property];\n                        if (value === undefined) continue;\n                        headers.append(property, value);\n                    }\n                    return headers;\n                }\n                function getArrayBuffer(val) {\n                    if (val instanceof Uint8Array) return val.buffer;\n                    if (val instanceof ArrayBuffer) return val;\n                    (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n                    return new Uint8Array(val).buffer;\n                }\n                class PDFFetchStream {\n                    constructor(source){\n                        this.source = source;\n                        this.isHttp = /^https?:/i.test(source.url);\n                        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n                        this._fullRequestReader = null;\n                        this._rangeRequestReaders = [];\n                    }\n                    get _progressiveDataLength() {\n                        return this._fullRequestReader?._loaded ?? 0;\n                    }\n                    getFullReader() {\n                        (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n                        this._fullRequestReader = new PDFFetchStreamReader(this);\n                        return this._fullRequestReader;\n                    }\n                    getRangeReader(begin, end) {\n                        if (end <= this._progressiveDataLength) return null;\n                        const reader = new PDFFetchStreamRangeReader(this, begin, end);\n                        this._rangeRequestReaders.push(reader);\n                        return reader;\n                    }\n                    cancelAllRequests(reason) {\n                        this._fullRequestReader?.cancel(reason);\n                        for (const reader of this._rangeRequestReaders.slice(0))reader.cancel(reason);\n                    }\n                }\n                exports.PDFFetchStream = PDFFetchStream;\n                class PDFFetchStreamReader {\n                    constructor(stream){\n                        this._stream = stream;\n                        this._reader = null;\n                        this._loaded = 0;\n                        this._filename = null;\n                        const source = stream.source;\n                        this._withCredentials = source.withCredentials || false;\n                        this._contentLength = source.length;\n                        this._headersCapability = new _util.PromiseCapability();\n                        this._disableRange = source.disableRange || false;\n                        this._rangeChunkSize = source.rangeChunkSize;\n                        if (!this._rangeChunkSize && !this._disableRange) this._disableRange = true;\n                        this._abortController = new AbortController();\n                        this._isStreamingSupported = !source.disableStream;\n                        this._isRangeSupported = !source.disableRange;\n                        this._headers = createHeaders(this._stream.httpHeaders);\n                        const url = source.url;\n                        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then((response)=>{\n                            if (!(0, _network_utils.validateResponseStatus)(response.status)) throw (0, _network_utils.createResponseStatusError)(response.status, url);\n                            this._reader = response.body.getReader();\n                            this._headersCapability.resolve();\n                            const getResponseHeader = (name)=>{\n                                return response.headers.get(name);\n                            };\n                            const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({\n                                getResponseHeader: getResponseHeader,\n                                isHttp: this._stream.isHttp,\n                                rangeChunkSize: this._rangeChunkSize,\n                                disableRange: this._disableRange\n                            });\n                            this._isRangeSupported = allowRangeRequests;\n                            this._contentLength = suggestedLength || this._contentLength;\n                            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n                            if (!this._isStreamingSupported && this._isRangeSupported) this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n                        }).catch(this._headersCapability.reject);\n                        this.onProgress = null;\n                    }\n                    get headersReady() {\n                        return this._headersCapability.promise;\n                    }\n                    get filename() {\n                        return this._filename;\n                    }\n                    get contentLength() {\n                        return this._contentLength;\n                    }\n                    get isRangeSupported() {\n                        return this._isRangeSupported;\n                    }\n                    get isStreamingSupported() {\n                        return this._isStreamingSupported;\n                    }\n                    async read() {\n                        await this._headersCapability.promise;\n                        const { value, done } = await this._reader.read();\n                        if (done) return {\n                            value: value,\n                            done: done\n                        };\n                        this._loaded += value.byteLength;\n                        this.onProgress?.({\n                            loaded: this._loaded,\n                            total: this._contentLength\n                        });\n                        return {\n                            value: getArrayBuffer(value),\n                            done: false\n                        };\n                    }\n                    cancel(reason) {\n                        this._reader?.cancel(reason);\n                        this._abortController.abort();\n                    }\n                }\n                class PDFFetchStreamRangeReader {\n                    constructor(stream, begin, end){\n                        this._stream = stream;\n                        this._reader = null;\n                        this._loaded = 0;\n                        const source = stream.source;\n                        this._withCredentials = source.withCredentials || false;\n                        this._readCapability = new _util.PromiseCapability();\n                        this._isStreamingSupported = !source.disableStream;\n                        this._abortController = new AbortController();\n                        this._headers = createHeaders(this._stream.httpHeaders);\n                        this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n                        const url = source.url;\n                        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then((response)=>{\n                            if (!(0, _network_utils.validateResponseStatus)(response.status)) throw (0, _network_utils.createResponseStatusError)(response.status, url);\n                            this._readCapability.resolve();\n                            this._reader = response.body.getReader();\n                        }).catch(this._readCapability.reject);\n                        this.onProgress = null;\n                    }\n                    get isStreamingSupported() {\n                        return this._isStreamingSupported;\n                    }\n                    async read() {\n                        await this._readCapability.promise;\n                        const { value, done } = await this._reader.read();\n                        if (done) return {\n                            value: value,\n                            done: done\n                        };\n                        this._loaded += value.byteLength;\n                        this.onProgress?.({\n                            loaded: this._loaded\n                        });\n                        return {\n                            value: getArrayBuffer(value),\n                            done: false\n                        };\n                    }\n                    cancel(reason) {\n                        this._reader?.cancel(reason);\n                        this._abortController.abort();\n                    }\n                }\n            /***/ },\n            /* 20 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.createResponseStatusError = createResponseStatusError;\n                exports.extractFilenameFromHeader = extractFilenameFromHeader;\n                exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n                exports.validateResponseStatus = validateResponseStatus;\n                var _util = __w_pdfjs_require__(1);\n                var _content_disposition = __w_pdfjs_require__(21);\n                var _display_utils = __w_pdfjs_require__(6);\n                function validateRangeRequestCapabilities({ getResponseHeader, isHttp, rangeChunkSize, disableRange }) {\n                    const returnValues = {\n                        allowRangeRequests: false,\n                        suggestedLength: undefined\n                    };\n                    const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n                    if (!Number.isInteger(length)) return returnValues;\n                    returnValues.suggestedLength = length;\n                    if (length <= 2 * rangeChunkSize) return returnValues;\n                    if (disableRange || !isHttp) return returnValues;\n                    if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") return returnValues;\n                    const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n                    if (contentEncoding !== \"identity\") return returnValues;\n                    returnValues.allowRangeRequests = true;\n                    return returnValues;\n                }\n                function extractFilenameFromHeader(getResponseHeader) {\n                    const contentDisposition = getResponseHeader(\"Content-Disposition\");\n                    if (contentDisposition) {\n                        let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n                        if (filename.includes(\"%\")) try {\n                            filename = decodeURIComponent(filename);\n                        } catch  {}\n                        if ((0, _display_utils.isPdfFile)(filename)) return filename;\n                    }\n                    return null;\n                }\n                function createResponseStatusError(status, url) {\n                    if (status === 404 || status === 0 && url.startsWith(\"file:\")) return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n                    return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n                }\n                function validateResponseStatus(status) {\n                    return status === 200 || status === 206;\n                }\n            /***/ },\n            /* 21 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n                var _util = __w_pdfjs_require__(1);\n                function getFilenameFromContentDispositionHeader(contentDisposition) {\n                    let needsEncodingFixup = true;\n                    let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n                    if (tmp) {\n                        tmp = tmp[1];\n                        let filename = rfc2616unquote(tmp);\n                        filename = unescape(filename);\n                        filename = rfc5987decode(filename);\n                        filename = rfc2047decode(filename);\n                        return fixupEncoding(filename);\n                    }\n                    tmp = rfc2231getparam(contentDisposition);\n                    if (tmp) {\n                        const filename = rfc2047decode(tmp);\n                        return fixupEncoding(filename);\n                    }\n                    tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n                    if (tmp) {\n                        tmp = tmp[1];\n                        let filename = rfc2616unquote(tmp);\n                        filename = rfc2047decode(filename);\n                        return fixupEncoding(filename);\n                    }\n                    function toParamRegExp(attributePattern, flags) {\n                        return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n                    }\n                    function textdecode(encoding, value) {\n                        if (encoding) {\n                            if (!/^[\\x00-\\xFF]+$/.test(value)) return value;\n                            try {\n                                const decoder = new TextDecoder(encoding, {\n                                    fatal: true\n                                });\n                                const buffer = (0, _util.stringToBytes)(value);\n                                value = decoder.decode(buffer);\n                                needsEncodingFixup = false;\n                            } catch  {}\n                        }\n                        return value;\n                    }\n                    function fixupEncoding(value) {\n                        if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n                            value = textdecode(\"utf-8\", value);\n                            if (needsEncodingFixup) value = textdecode(\"iso-8859-1\", value);\n                        }\n                        return value;\n                    }\n                    function rfc2231getparam(contentDispositionStr) {\n                        const matches = [];\n                        let match;\n                        const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n                        while((match = iter.exec(contentDispositionStr)) !== null){\n                            let [, n, quot, part] = match;\n                            n = parseInt(n, 10);\n                            if (n in matches) {\n                                if (n === 0) break;\n                                continue;\n                            }\n                            matches[n] = [\n                                quot,\n                                part\n                            ];\n                        }\n                        const parts = [];\n                        for(let n = 0; n < matches.length; ++n){\n                            if (!(n in matches)) break;\n                            let [quot, part] = matches[n];\n                            part = rfc2616unquote(part);\n                            if (quot) {\n                                part = unescape(part);\n                                if (n === 0) part = rfc5987decode(part);\n                            }\n                            parts.push(part);\n                        }\n                        return parts.join(\"\");\n                    }\n                    function rfc2616unquote(value) {\n                        if (value.startsWith('\"')) {\n                            const parts = value.slice(1).split('\\\\\"');\n                            for(let i = 0; i < parts.length; ++i){\n                                const quotindex = parts[i].indexOf('\"');\n                                if (quotindex !== -1) {\n                                    parts[i] = parts[i].slice(0, quotindex);\n                                    parts.length = i + 1;\n                                }\n                                parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n                            }\n                            value = parts.join('\"');\n                        }\n                        return value;\n                    }\n                    function rfc5987decode(extvalue) {\n                        const encodingend = extvalue.indexOf(\"'\");\n                        if (encodingend === -1) return extvalue;\n                        const encoding = extvalue.slice(0, encodingend);\n                        const langvalue = extvalue.slice(encodingend + 1);\n                        const value = langvalue.replace(/^[^']*'/, \"\");\n                        return textdecode(encoding, value);\n                    }\n                    function rfc2047decode(value) {\n                        if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) return value;\n                        return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function(matches, charset, encoding, text) {\n                            if (encoding === \"q\" || encoding === \"Q\") {\n                                text = text.replaceAll(\"_\", \" \");\n                                text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function(match, hex) {\n                                    return String.fromCharCode(parseInt(hex, 16));\n                                });\n                                return textdecode(charset, text);\n                            }\n                            try {\n                                text = atob(text);\n                            } catch  {}\n                            return textdecode(charset, text);\n                        });\n                    }\n                    return \"\";\n                }\n            /***/ },\n            /* 22 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.PDFNetworkStream = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _network_utils = __w_pdfjs_require__(20);\n                const OK_RESPONSE = 200;\n                const PARTIAL_CONTENT_RESPONSE = 206;\n                function getArrayBuffer(xhr) {\n                    const data = xhr.response;\n                    if (typeof data !== \"string\") return data;\n                    return (0, _util.stringToBytes)(data).buffer;\n                }\n                class NetworkManager {\n                    constructor(url, args = {}){\n                        this.url = url;\n                        this.isHttp = /^https?:/i.test(url);\n                        this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n                        this.withCredentials = args.withCredentials || false;\n                        this.currXhrId = 0;\n                        this.pendingRequests = Object.create(null);\n                    }\n                    requestRange(begin, end, listeners) {\n                        const args = {\n                            begin: begin,\n                            end: end\n                        };\n                        for(const prop in listeners)args[prop] = listeners[prop];\n                        return this.request(args);\n                    }\n                    requestFull(listeners) {\n                        return this.request(listeners);\n                    }\n                    request(args) {\n                        const xhr = new XMLHttpRequest();\n                        const xhrId = this.currXhrId++;\n                        const pendingRequest = this.pendingRequests[xhrId] = {\n                            xhr: xhr\n                        };\n                        xhr.open(\"GET\", this.url);\n                        xhr.withCredentials = this.withCredentials;\n                        for(const property in this.httpHeaders){\n                            const value = this.httpHeaders[property];\n                            if (value === undefined) continue;\n                            xhr.setRequestHeader(property, value);\n                        }\n                        if (this.isHttp && \"begin\" in args && \"end\" in args) {\n                            xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n                            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n                        } else pendingRequest.expectedStatus = OK_RESPONSE;\n                        xhr.responseType = \"arraybuffer\";\n                        if (args.onError) xhr.onerror = function(evt) {\n                            args.onError(xhr.status);\n                        };\n                        xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n                        xhr.onprogress = this.onProgress.bind(this, xhrId);\n                        pendingRequest.onHeadersReceived = args.onHeadersReceived;\n                        pendingRequest.onDone = args.onDone;\n                        pendingRequest.onError = args.onError;\n                        pendingRequest.onProgress = args.onProgress;\n                        xhr.send(null);\n                        return xhrId;\n                    }\n                    onProgress(xhrId, evt) {\n                        const pendingRequest = this.pendingRequests[xhrId];\n                        if (!pendingRequest) return;\n                        pendingRequest.onProgress?.(evt);\n                    }\n                    onStateChange(xhrId, evt) {\n                        const pendingRequest = this.pendingRequests[xhrId];\n                        if (!pendingRequest) return;\n                        const xhr = pendingRequest.xhr;\n                        if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n                            pendingRequest.onHeadersReceived();\n                            delete pendingRequest.onHeadersReceived;\n                        }\n                        if (xhr.readyState !== 4) return;\n                        if (!(xhrId in this.pendingRequests)) return;\n                        delete this.pendingRequests[xhrId];\n                        if (xhr.status === 0 && this.isHttp) {\n                            pendingRequest.onError?.(xhr.status);\n                            return;\n                        }\n                        const xhrStatus = xhr.status || OK_RESPONSE;\n                        const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n                        if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n                            pendingRequest.onError?.(xhr.status);\n                            return;\n                        }\n                        const chunk = getArrayBuffer(xhr);\n                        if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n                            const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n                            const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n                            pendingRequest.onDone({\n                                begin: parseInt(matches[1], 10),\n                                chunk: chunk\n                            });\n                        } else if (chunk) pendingRequest.onDone({\n                            begin: 0,\n                            chunk: chunk\n                        });\n                        else pendingRequest.onError?.(xhr.status);\n                    }\n                    getRequestXhr(xhrId) {\n                        return this.pendingRequests[xhrId].xhr;\n                    }\n                    isPendingRequest(xhrId) {\n                        return xhrId in this.pendingRequests;\n                    }\n                    abortRequest(xhrId) {\n                        const xhr = this.pendingRequests[xhrId].xhr;\n                        delete this.pendingRequests[xhrId];\n                        xhr.abort();\n                    }\n                }\n                class PDFNetworkStream {\n                    constructor(source){\n                        this._source = source;\n                        this._manager = new NetworkManager(source.url, {\n                            httpHeaders: source.httpHeaders,\n                            withCredentials: source.withCredentials\n                        });\n                        this._rangeChunkSize = source.rangeChunkSize;\n                        this._fullRequestReader = null;\n                        this._rangeRequestReaders = [];\n                    }\n                    _onRangeRequestReaderClosed(reader) {\n                        const i = this._rangeRequestReaders.indexOf(reader);\n                        if (i >= 0) this._rangeRequestReaders.splice(i, 1);\n                    }\n                    getFullReader() {\n                        (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n                        this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n                        return this._fullRequestReader;\n                    }\n                    getRangeReader(begin, end) {\n                        const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n                        reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n                        this._rangeRequestReaders.push(reader);\n                        return reader;\n                    }\n                    cancelAllRequests(reason) {\n                        this._fullRequestReader?.cancel(reason);\n                        for (const reader of this._rangeRequestReaders.slice(0))reader.cancel(reason);\n                    }\n                }\n                exports.PDFNetworkStream = PDFNetworkStream;\n                class PDFNetworkStreamFullRequestReader {\n                    constructor(manager, source){\n                        this._manager = manager;\n                        const args = {\n                            onHeadersReceived: this._onHeadersReceived.bind(this),\n                            onDone: this._onDone.bind(this),\n                            onError: this._onError.bind(this),\n                            onProgress: this._onProgress.bind(this)\n                        };\n                        this._url = source.url;\n                        this._fullRequestId = manager.requestFull(args);\n                        this._headersReceivedCapability = new _util.PromiseCapability();\n                        this._disableRange = source.disableRange || false;\n                        this._contentLength = source.length;\n                        this._rangeChunkSize = source.rangeChunkSize;\n                        if (!this._rangeChunkSize && !this._disableRange) this._disableRange = true;\n                        this._isStreamingSupported = false;\n                        this._isRangeSupported = false;\n                        this._cachedChunks = [];\n                        this._requests = [];\n                        this._done = false;\n                        this._storedError = undefined;\n                        this._filename = null;\n                        this.onProgress = null;\n                    }\n                    _onHeadersReceived() {\n                        const fullRequestXhrId = this._fullRequestId;\n                        const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n                        const getResponseHeader = (name)=>{\n                            return fullRequestXhr.getResponseHeader(name);\n                        };\n                        const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({\n                            getResponseHeader: getResponseHeader,\n                            isHttp: this._manager.isHttp,\n                            rangeChunkSize: this._rangeChunkSize,\n                            disableRange: this._disableRange\n                        });\n                        if (allowRangeRequests) this._isRangeSupported = true;\n                        this._contentLength = suggestedLength || this._contentLength;\n                        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n                        if (this._isRangeSupported) this._manager.abortRequest(fullRequestXhrId);\n                        this._headersReceivedCapability.resolve();\n                    }\n                    _onDone(data) {\n                        if (data) {\n                            if (this._requests.length > 0) {\n                                const requestCapability = this._requests.shift();\n                                requestCapability.resolve({\n                                    value: data.chunk,\n                                    done: false\n                                });\n                            } else this._cachedChunks.push(data.chunk);\n                        }\n                        this._done = true;\n                        if (this._cachedChunks.length > 0) return;\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                    }\n                    _onError(status) {\n                        this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n                        this._headersReceivedCapability.reject(this._storedError);\n                        for (const requestCapability of this._requests)requestCapability.reject(this._storedError);\n                        this._requests.length = 0;\n                        this._cachedChunks.length = 0;\n                    }\n                    _onProgress(evt) {\n                        this.onProgress?.({\n                            loaded: evt.loaded,\n                            total: evt.lengthComputable ? evt.total : this._contentLength\n                        });\n                    }\n                    get filename() {\n                        return this._filename;\n                    }\n                    get isRangeSupported() {\n                        return this._isRangeSupported;\n                    }\n                    get isStreamingSupported() {\n                        return this._isStreamingSupported;\n                    }\n                    get contentLength() {\n                        return this._contentLength;\n                    }\n                    get headersReady() {\n                        return this._headersReceivedCapability.promise;\n                    }\n                    async read() {\n                        if (this._storedError) throw this._storedError;\n                        if (this._cachedChunks.length > 0) {\n                            const chunk = this._cachedChunks.shift();\n                            return {\n                                value: chunk,\n                                done: false\n                            };\n                        }\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        const requestCapability = new _util.PromiseCapability();\n                        this._requests.push(requestCapability);\n                        return requestCapability.promise;\n                    }\n                    cancel(reason) {\n                        this._done = true;\n                        this._headersReceivedCapability.reject(reason);\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                        if (this._manager.isPendingRequest(this._fullRequestId)) this._manager.abortRequest(this._fullRequestId);\n                        this._fullRequestReader = null;\n                    }\n                }\n                class PDFNetworkStreamRangeRequestReader {\n                    constructor(manager, begin, end){\n                        this._manager = manager;\n                        const args = {\n                            onDone: this._onDone.bind(this),\n                            onError: this._onError.bind(this),\n                            onProgress: this._onProgress.bind(this)\n                        };\n                        this._url = manager.url;\n                        this._requestId = manager.requestRange(begin, end, args);\n                        this._requests = [];\n                        this._queuedChunk = null;\n                        this._done = false;\n                        this._storedError = undefined;\n                        this.onProgress = null;\n                        this.onClosed = null;\n                    }\n                    _close() {\n                        this.onClosed?.(this);\n                    }\n                    _onDone(data) {\n                        const chunk = data.chunk;\n                        if (this._requests.length > 0) {\n                            const requestCapability = this._requests.shift();\n                            requestCapability.resolve({\n                                value: chunk,\n                                done: false\n                            });\n                        } else this._queuedChunk = chunk;\n                        this._done = true;\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                        this._close();\n                    }\n                    _onError(status) {\n                        this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n                        for (const requestCapability of this._requests)requestCapability.reject(this._storedError);\n                        this._requests.length = 0;\n                        this._queuedChunk = null;\n                    }\n                    _onProgress(evt) {\n                        if (!this.isStreamingSupported) this.onProgress?.({\n                            loaded: evt.loaded\n                        });\n                    }\n                    get isStreamingSupported() {\n                        return false;\n                    }\n                    async read() {\n                        if (this._storedError) throw this._storedError;\n                        if (this._queuedChunk !== null) {\n                            const chunk = this._queuedChunk;\n                            this._queuedChunk = null;\n                            return {\n                                value: chunk,\n                                done: false\n                            };\n                        }\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        const requestCapability = new _util.PromiseCapability();\n                        this._requests.push(requestCapability);\n                        return requestCapability.promise;\n                    }\n                    cancel(reason) {\n                        this._done = true;\n                        for (const requestCapability of this._requests)requestCapability.resolve({\n                            value: undefined,\n                            done: true\n                        });\n                        this._requests.length = 0;\n                        if (this._manager.isPendingRequest(this._requestId)) this._manager.abortRequest(this._requestId);\n                        this._close();\n                    }\n                }\n            /***/ },\n            /* 23 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.PDFNodeStream = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _network_utils = __w_pdfjs_require__(20);\n                const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n                function parseUrl(sourceUrl) {\n                    const url = (parcelRequire(\"kjyEk\"));\n                    const parsedUrl = url.parse(sourceUrl);\n                    if (parsedUrl.protocol === \"file:\" || parsedUrl.host) return parsedUrl;\n                    if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) return url.parse(`file:///${sourceUrl}`);\n                    if (!parsedUrl.host) parsedUrl.protocol = \"file:\";\n                    return parsedUrl;\n                }\n                class PDFNodeStream {\n                    constructor(source){\n                        this.source = source;\n                        this.url = parseUrl(source.url);\n                        this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n                        this.isFsUrl = this.url.protocol === \"file:\";\n                        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n                        this._fullRequestReader = null;\n                        this._rangeRequestReaders = [];\n                    }\n                    get _progressiveDataLength() {\n                        return this._fullRequestReader?._loaded ?? 0;\n                    }\n                    getFullReader() {\n                        (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n                        this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n                        return this._fullRequestReader;\n                    }\n                    getRangeReader(start, end) {\n                        if (end <= this._progressiveDataLength) return null;\n                        const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n                        this._rangeRequestReaders.push(rangeReader);\n                        return rangeReader;\n                    }\n                    cancelAllRequests(reason) {\n                        this._fullRequestReader?.cancel(reason);\n                        for (const reader of this._rangeRequestReaders.slice(0))reader.cancel(reason);\n                    }\n                }\n                exports.PDFNodeStream = PDFNodeStream;\n                class BaseFullReader {\n                    constructor(stream){\n                        this._url = stream.url;\n                        this._done = false;\n                        this._storedError = null;\n                        this.onProgress = null;\n                        const source = stream.source;\n                        this._contentLength = source.length;\n                        this._loaded = 0;\n                        this._filename = null;\n                        this._disableRange = source.disableRange || false;\n                        this._rangeChunkSize = source.rangeChunkSize;\n                        if (!this._rangeChunkSize && !this._disableRange) this._disableRange = true;\n                        this._isStreamingSupported = !source.disableStream;\n                        this._isRangeSupported = !source.disableRange;\n                        this._readableStream = null;\n                        this._readCapability = new _util.PromiseCapability();\n                        this._headersCapability = new _util.PromiseCapability();\n                    }\n                    get headersReady() {\n                        return this._headersCapability.promise;\n                    }\n                    get filename() {\n                        return this._filename;\n                    }\n                    get contentLength() {\n                        return this._contentLength;\n                    }\n                    get isRangeSupported() {\n                        return this._isRangeSupported;\n                    }\n                    get isStreamingSupported() {\n                        return this._isStreamingSupported;\n                    }\n                    async read() {\n                        await this._readCapability.promise;\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        if (this._storedError) throw this._storedError;\n                        const chunk = this._readableStream.read();\n                        if (chunk === null) {\n                            this._readCapability = new _util.PromiseCapability();\n                            return this.read();\n                        }\n                        this._loaded += chunk.length;\n                        this.onProgress?.({\n                            loaded: this._loaded,\n                            total: this._contentLength\n                        });\n                        const buffer = new Uint8Array(chunk).buffer;\n                        return {\n                            value: buffer,\n                            done: false\n                        };\n                    }\n                    cancel(reason) {\n                        if (!this._readableStream) {\n                            this._error(reason);\n                            return;\n                        }\n                        this._readableStream.destroy(reason);\n                    }\n                    _error(reason) {\n                        this._storedError = reason;\n                        this._readCapability.resolve();\n                    }\n                    _setReadableStream(readableStream) {\n                        this._readableStream = readableStream;\n                        readableStream.on(\"readable\", ()=>{\n                            this._readCapability.resolve();\n                        });\n                        readableStream.on(\"end\", ()=>{\n                            readableStream.destroy();\n                            this._done = true;\n                            this._readCapability.resolve();\n                        });\n                        readableStream.on(\"error\", (reason)=>{\n                            this._error(reason);\n                        });\n                        if (!this._isStreamingSupported && this._isRangeSupported) this._error(new _util.AbortException(\"streaming is disabled\"));\n                        if (this._storedError) this._readableStream.destroy(this._storedError);\n                    }\n                }\n                class BaseRangeReader {\n                    constructor(stream){\n                        this._url = stream.url;\n                        this._done = false;\n                        this._storedError = null;\n                        this.onProgress = null;\n                        this._loaded = 0;\n                        this._readableStream = null;\n                        this._readCapability = new _util.PromiseCapability();\n                        const source = stream.source;\n                        this._isStreamingSupported = !source.disableStream;\n                    }\n                    get isStreamingSupported() {\n                        return this._isStreamingSupported;\n                    }\n                    async read() {\n                        await this._readCapability.promise;\n                        if (this._done) return {\n                            value: undefined,\n                            done: true\n                        };\n                        if (this._storedError) throw this._storedError;\n                        const chunk = this._readableStream.read();\n                        if (chunk === null) {\n                            this._readCapability = new _util.PromiseCapability();\n                            return this.read();\n                        }\n                        this._loaded += chunk.length;\n                        this.onProgress?.({\n                            loaded: this._loaded\n                        });\n                        const buffer = new Uint8Array(chunk).buffer;\n                        return {\n                            value: buffer,\n                            done: false\n                        };\n                    }\n                    cancel(reason) {\n                        if (!this._readableStream) {\n                            this._error(reason);\n                            return;\n                        }\n                        this._readableStream.destroy(reason);\n                    }\n                    _error(reason) {\n                        this._storedError = reason;\n                        this._readCapability.resolve();\n                    }\n                    _setReadableStream(readableStream) {\n                        this._readableStream = readableStream;\n                        readableStream.on(\"readable\", ()=>{\n                            this._readCapability.resolve();\n                        });\n                        readableStream.on(\"end\", ()=>{\n                            readableStream.destroy();\n                            this._done = true;\n                            this._readCapability.resolve();\n                        });\n                        readableStream.on(\"error\", (reason)=>{\n                            this._error(reason);\n                        });\n                        if (this._storedError) this._readableStream.destroy(this._storedError);\n                    }\n                }\n                function createRequestOptions(parsedUrl, headers) {\n                    return {\n                        protocol: parsedUrl.protocol,\n                        auth: parsedUrl.auth,\n                        host: parsedUrl.hostname,\n                        port: parsedUrl.port,\n                        path: parsedUrl.path,\n                        method: \"GET\",\n                        headers: headers\n                    };\n                }\n                class PDFNodeStreamFullReader extends BaseFullReader {\n                    constructor(stream){\n                        super(stream);\n                        const handleResponse = (response)=>{\n                            if (response.statusCode === 404) {\n                                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                                this._storedError = error;\n                                this._headersCapability.reject(error);\n                                return;\n                            }\n                            this._headersCapability.resolve();\n                            this._setReadableStream(response);\n                            const getResponseHeader = (name)=>{\n                                return this._readableStream.headers[name.toLowerCase()];\n                            };\n                            const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({\n                                getResponseHeader: getResponseHeader,\n                                isHttp: stream.isHttp,\n                                rangeChunkSize: this._rangeChunkSize,\n                                disableRange: this._disableRange\n                            });\n                            this._isRangeSupported = allowRangeRequests;\n                            this._contentLength = suggestedLength || this._contentLength;\n                            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n                        };\n                        this._request = null;\n                        if (this._url.protocol === \"http:\") {\n                            const http = (parcelRequire(\"kjyEk\"));\n                            this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n                        } else {\n                            const https = (parcelRequire(\"kjyEk\"));\n                            this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n                        }\n                        this._request.on(\"error\", (reason)=>{\n                            this._storedError = reason;\n                            this._headersCapability.reject(reason);\n                        });\n                        this._request.end();\n                    }\n                }\n                class PDFNodeStreamRangeReader extends BaseRangeReader {\n                    constructor(stream, start, end){\n                        super(stream);\n                        this._httpHeaders = {};\n                        for(const property in stream.httpHeaders){\n                            const value = stream.httpHeaders[property];\n                            if (value === undefined) continue;\n                            this._httpHeaders[property] = value;\n                        }\n                        this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n                        const handleResponse = (response)=>{\n                            if (response.statusCode === 404) {\n                                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                                this._storedError = error;\n                                return;\n                            }\n                            this._setReadableStream(response);\n                        };\n                        this._request = null;\n                        if (this._url.protocol === \"http:\") {\n                            const http = (parcelRequire(\"kjyEk\"));\n                            this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n                        } else {\n                            const https = (parcelRequire(\"kjyEk\"));\n                            this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n                        }\n                        this._request.on(\"error\", (reason)=>{\n                            this._storedError = reason;\n                        });\n                        this._request.end();\n                    }\n                }\n                class PDFNodeStreamFsFullReader extends BaseFullReader {\n                    constructor(stream){\n                        super(stream);\n                        let path = decodeURIComponent(this._url.path);\n                        if (fileUriRegex.test(this._url.href)) path = path.replace(/^\\//, \"\");\n                        const fs = (parcelRequire(\"kjyEk\"));\n                        fs.lstat(path, (error, stat)=>{\n                            if (error) {\n                                if (error.code === \"ENOENT\") error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                                this._storedError = error;\n                                this._headersCapability.reject(error);\n                                return;\n                            }\n                            this._contentLength = stat.size;\n                            this._setReadableStream(fs.createReadStream(path));\n                            this._headersCapability.resolve();\n                        });\n                    }\n                }\n                class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n                    constructor(stream, start, end){\n                        super(stream);\n                        let path = decodeURIComponent(this._url.path);\n                        if (fileUriRegex.test(this._url.href)) path = path.replace(/^\\//, \"\");\n                        const fs = (parcelRequire(\"kjyEk\"));\n                        this._setReadableStream(fs.createReadStream(path, {\n                            start: start,\n                            end: end - 1\n                        }));\n                    }\n                }\n            /***/ },\n            /* 24 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.SVGGraphics = void 0;\n                var _display_utils = __w_pdfjs_require__(6);\n                var _util = __w_pdfjs_require__(1);\n                const SVG_DEFAULTS = {\n                    fontStyle: \"normal\",\n                    fontWeight: \"normal\",\n                    fillColor: \"#000000\"\n                };\n                const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n                const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n                const LINE_CAP_STYLES = [\n                    \"butt\",\n                    \"round\",\n                    \"square\"\n                ];\n                const LINE_JOIN_STYLES = [\n                    \"miter\",\n                    \"round\",\n                    \"bevel\"\n                ];\n                const createObjectURL = function(data, contentType = \"\", forceDataSchema = false) {\n                    if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) return URL.createObjectURL(new Blob([\n                        data\n                    ], {\n                        type: contentType\n                    }));\n                    const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n                    let buffer = `data:${contentType};base64,`;\n                    for(let i = 0, ii = data.length; i < ii; i += 3){\n                        const b1 = data[i] & 0xff;\n                        const b2 = data[i + 1] & 0xff;\n                        const b3 = data[i + 2] & 0xff;\n                        const d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n                        const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n                        const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n                        buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n                    }\n                    return buffer;\n                };\n                const convertImgDataToPng = function() {\n                    const PNG_HEADER = new Uint8Array([\n                        0x89,\n                        0x50,\n                        0x4e,\n                        0x47,\n                        0x0d,\n                        0x0a,\n                        0x1a,\n                        0x0a\n                    ]);\n                    const CHUNK_WRAPPER_SIZE = 12;\n                    const crcTable = new Int32Array(256);\n                    for(let i = 0; i < 256; i++){\n                        let c = i;\n                        for(let h = 0; h < 8; h++)c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n                        crcTable[i] = c;\n                    }\n                    function crc32(data, start, end) {\n                        let crc = -1;\n                        for(let i = start; i < end; i++){\n                            const a = (crc ^ data[i]) & 0xff;\n                            const b = crcTable[a];\n                            crc = crc >>> 8 ^ b;\n                        }\n                        return crc ^ -1;\n                    }\n                    function writePngChunk(type, body, data, offset) {\n                        let p = offset;\n                        const len = body.length;\n                        data[p] = len >> 24 & 0xff;\n                        data[p + 1] = len >> 16 & 0xff;\n                        data[p + 2] = len >> 8 & 0xff;\n                        data[p + 3] = len & 0xff;\n                        p += 4;\n                        data[p] = type.charCodeAt(0) & 0xff;\n                        data[p + 1] = type.charCodeAt(1) & 0xff;\n                        data[p + 2] = type.charCodeAt(2) & 0xff;\n                        data[p + 3] = type.charCodeAt(3) & 0xff;\n                        p += 4;\n                        data.set(body, p);\n                        p += body.length;\n                        const crc = crc32(data, offset + 4, p);\n                        data[p] = crc >> 24 & 0xff;\n                        data[p + 1] = crc >> 16 & 0xff;\n                        data[p + 2] = crc >> 8 & 0xff;\n                        data[p + 3] = crc & 0xff;\n                    }\n                    function adler32(data, start, end) {\n                        let a = 1;\n                        let b = 0;\n                        for(let i = start; i < end; ++i){\n                            a = (a + (data[i] & 0xff)) % 65521;\n                            b = (b + a) % 65521;\n                        }\n                        return b << 16 | a;\n                    }\n                    function deflateSync(literals) {\n                        if (!_util.isNodeJS) return deflateSyncUncompressed(literals);\n                        try {\n                            const input = parseInt($hPtJY.versions.node) >= 8 ? literals : $04552c275ef79ab8$require$Buffer.from(literals);\n                            const output = (parcelRequire(\"kjyEk\")).deflateSync(input, {\n                                level: 9\n                            });\n                            return output instanceof Uint8Array ? output : new Uint8Array(output);\n                        } catch (e) {\n                            (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n                        }\n                        return deflateSyncUncompressed(literals);\n                    }\n                    function deflateSyncUncompressed(literals) {\n                        let len = literals.length;\n                        const maxBlockLength = 0xffff;\n                        const deflateBlocks = Math.ceil(len / maxBlockLength);\n                        const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n                        let pi = 0;\n                        idat[pi++] = 0x78;\n                        idat[pi++] = 0x9c;\n                        let pos = 0;\n                        while(len > maxBlockLength){\n                            idat[pi++] = 0x00;\n                            idat[pi++] = 0xff;\n                            idat[pi++] = 0xff;\n                            idat[pi++] = 0x00;\n                            idat[pi++] = 0x00;\n                            idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n                            pi += maxBlockLength;\n                            pos += maxBlockLength;\n                            len -= maxBlockLength;\n                        }\n                        idat[pi++] = 0x01;\n                        idat[pi++] = len & 0xff;\n                        idat[pi++] = len >> 8 & 0xff;\n                        idat[pi++] = ~len & 255;\n                        idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n                        idat.set(literals.subarray(pos), pi);\n                        pi += literals.length - pos;\n                        const adler = adler32(literals, 0, literals.length);\n                        idat[pi++] = adler >> 24 & 0xff;\n                        idat[pi++] = adler >> 16 & 0xff;\n                        idat[pi++] = adler >> 8 & 0xff;\n                        idat[pi++] = adler & 0xff;\n                        return idat;\n                    }\n                    function encode(imgData, kind, forceDataSchema, isMask) {\n                        const width = imgData.width;\n                        const height = imgData.height;\n                        let bitDepth, colorType, lineSize;\n                        const bytes = imgData.data;\n                        switch(kind){\n                            case _util.ImageKind.GRAYSCALE_1BPP:\n                                colorType = 0;\n                                bitDepth = 1;\n                                lineSize = width + 7 >> 3;\n                                break;\n                            case _util.ImageKind.RGB_24BPP:\n                                colorType = 2;\n                                bitDepth = 8;\n                                lineSize = width * 3;\n                                break;\n                            case _util.ImageKind.RGBA_32BPP:\n                                colorType = 6;\n                                bitDepth = 8;\n                                lineSize = width * 4;\n                                break;\n                            default:\n                                throw new Error(\"invalid format\");\n                        }\n                        const literals = new Uint8Array((1 + lineSize) * height);\n                        let offsetLiterals = 0, offsetBytes = 0;\n                        for(let y = 0; y < height; ++y){\n                            literals[offsetLiterals++] = 0;\n                            literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n                            offsetBytes += lineSize;\n                            offsetLiterals += lineSize;\n                        }\n                        if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n                            offsetLiterals = 0;\n                            for(let y = 0; y < height; y++){\n                                offsetLiterals++;\n                                for(let i = 0; i < lineSize; i++)literals[offsetLiterals++] ^= 0xff;\n                            }\n                        }\n                        const ihdr = new Uint8Array([\n                            width >> 24 & 0xff,\n                            width >> 16 & 0xff,\n                            width >> 8 & 0xff,\n                            width & 0xff,\n                            height >> 24 & 0xff,\n                            height >> 16 & 0xff,\n                            height >> 8 & 0xff,\n                            height & 0xff,\n                            bitDepth,\n                            colorType,\n                            0x00,\n                            0x00,\n                            0x00\n                        ]);\n                        const idat = deflateSync(literals);\n                        const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n                        const data = new Uint8Array(pngLength);\n                        let offset = 0;\n                        data.set(PNG_HEADER, offset);\n                        offset += PNG_HEADER.length;\n                        writePngChunk(\"IHDR\", ihdr, data, offset);\n                        offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n                        writePngChunk(\"IDATA\", idat, data, offset);\n                        offset += CHUNK_WRAPPER_SIZE + idat.length;\n                        writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n                        return createObjectURL(data, \"image/png\", forceDataSchema);\n                    }\n                    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n                        const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n                        return encode(imgData, kind, forceDataSchema, isMask);\n                    };\n                }();\n                class SVGExtraState {\n                    constructor(){\n                        this.fontSizeScale = 1;\n                        this.fontWeight = SVG_DEFAULTS.fontWeight;\n                        this.fontSize = 0;\n                        this.textMatrix = _util.IDENTITY_MATRIX;\n                        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n                        this.leading = 0;\n                        this.textRenderingMode = _util.TextRenderingMode.FILL;\n                        this.textMatrixScale = 1;\n                        this.x = 0;\n                        this.y = 0;\n                        this.lineX = 0;\n                        this.lineY = 0;\n                        this.charSpacing = 0;\n                        this.wordSpacing = 0;\n                        this.textHScale = 1;\n                        this.textRise = 0;\n                        this.fillColor = SVG_DEFAULTS.fillColor;\n                        this.strokeColor = \"#000000\";\n                        this.fillAlpha = 1;\n                        this.strokeAlpha = 1;\n                        this.lineWidth = 1;\n                        this.lineJoin = \"\";\n                        this.lineCap = \"\";\n                        this.miterLimit = 0;\n                        this.dashArray = [];\n                        this.dashPhase = 0;\n                        this.dependencies = [];\n                        this.activeClipUrl = null;\n                        this.clipGroup = null;\n                        this.maskId = \"\";\n                    }\n                    clone() {\n                        return Object.create(this);\n                    }\n                    setCurrentPoint(x, y) {\n                        this.x = x;\n                        this.y = y;\n                    }\n                }\n                function opListToTree(opList) {\n                    let opTree = [];\n                    const tmp = [];\n                    for (const opListElement of opList){\n                        if (opListElement.fn === \"save\") {\n                            opTree.push({\n                                fnId: 92,\n                                fn: \"group\",\n                                items: []\n                            });\n                            tmp.push(opTree);\n                            opTree = opTree.at(-1).items;\n                            continue;\n                        }\n                        if (opListElement.fn === \"restore\") opTree = tmp.pop();\n                        else opTree.push(opListElement);\n                    }\n                    return opTree;\n                }\n                function pf(value) {\n                    if (Number.isInteger(value)) return value.toString();\n                    const s = value.toFixed(10);\n                    let i = s.length - 1;\n                    if (s[i] !== \"0\") return s;\n                    do i--;\n                    while (s[i] === \"0\");\n                    return s.substring(0, s[i] === \".\" ? i : i + 1);\n                }\n                function pm(m) {\n                    if (m[4] === 0 && m[5] === 0) {\n                        if (m[1] === 0 && m[2] === 0) {\n                            if (m[0] === 1 && m[3] === 1) return \"\";\n                            return `scale(${pf(m[0])} ${pf(m[3])})`;\n                        }\n                        if (m[0] === m[3] && m[1] === -m[2]) {\n                            const a = Math.acos(m[0]) * 180 / Math.PI;\n                            return `rotate(${pf(a)})`;\n                        }\n                    } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) return `translate(${pf(m[4])} ${pf(m[5])})`;\n                    return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n                }\n                let clipCount = 0;\n                let maskCount = 0;\n                let shadingCount = 0;\n                class SVGGraphics {\n                    constructor(commonObjs, objs, forceDataSchema = false){\n                        (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n                        this.svgFactory = new _display_utils.DOMSVGFactory();\n                        this.current = new SVGExtraState();\n                        this.transformMatrix = _util.IDENTITY_MATRIX;\n                        this.transformStack = [];\n                        this.extraStack = [];\n                        this.commonObjs = commonObjs;\n                        this.objs = objs;\n                        this.pendingClip = null;\n                        this.pendingEOFill = false;\n                        this.embedFonts = false;\n                        this.embeddedFonts = Object.create(null);\n                        this.cssStyle = null;\n                        this.forceDataSchema = !!forceDataSchema;\n                        this._operatorIdMapping = [];\n                        for(const op in _util.OPS)this._operatorIdMapping[_util.OPS[op]] = op;\n                    }\n                    getObject(data, fallback = null) {\n                        if (typeof data === \"string\") return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n                        return fallback;\n                    }\n                    save() {\n                        this.transformStack.push(this.transformMatrix);\n                        const old = this.current;\n                        this.extraStack.push(old);\n                        this.current = old.clone();\n                    }\n                    restore() {\n                        this.transformMatrix = this.transformStack.pop();\n                        this.current = this.extraStack.pop();\n                        this.pendingClip = null;\n                        this.tgrp = null;\n                    }\n                    group(items) {\n                        this.save();\n                        this.executeOpTree(items);\n                        this.restore();\n                    }\n                    loadDependencies(operatorList) {\n                        const fnArray = operatorList.fnArray;\n                        const argsArray = operatorList.argsArray;\n                        for(let i = 0, ii = fnArray.length; i < ii; i++){\n                            if (fnArray[i] !== _util.OPS.dependency) continue;\n                            for (const obj of argsArray[i]){\n                                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                                const promise = new Promise((resolve)=>{\n                                    objsPool.get(obj, resolve);\n                                });\n                                this.current.dependencies.push(promise);\n                            }\n                        }\n                        return Promise.all(this.current.dependencies);\n                    }\n                    transform(a, b, c, d, e, f) {\n                        const transformMatrix = [\n                            a,\n                            b,\n                            c,\n                            d,\n                            e,\n                            f\n                        ];\n                        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n                        this.tgrp = null;\n                    }\n                    getSVG(operatorList, viewport) {\n                        this.viewport = viewport;\n                        const svgElement = this._initialize(viewport);\n                        return this.loadDependencies(operatorList).then(()=>{\n                            this.transformMatrix = _util.IDENTITY_MATRIX;\n                            this.executeOpTree(this.convertOpList(operatorList));\n                            return svgElement;\n                        });\n                    }\n                    convertOpList(operatorList) {\n                        const operatorIdMapping = this._operatorIdMapping;\n                        const argsArray = operatorList.argsArray;\n                        const fnArray = operatorList.fnArray;\n                        const opList = [];\n                        for(let i = 0, ii = fnArray.length; i < ii; i++){\n                            const fnId = fnArray[i];\n                            opList.push({\n                                fnId: fnId,\n                                fn: operatorIdMapping[fnId],\n                                args: argsArray[i]\n                            });\n                        }\n                        return opListToTree(opList);\n                    }\n                    executeOpTree(opTree) {\n                        for (const opTreeElement of opTree){\n                            const fn = opTreeElement.fn;\n                            const fnId = opTreeElement.fnId;\n                            const args = opTreeElement.args;\n                            switch(fnId | 0){\n                                case _util.OPS.beginText:\n                                    this.beginText();\n                                    break;\n                                case _util.OPS.dependency:\n                                    break;\n                                case _util.OPS.setLeading:\n                                    this.setLeading(args);\n                                    break;\n                                case _util.OPS.setLeadingMoveText:\n                                    this.setLeadingMoveText(args[0], args[1]);\n                                    break;\n                                case _util.OPS.setFont:\n                                    this.setFont(args);\n                                    break;\n                                case _util.OPS.showText:\n                                    this.showText(args[0]);\n                                    break;\n                                case _util.OPS.showSpacedText:\n                                    this.showText(args[0]);\n                                    break;\n                                case _util.OPS.endText:\n                                    this.endText();\n                                    break;\n                                case _util.OPS.moveText:\n                                    this.moveText(args[0], args[1]);\n                                    break;\n                                case _util.OPS.setCharSpacing:\n                                    this.setCharSpacing(args[0]);\n                                    break;\n                                case _util.OPS.setWordSpacing:\n                                    this.setWordSpacing(args[0]);\n                                    break;\n                                case _util.OPS.setHScale:\n                                    this.setHScale(args[0]);\n                                    break;\n                                case _util.OPS.setTextMatrix:\n                                    this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                                    break;\n                                case _util.OPS.setTextRise:\n                                    this.setTextRise(args[0]);\n                                    break;\n                                case _util.OPS.setTextRenderingMode:\n                                    this.setTextRenderingMode(args[0]);\n                                    break;\n                                case _util.OPS.setLineWidth:\n                                    this.setLineWidth(args[0]);\n                                    break;\n                                case _util.OPS.setLineJoin:\n                                    this.setLineJoin(args[0]);\n                                    break;\n                                case _util.OPS.setLineCap:\n                                    this.setLineCap(args[0]);\n                                    break;\n                                case _util.OPS.setMiterLimit:\n                                    this.setMiterLimit(args[0]);\n                                    break;\n                                case _util.OPS.setFillRGBColor:\n                                    this.setFillRGBColor(args[0], args[1], args[2]);\n                                    break;\n                                case _util.OPS.setStrokeRGBColor:\n                                    this.setStrokeRGBColor(args[0], args[1], args[2]);\n                                    break;\n                                case _util.OPS.setStrokeColorN:\n                                    this.setStrokeColorN(args);\n                                    break;\n                                case _util.OPS.setFillColorN:\n                                    this.setFillColorN(args);\n                                    break;\n                                case _util.OPS.shadingFill:\n                                    this.shadingFill(args[0]);\n                                    break;\n                                case _util.OPS.setDash:\n                                    this.setDash(args[0], args[1]);\n                                    break;\n                                case _util.OPS.setRenderingIntent:\n                                    this.setRenderingIntent(args[0]);\n                                    break;\n                                case _util.OPS.setFlatness:\n                                    this.setFlatness(args[0]);\n                                    break;\n                                case _util.OPS.setGState:\n                                    this.setGState(args[0]);\n                                    break;\n                                case _util.OPS.fill:\n                                    this.fill();\n                                    break;\n                                case _util.OPS.eoFill:\n                                    this.eoFill();\n                                    break;\n                                case _util.OPS.stroke:\n                                    this.stroke();\n                                    break;\n                                case _util.OPS.fillStroke:\n                                    this.fillStroke();\n                                    break;\n                                case _util.OPS.eoFillStroke:\n                                    this.eoFillStroke();\n                                    break;\n                                case _util.OPS.clip:\n                                    this.clip(\"nonzero\");\n                                    break;\n                                case _util.OPS.eoClip:\n                                    this.clip(\"evenodd\");\n                                    break;\n                                case _util.OPS.paintSolidColorImageMask:\n                                    this.paintSolidColorImageMask();\n                                    break;\n                                case _util.OPS.paintImageXObject:\n                                    this.paintImageXObject(args[0]);\n                                    break;\n                                case _util.OPS.paintInlineImageXObject:\n                                    this.paintInlineImageXObject(args[0]);\n                                    break;\n                                case _util.OPS.paintImageMaskXObject:\n                                    this.paintImageMaskXObject(args[0]);\n                                    break;\n                                case _util.OPS.paintFormXObjectBegin:\n                                    this.paintFormXObjectBegin(args[0], args[1]);\n                                    break;\n                                case _util.OPS.paintFormXObjectEnd:\n                                    this.paintFormXObjectEnd();\n                                    break;\n                                case _util.OPS.closePath:\n                                    this.closePath();\n                                    break;\n                                case _util.OPS.closeStroke:\n                                    this.closeStroke();\n                                    break;\n                                case _util.OPS.closeFillStroke:\n                                    this.closeFillStroke();\n                                    break;\n                                case _util.OPS.closeEOFillStroke:\n                                    this.closeEOFillStroke();\n                                    break;\n                                case _util.OPS.nextLine:\n                                    this.nextLine();\n                                    break;\n                                case _util.OPS.transform:\n                                    this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                                    break;\n                                case _util.OPS.constructPath:\n                                    this.constructPath(args[0], args[1]);\n                                    break;\n                                case _util.OPS.endPath:\n                                    this.endPath();\n                                    break;\n                                case 92:\n                                    this.group(opTreeElement.items);\n                                    break;\n                                default:\n                                    (0, _util.warn)(`Unimplemented operator ${fn}`);\n                                    break;\n                            }\n                        }\n                    }\n                    setWordSpacing(wordSpacing) {\n                        this.current.wordSpacing = wordSpacing;\n                    }\n                    setCharSpacing(charSpacing) {\n                        this.current.charSpacing = charSpacing;\n                    }\n                    nextLine() {\n                        this.moveText(0, this.current.leading);\n                    }\n                    setTextMatrix(a, b, c, d, e, f) {\n                        const current = this.current;\n                        current.textMatrix = current.lineMatrix = [\n                            a,\n                            b,\n                            c,\n                            d,\n                            e,\n                            f\n                        ];\n                        current.textMatrixScale = Math.hypot(a, b);\n                        current.x = current.lineX = 0;\n                        current.y = current.lineY = 0;\n                        current.xcoords = [];\n                        current.ycoords = [];\n                        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n                        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n                        current.txtElement.append(current.tspan);\n                    }\n                    beginText() {\n                        const current = this.current;\n                        current.x = current.lineX = 0;\n                        current.y = current.lineY = 0;\n                        current.textMatrix = _util.IDENTITY_MATRIX;\n                        current.lineMatrix = _util.IDENTITY_MATRIX;\n                        current.textMatrixScale = 1;\n                        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n                        current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n                        current.xcoords = [];\n                        current.ycoords = [];\n                    }\n                    moveText(x, y) {\n                        const current = this.current;\n                        current.x = current.lineX += x;\n                        current.y = current.lineY += y;\n                        current.xcoords = [];\n                        current.ycoords = [];\n                        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n                        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                    }\n                    showText(glyphs) {\n                        const current = this.current;\n                        const font = current.font;\n                        const fontSize = current.fontSize;\n                        if (fontSize === 0) return;\n                        const fontSizeScale = current.fontSizeScale;\n                        const charSpacing = current.charSpacing;\n                        const wordSpacing = current.wordSpacing;\n                        const fontDirection = current.fontDirection;\n                        const textHScale = current.textHScale * fontDirection;\n                        const vertical = font.vertical;\n                        const spacingDir = vertical ? 1 : -1;\n                        const defaultVMetrics = font.defaultVMetrics;\n                        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n                        let x = 0;\n                        for (const glyph of glyphs){\n                            if (glyph === null) {\n                                x += fontDirection * wordSpacing;\n                                continue;\n                            } else if (typeof glyph === \"number\") {\n                                x += spacingDir * glyph * fontSize / 1000;\n                                continue;\n                            }\n                            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                            const character = glyph.fontChar;\n                            let scaledX, scaledY;\n                            let width = glyph.width;\n                            if (vertical) {\n                                let vx;\n                                const vmetric = glyph.vmetric || defaultVMetrics;\n                                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                                vx = -vx * widthAdvanceScale;\n                                const vy = vmetric[2] * widthAdvanceScale;\n                                width = vmetric ? -vmetric[0] : width;\n                                scaledX = vx / fontSizeScale;\n                                scaledY = (x + vy) / fontSizeScale;\n                            } else {\n                                scaledX = x / fontSizeScale;\n                                scaledY = 0;\n                            }\n                            if (glyph.isInFont || font.missingFile) {\n                                current.xcoords.push(current.x + scaledX);\n                                if (vertical) current.ycoords.push(-current.y + scaledY);\n                                current.tspan.textContent += character;\n                            }\n                            const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n                            x += charWidth;\n                        }\n                        current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n                        if (vertical) current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n                        else current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                        if (vertical) current.y -= x;\n                        else current.x += x * textHScale;\n                        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n                        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n                        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n                        const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n                        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                            if (current.fillColor !== SVG_DEFAULTS.fillColor) current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                            if (current.fillAlpha < 1) current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                        } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n                        else current.tspan.setAttributeNS(null, \"fill\", \"none\");\n                        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                            const lineWidthScale = 1 / (current.textMatrixScale || 1);\n                            this._setStrokeAttributes(current.tspan, lineWidthScale);\n                        }\n                        let textMatrix = current.textMatrix;\n                        if (current.textRise !== 0) {\n                            textMatrix = textMatrix.slice();\n                            textMatrix[5] += current.textRise;\n                        }\n                        current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n                        current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n                        current.txtElement.append(current.tspan);\n                        current.txtgrp.append(current.txtElement);\n                        this._ensureTransformGroup().append(current.txtElement);\n                    }\n                    setLeadingMoveText(x, y) {\n                        this.setLeading(-y);\n                        this.moveText(x, y);\n                    }\n                    addFontStyle(fontObj) {\n                        if (!fontObj.data) throw new Error('addFontStyle: No font data available, ensure that the \"fontExtraProperties\" API parameter is set.');\n                        if (!this.cssStyle) {\n                            this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                            this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                            this.defs.append(this.cssStyle);\n                        }\n                        const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n                        this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n                    }\n                    setFont(details) {\n                        const current = this.current;\n                        const fontObj = this.commonObjs.get(details[0]);\n                        let size = details[1];\n                        current.font = fontObj;\n                        if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                            this.addFontStyle(fontObj);\n                            this.embeddedFonts[fontObj.loadedName] = fontObj;\n                        }\n                        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n                        let bold = \"normal\";\n                        if (fontObj.black) bold = \"900\";\n                        else if (fontObj.bold) bold = \"bold\";\n                        const italic = fontObj.italic ? \"italic\" : \"normal\";\n                        if (size < 0) {\n                            size = -size;\n                            current.fontDirection = -1;\n                        } else current.fontDirection = 1;\n                        current.fontSize = size;\n                        current.fontFamily = fontObj.loadedName;\n                        current.fontWeight = bold;\n                        current.fontStyle = italic;\n                        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                        current.xcoords = [];\n                        current.ycoords = [];\n                    }\n                    endText() {\n                        const current = this.current;\n                        if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n                            current.element = current.txtElement;\n                            this.clip(\"nonzero\");\n                            this.endPath();\n                        }\n                    }\n                    setLineWidth(width) {\n                        if (width > 0) this.current.lineWidth = width;\n                    }\n                    setLineCap(style) {\n                        this.current.lineCap = LINE_CAP_STYLES[style];\n                    }\n                    setLineJoin(style) {\n                        this.current.lineJoin = LINE_JOIN_STYLES[style];\n                    }\n                    setMiterLimit(limit) {\n                        this.current.miterLimit = limit;\n                    }\n                    setStrokeAlpha(strokeAlpha) {\n                        this.current.strokeAlpha = strokeAlpha;\n                    }\n                    setStrokeRGBColor(r, g, b) {\n                        this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n                    }\n                    setFillAlpha(fillAlpha) {\n                        this.current.fillAlpha = fillAlpha;\n                    }\n                    setFillRGBColor(r, g, b) {\n                        this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n                        this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                        this.current.xcoords = [];\n                        this.current.ycoords = [];\n                    }\n                    setStrokeColorN(args) {\n                        this.current.strokeColor = this._makeColorN_Pattern(args);\n                    }\n                    setFillColorN(args) {\n                        this.current.fillColor = this._makeColorN_Pattern(args);\n                    }\n                    shadingFill(args) {\n                        const { width, height } = this.viewport;\n                        const inv = _util.Util.inverseTransform(this.transformMatrix);\n                        const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([\n                            0,\n                            0,\n                            width,\n                            height\n                        ], inv);\n                        const rect = this.svgFactory.createElement(\"svg:rect\");\n                        rect.setAttributeNS(null, \"x\", x0);\n                        rect.setAttributeNS(null, \"y\", y0);\n                        rect.setAttributeNS(null, \"width\", x1 - x0);\n                        rect.setAttributeNS(null, \"height\", y1 - y0);\n                        rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n                        if (this.current.fillAlpha < 1) rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n                        this._ensureTransformGroup().append(rect);\n                    }\n                    _makeColorN_Pattern(args) {\n                        if (args[0] === \"TilingPattern\") return this._makeTilingPattern(args);\n                        return this._makeShadingPattern(args);\n                    }\n                    _makeTilingPattern(args) {\n                        const color = args[1];\n                        const operatorList = args[2];\n                        const matrix = args[3] || _util.IDENTITY_MATRIX;\n                        const [x0, y0, x1, y1] = args[4];\n                        const xstep = args[5];\n                        const ystep = args[6];\n                        const paintType = args[7];\n                        const tilingId = `shading${shadingCount++}`;\n                        const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([\n                            ..._util.Util.applyTransform([\n                                x0,\n                                y0\n                            ], matrix),\n                            ..._util.Util.applyTransform([\n                                x1,\n                                y1\n                            ], matrix)\n                        ]);\n                        const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n                        const txstep = xstep * xscale;\n                        const tystep = ystep * yscale;\n                        const tiling = this.svgFactory.createElement(\"svg:pattern\");\n                        tiling.setAttributeNS(null, \"id\", tilingId);\n                        tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n                        tiling.setAttributeNS(null, \"width\", txstep);\n                        tiling.setAttributeNS(null, \"height\", tystep);\n                        tiling.setAttributeNS(null, \"x\", `${tx0}`);\n                        tiling.setAttributeNS(null, \"y\", `${ty0}`);\n                        const svg = this.svg;\n                        const transformMatrix = this.transformMatrix;\n                        const fillColor = this.current.fillColor;\n                        const strokeColor = this.current.strokeColor;\n                        const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n                        this.svg = bbox;\n                        this.transformMatrix = matrix;\n                        if (paintType === 2) {\n                            const cssColor = _util.Util.makeHexColor(...color);\n                            this.current.fillColor = cssColor;\n                            this.current.strokeColor = cssColor;\n                        }\n                        this.executeOpTree(this.convertOpList(operatorList));\n                        this.svg = svg;\n                        this.transformMatrix = transformMatrix;\n                        this.current.fillColor = fillColor;\n                        this.current.strokeColor = strokeColor;\n                        tiling.append(bbox.childNodes[0]);\n                        this.defs.append(tiling);\n                        return `url(#${tilingId})`;\n                    }\n                    _makeShadingPattern(args) {\n                        if (typeof args === \"string\") args = this.objs.get(args);\n                        switch(args[0]){\n                            case \"RadialAxial\":\n                                const shadingId = `shading${shadingCount++}`;\n                                const colorStops = args[3];\n                                let gradient;\n                                switch(args[1]){\n                                    case \"axial\":\n                                        const point0 = args[4];\n                                        const point1 = args[5];\n                                        gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                                        gradient.setAttributeNS(null, \"id\", shadingId);\n                                        gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                                        gradient.setAttributeNS(null, \"x1\", point0[0]);\n                                        gradient.setAttributeNS(null, \"y1\", point0[1]);\n                                        gradient.setAttributeNS(null, \"x2\", point1[0]);\n                                        gradient.setAttributeNS(null, \"y2\", point1[1]);\n                                        break;\n                                    case \"radial\":\n                                        const focalPoint = args[4];\n                                        const circlePoint = args[5];\n                                        const focalRadius = args[6];\n                                        const circleRadius = args[7];\n                                        gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                                        gradient.setAttributeNS(null, \"id\", shadingId);\n                                        gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                                        gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                                        gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                                        gradient.setAttributeNS(null, \"r\", circleRadius);\n                                        gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                                        gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                                        gradient.setAttributeNS(null, \"fr\", focalRadius);\n                                        break;\n                                    default:\n                                        throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                                }\n                                for (const colorStop of colorStops){\n                                    const stop = this.svgFactory.createElement(\"svg:stop\");\n                                    stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                                    stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                                    gradient.append(stop);\n                                }\n                                this.defs.append(gradient);\n                                return `url(#${shadingId})`;\n                            case \"Mesh\":\n                                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                                return null;\n                            case \"Dummy\":\n                                return \"hotpink\";\n                            default:\n                                throw new Error(`Unknown IR type: ${args[0]}`);\n                        }\n                    }\n                    setDash(dashArray, dashPhase) {\n                        this.current.dashArray = dashArray;\n                        this.current.dashPhase = dashPhase;\n                    }\n                    constructPath(ops, args) {\n                        const current = this.current;\n                        let x = current.x, y = current.y;\n                        let d = [];\n                        let j = 0;\n                        for (const op of ops)switch(op | 0){\n                            case _util.OPS.rectangle:\n                                x = args[j++];\n                                y = args[j++];\n                                const width = args[j++];\n                                const height = args[j++];\n                                const xw = x + width;\n                                const yh = y + height;\n                                d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                                break;\n                            case _util.OPS.moveTo:\n                                x = args[j++];\n                                y = args[j++];\n                                d.push(\"M\", pf(x), pf(y));\n                                break;\n                            case _util.OPS.lineTo:\n                                x = args[j++];\n                                y = args[j++];\n                                d.push(\"L\", pf(x), pf(y));\n                                break;\n                            case _util.OPS.curveTo:\n                                x = args[j + 4];\n                                y = args[j + 5];\n                                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                                j += 6;\n                                break;\n                            case _util.OPS.curveTo2:\n                                d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                                x = args[j + 2];\n                                y = args[j + 3];\n                                j += 4;\n                                break;\n                            case _util.OPS.curveTo3:\n                                x = args[j + 2];\n                                y = args[j + 3];\n                                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                                j += 4;\n                                break;\n                            case _util.OPS.closePath:\n                                d.push(\"Z\");\n                                break;\n                        }\n                        d = d.join(\" \");\n                        if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) d = current.path.getAttributeNS(null, \"d\") + d;\n                        else {\n                            current.path = this.svgFactory.createElement(\"svg:path\");\n                            this._ensureTransformGroup().append(current.path);\n                        }\n                        current.path.setAttributeNS(null, \"d\", d);\n                        current.path.setAttributeNS(null, \"fill\", \"none\");\n                        current.element = current.path;\n                        current.setCurrentPoint(x, y);\n                    }\n                    endPath() {\n                        const current = this.current;\n                        current.path = null;\n                        if (!this.pendingClip) return;\n                        if (!current.element) {\n                            this.pendingClip = null;\n                            return;\n                        }\n                        const clipId = `clippath${clipCount++}`;\n                        const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n                        clipPath.setAttributeNS(null, \"id\", clipId);\n                        clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                        const clipElement = current.element.cloneNode(true);\n                        if (this.pendingClip === \"evenodd\") clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n                        else clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n                        this.pendingClip = null;\n                        clipPath.append(clipElement);\n                        this.defs.append(clipPath);\n                        if (current.activeClipUrl) {\n                            current.clipGroup = null;\n                            for (const prev of this.extraStack)prev.clipGroup = null;\n                            clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n                        }\n                        current.activeClipUrl = `url(#${clipId})`;\n                        this.tgrp = null;\n                    }\n                    clip(type) {\n                        this.pendingClip = type;\n                    }\n                    closePath() {\n                        const current = this.current;\n                        if (current.path) {\n                            const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n                            current.path.setAttributeNS(null, \"d\", d);\n                        }\n                    }\n                    setLeading(leading) {\n                        this.current.leading = -leading;\n                    }\n                    setTextRise(textRise) {\n                        this.current.textRise = textRise;\n                    }\n                    setTextRenderingMode(textRenderingMode) {\n                        this.current.textRenderingMode = textRenderingMode;\n                    }\n                    setHScale(scale) {\n                        this.current.textHScale = scale / 100;\n                    }\n                    setRenderingIntent(intent) {}\n                    setFlatness(flatness) {}\n                    setGState(states) {\n                        for (const [key, value] of states)switch(key){\n                            case \"LW\":\n                                this.setLineWidth(value);\n                                break;\n                            case \"LC\":\n                                this.setLineCap(value);\n                                break;\n                            case \"LJ\":\n                                this.setLineJoin(value);\n                                break;\n                            case \"ML\":\n                                this.setMiterLimit(value);\n                                break;\n                            case \"D\":\n                                this.setDash(value[0], value[1]);\n                                break;\n                            case \"RI\":\n                                this.setRenderingIntent(value);\n                                break;\n                            case \"FL\":\n                                this.setFlatness(value);\n                                break;\n                            case \"Font\":\n                                this.setFont(value);\n                                break;\n                            case \"CA\":\n                                this.setStrokeAlpha(value);\n                                break;\n                            case \"ca\":\n                                this.setFillAlpha(value);\n                                break;\n                            default:\n                                (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                                break;\n                        }\n                    }\n                    fill() {\n                        const current = this.current;\n                        if (current.element) {\n                            current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                            current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                            this.endPath();\n                        }\n                    }\n                    stroke() {\n                        const current = this.current;\n                        if (current.element) {\n                            this._setStrokeAttributes(current.element);\n                            current.element.setAttributeNS(null, \"fill\", \"none\");\n                            this.endPath();\n                        }\n                    }\n                    _setStrokeAttributes(element, lineWidthScale = 1) {\n                        const current = this.current;\n                        let dashArray = current.dashArray;\n                        if (lineWidthScale !== 1 && dashArray.length > 0) dashArray = dashArray.map(function(value) {\n                            return lineWidthScale * value;\n                        });\n                        element.setAttributeNS(null, \"stroke\", current.strokeColor);\n                        element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n                        element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n                        element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n                        element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n                        element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n                        element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n                        element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n                    }\n                    eoFill() {\n                        this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n                        this.fill();\n                    }\n                    fillStroke() {\n                        this.stroke();\n                        this.fill();\n                    }\n                    eoFillStroke() {\n                        this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n                        this.fillStroke();\n                    }\n                    closeStroke() {\n                        this.closePath();\n                        this.stroke();\n                    }\n                    closeFillStroke() {\n                        this.closePath();\n                        this.fillStroke();\n                    }\n                    closeEOFillStroke() {\n                        this.closePath();\n                        this.eoFillStroke();\n                    }\n                    paintSolidColorImageMask() {\n                        const rect = this.svgFactory.createElement(\"svg:rect\");\n                        rect.setAttributeNS(null, \"x\", \"0\");\n                        rect.setAttributeNS(null, \"y\", \"0\");\n                        rect.setAttributeNS(null, \"width\", \"1px\");\n                        rect.setAttributeNS(null, \"height\", \"1px\");\n                        rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n                        this._ensureTransformGroup().append(rect);\n                    }\n                    paintImageXObject(objId) {\n                        const imgData = this.getObject(objId);\n                        if (!imgData) {\n                            (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n                            return;\n                        }\n                        this.paintInlineImageXObject(imgData);\n                    }\n                    paintInlineImageXObject(imgData, mask) {\n                        const width = imgData.width;\n                        const height = imgData.height;\n                        const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n                        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n                        cliprect.setAttributeNS(null, \"x\", \"0\");\n                        cliprect.setAttributeNS(null, \"y\", \"0\");\n                        cliprect.setAttributeNS(null, \"width\", pf(width));\n                        cliprect.setAttributeNS(null, \"height\", pf(height));\n                        this.current.element = cliprect;\n                        this.clip(\"nonzero\");\n                        const imgEl = this.svgFactory.createElement(\"svg:image\");\n                        imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n                        imgEl.setAttributeNS(null, \"x\", \"0\");\n                        imgEl.setAttributeNS(null, \"y\", pf(-height));\n                        imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n                        imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n                        imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n                        if (mask) mask.append(imgEl);\n                        else this._ensureTransformGroup().append(imgEl);\n                    }\n                    paintImageMaskXObject(img) {\n                        const imgData = this.getObject(img.data, img);\n                        if (imgData.bitmap) {\n                            (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n                            return;\n                        }\n                        const current = this.current;\n                        const width = imgData.width;\n                        const height = imgData.height;\n                        const fillColor = current.fillColor;\n                        current.maskId = `mask${maskCount++}`;\n                        const mask = this.svgFactory.createElement(\"svg:mask\");\n                        mask.setAttributeNS(null, \"id\", current.maskId);\n                        const rect = this.svgFactory.createElement(\"svg:rect\");\n                        rect.setAttributeNS(null, \"x\", \"0\");\n                        rect.setAttributeNS(null, \"y\", \"0\");\n                        rect.setAttributeNS(null, \"width\", pf(width));\n                        rect.setAttributeNS(null, \"height\", pf(height));\n                        rect.setAttributeNS(null, \"fill\", fillColor);\n                        rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n                        this.defs.append(mask);\n                        this._ensureTransformGroup().append(rect);\n                        this.paintInlineImageXObject(imgData, mask);\n                    }\n                    paintFormXObjectBegin(matrix, bbox) {\n                        if (Array.isArray(matrix) && matrix.length === 6) this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n                        if (bbox) {\n                            const width = bbox[2] - bbox[0];\n                            const height = bbox[3] - bbox[1];\n                            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n                            cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                            cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                            cliprect.setAttributeNS(null, \"width\", pf(width));\n                            cliprect.setAttributeNS(null, \"height\", pf(height));\n                            this.current.element = cliprect;\n                            this.clip(\"nonzero\");\n                            this.endPath();\n                        }\n                    }\n                    paintFormXObjectEnd() {}\n                    _initialize(viewport) {\n                        const svg = this.svgFactory.create(viewport.width, viewport.height);\n                        const definitions = this.svgFactory.createElement(\"svg:defs\");\n                        svg.append(definitions);\n                        this.defs = definitions;\n                        const rootGroup = this.svgFactory.createElement(\"svg:g\");\n                        rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n                        svg.append(rootGroup);\n                        this.svg = rootGroup;\n                        return svg;\n                    }\n                    _ensureClipGroup() {\n                        if (!this.current.clipGroup) {\n                            const clipGroup = this.svgFactory.createElement(\"svg:g\");\n                            clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                            this.svg.append(clipGroup);\n                            this.current.clipGroup = clipGroup;\n                        }\n                        return this.current.clipGroup;\n                    }\n                    _ensureTransformGroup() {\n                        if (!this.tgrp) {\n                            this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                            this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                            if (this.current.activeClipUrl) this._ensureClipGroup().append(this.tgrp);\n                            else this.svg.append(this.tgrp);\n                        }\n                        return this.tgrp;\n                    }\n                }\n                exports.SVGGraphics = SVGGraphics;\n            /***/ },\n            /* 25 */ /***/ (__unused_webpack_module, exports)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.XfaText = void 0;\n                class XfaText {\n                    static textContent(xfa) {\n                        const items = [];\n                        const output = {\n                            items: items,\n                            styles: Object.create(null)\n                        };\n                        function walk(node) {\n                            if (!node) return;\n                            let str = null;\n                            const name = node.name;\n                            if (name === \"#text\") str = node.value;\n                            else if (!XfaText.shouldBuildText(name)) return;\n                            else if (node?.attributes?.textContent) str = node.attributes.textContent;\n                            else if (node.value) str = node.value;\n                            if (str !== null) items.push({\n                                str: str\n                            });\n                            if (!node.children) return;\n                            for (const child of node.children)walk(child);\n                        }\n                        walk(xfa);\n                        return output;\n                    }\n                    static shouldBuildText(name) {\n                        return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n                    }\n                }\n                exports.XfaText = XfaText;\n            /***/ },\n            /* 26 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.TextLayerRenderTask = void 0;\n                exports.renderTextLayer = renderTextLayer;\n                exports.updateTextLayer = updateTextLayer;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                const MAX_TEXT_DIVS_TO_RENDER = 100000;\n                const DEFAULT_FONT_SIZE = 30;\n                const DEFAULT_FONT_ASCENT = 0.8;\n                const ascentCache = new Map();\n                function getCtx(size, isOffscreenCanvasSupported) {\n                    let ctx;\n                    if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n                        alpha: false\n                    });\n                    else {\n                        const canvas = document.createElement(\"canvas\");\n                        canvas.width = canvas.height = size;\n                        ctx = canvas.getContext(\"2d\", {\n                            alpha: false\n                        });\n                    }\n                    return ctx;\n                }\n                function getAscent(fontFamily, isOffscreenCanvasSupported) {\n                    const cachedAscent = ascentCache.get(fontFamily);\n                    if (cachedAscent) return cachedAscent;\n                    const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n                    ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n                    const metrics = ctx.measureText(\"\");\n                    let ascent = metrics.fontBoundingBoxAscent;\n                    let descent = Math.abs(metrics.fontBoundingBoxDescent);\n                    if (ascent) {\n                        const ratio = ascent / (ascent + descent);\n                        ascentCache.set(fontFamily, ratio);\n                        ctx.canvas.width = ctx.canvas.height = 0;\n                        return ratio;\n                    }\n                    ctx.strokeStyle = \"red\";\n                    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n                    ctx.strokeText(\"g\", 0, 0);\n                    let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n                    descent = 0;\n                    for(let i = pixels.length - 1 - 3; i >= 0; i -= 4)if (pixels[i] > 0) {\n                        descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n                        break;\n                    }\n                    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n                    ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n                    pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n                    ascent = 0;\n                    for(let i = 0, ii = pixels.length; i < ii; i += 4)if (pixels[i] > 0) {\n                        ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n                        break;\n                    }\n                    ctx.canvas.width = ctx.canvas.height = 0;\n                    if (ascent) {\n                        const ratio = ascent / (ascent + descent);\n                        ascentCache.set(fontFamily, ratio);\n                        return ratio;\n                    }\n                    ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n                    return DEFAULT_FONT_ASCENT;\n                }\n                function appendText(task, geom, styles) {\n                    const textDiv = document.createElement(\"span\");\n                    const textDivProperties = {\n                        angle: 0,\n                        canvasWidth: 0,\n                        hasText: geom.str !== \"\",\n                        hasEOL: geom.hasEOL,\n                        fontSize: 0\n                    };\n                    task._textDivs.push(textDiv);\n                    const tx = _util.Util.transform(task._transform, geom.transform);\n                    let angle = Math.atan2(tx[1], tx[0]);\n                    const style = styles[geom.fontName];\n                    if (style.vertical) angle += Math.PI / 2;\n                    const fontHeight = Math.hypot(tx[2], tx[3]);\n                    const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n                    let left, top;\n                    if (angle === 0) {\n                        left = tx[4];\n                        top = tx[5] - fontAscent;\n                    } else {\n                        left = tx[4] + fontAscent * Math.sin(angle);\n                        top = tx[5] - fontAscent * Math.cos(angle);\n                    }\n                    const scaleFactorStr = \"calc(var(--scale-factor)*\";\n                    const divStyle = textDiv.style;\n                    if (task._container === task._rootContainer) {\n                        divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n                        divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n                    } else {\n                        divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n                        divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n                    }\n                    divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n                    divStyle.fontFamily = style.fontFamily;\n                    textDivProperties.fontSize = fontHeight;\n                    textDiv.setAttribute(\"role\", \"presentation\");\n                    textDiv.textContent = geom.str;\n                    textDiv.dir = geom.dir;\n                    if (task._fontInspectorEnabled) textDiv.dataset.fontName = geom.fontName;\n                    if (angle !== 0) textDivProperties.angle = angle * (180 / Math.PI);\n                    let shouldScaleText = false;\n                    if (geom.str.length > 1) shouldScaleText = true;\n                    else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n                        const absScaleX = Math.abs(geom.transform[0]), absScaleY = Math.abs(geom.transform[3]);\n                        if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) shouldScaleText = true;\n                    }\n                    if (shouldScaleText) textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n                    task._textDivProperties.set(textDiv, textDivProperties);\n                    if (task._isReadableStream) task._layoutText(textDiv);\n                }\n                function layout(params) {\n                    const { div, scale, properties, ctx, prevFontSize, prevFontFamily } = params;\n                    const { style } = div;\n                    let transform = \"\";\n                    if (properties.canvasWidth !== 0 && properties.hasText) {\n                        const { fontFamily } = style;\n                        const { canvasWidth, fontSize } = properties;\n                        if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n                            ctx.font = `${fontSize * scale}px ${fontFamily}`;\n                            params.prevFontSize = fontSize;\n                            params.prevFontFamily = fontFamily;\n                        }\n                        const { width } = ctx.measureText(div.textContent);\n                        if (width > 0) transform = `scaleX(${canvasWidth * scale / width})`;\n                    }\n                    if (properties.angle !== 0) transform = `rotate(${properties.angle}deg) ${transform}`;\n                    if (transform.length > 0) style.transform = transform;\n                }\n                function render(task) {\n                    if (task._canceled) return;\n                    const textDivs = task._textDivs;\n                    const capability = task._capability;\n                    const textDivsLength = textDivs.length;\n                    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n                        capability.resolve();\n                        return;\n                    }\n                    if (!task._isReadableStream) for (const textDiv of textDivs)task._layoutText(textDiv);\n                    capability.resolve();\n                }\n                class TextLayerRenderTask {\n                    constructor({ textContentSource, container, viewport, textDivs, textDivProperties, textContentItemsStr, isOffscreenCanvasSupported }){\n                        this._textContentSource = textContentSource;\n                        this._isReadableStream = textContentSource instanceof ReadableStream;\n                        this._container = this._rootContainer = container;\n                        this._textDivs = textDivs || [];\n                        this._textContentItemsStr = textContentItemsStr || [];\n                        this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n                        this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n                        this._reader = null;\n                        this._textDivProperties = textDivProperties || new WeakMap();\n                        this._canceled = false;\n                        this._capability = new _util.PromiseCapability();\n                        this._layoutTextParams = {\n                            prevFontSize: null,\n                            prevFontFamily: null,\n                            div: null,\n                            scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n                            properties: null,\n                            ctx: getCtx(0, isOffscreenCanvasSupported)\n                        };\n                        const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n                        this._transform = [\n                            1,\n                            0,\n                            0,\n                            -1,\n                            -pageX,\n                            pageY + pageHeight\n                        ];\n                        this._pageWidth = pageWidth;\n                        this._pageHeight = pageHeight;\n                        (0, _display_utils.setLayerDimensions)(container, viewport);\n                        this._capability.promise.finally(()=>{\n                            this._layoutTextParams = null;\n                        }).catch(()=>{});\n                    }\n                    get promise() {\n                        return this._capability.promise;\n                    }\n                    cancel() {\n                        this._canceled = true;\n                        if (this._reader) {\n                            this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(()=>{});\n                            this._reader = null;\n                        }\n                        this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n                    }\n                    _processItems(items, styleCache) {\n                        for (const item of items){\n                            if (item.str === undefined) {\n                                if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n                                    const parent = this._container;\n                                    this._container = document.createElement(\"span\");\n                                    this._container.classList.add(\"markedContent\");\n                                    if (item.id !== null) this._container.setAttribute(\"id\", `${item.id}`);\n                                    parent.append(this._container);\n                                } else if (item.type === \"endMarkedContent\") this._container = this._container.parentNode;\n                                continue;\n                            }\n                            this._textContentItemsStr.push(item.str);\n                            appendText(this, item, styleCache);\n                        }\n                    }\n                    _layoutText(textDiv) {\n                        const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n                        this._layoutTextParams.div = textDiv;\n                        layout(this._layoutTextParams);\n                        if (textDivProperties.hasText) this._container.append(textDiv);\n                        if (textDivProperties.hasEOL) {\n                            const br = document.createElement(\"br\");\n                            br.setAttribute(\"role\", \"presentation\");\n                            this._container.append(br);\n                        }\n                    }\n                    _render() {\n                        const capability = new _util.PromiseCapability();\n                        let styleCache = Object.create(null);\n                        if (this._isReadableStream) {\n                            const pump = ()=>{\n                                this._reader.read().then(({ value, done })=>{\n                                    if (done) {\n                                        capability.resolve();\n                                        return;\n                                    }\n                                    Object.assign(styleCache, value.styles);\n                                    this._processItems(value.items, styleCache);\n                                    pump();\n                                }, capability.reject);\n                            };\n                            this._reader = this._textContentSource.getReader();\n                            pump();\n                        } else if (this._textContentSource) {\n                            const { items, styles } = this._textContentSource;\n                            this._processItems(items, styles);\n                            capability.resolve();\n                        } else throw new Error('No \"textContentSource\" parameter specified.');\n                        capability.promise.then(()=>{\n                            styleCache = null;\n                            render(this);\n                        }, this._capability.reject);\n                    }\n                }\n                exports.TextLayerRenderTask = TextLayerRenderTask;\n                function renderTextLayer(params) {\n                    if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n                        (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters will be removed in the future, please use `textContentSource` instead.\");\n                        params.textContentSource = params.textContent || params.textContentStream;\n                    }\n                    const { container, viewport } = params;\n                    const style = getComputedStyle(container);\n                    const visibility = style.getPropertyValue(\"visibility\");\n                    const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n                    if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) console.error(\"The `--scale-factor` CSS-variable must be set, to the same value as `viewport.scale`, either on the `container`-element itself or higher up in the DOM.\");\n                    const task = new TextLayerRenderTask(params);\n                    task._render();\n                    return task;\n                }\n                function updateTextLayer({ container, viewport, textDivs, textDivProperties, isOffscreenCanvasSupported, mustRotate = true, mustRescale = true }) {\n                    if (mustRotate) (0, _display_utils.setLayerDimensions)(container, {\n                        rotation: viewport.rotation\n                    });\n                    if (mustRescale) {\n                        const ctx = getCtx(0, isOffscreenCanvasSupported);\n                        const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n                        const params = {\n                            prevFontSize: null,\n                            prevFontFamily: null,\n                            div: null,\n                            scale: scale,\n                            properties: null,\n                            ctx: ctx\n                        };\n                        for (const div of textDivs){\n                            params.properties = textDivProperties.get(div);\n                            params.div = div;\n                            layout(params);\n                        }\n                    }\n                }\n            /***/ },\n            /* 27 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.AnnotationEditorLayer = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _editor = __w_pdfjs_require__(4);\n                var _freetext = __w_pdfjs_require__(28);\n                var _ink = __w_pdfjs_require__(33);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _stamp = __w_pdfjs_require__(34);\n                class AnnotationEditorLayer {\n                    #accessibilityManager;\n                    #allowClick = false;\n                    #annotationLayer = null;\n                    #boundPointerup = this.pointerup.bind(this);\n                    #boundPointerdown = this.pointerdown.bind(this);\n                    #editors = new Map();\n                    #hadPointerDown = false;\n                    #isCleaningUp = false;\n                    #isDisabling = false;\n                    #uiManager;\n                    static _initialized = false;\n                    constructor({ uiManager, pageIndex, div, accessibilityManager, annotationLayer, viewport, l10n }){\n                        const editorTypes = [\n                            _freetext.FreeTextEditor,\n                            _ink.InkEditor,\n                            _stamp.StampEditor\n                        ];\n                        if (!AnnotationEditorLayer._initialized) {\n                            AnnotationEditorLayer._initialized = true;\n                            for (const editorType of editorTypes)editorType.initialize(l10n);\n                        }\n                        uiManager.registerEditorTypes(editorTypes);\n                        this.#uiManager = uiManager;\n                        this.pageIndex = pageIndex;\n                        this.div = div;\n                        this.#accessibilityManager = accessibilityManager;\n                        this.#annotationLayer = annotationLayer;\n                        this.viewport = viewport;\n                        this.#uiManager.addLayer(this);\n                    }\n                    get isEmpty() {\n                        return this.#editors.size === 0;\n                    }\n                    updateToolbar(mode) {\n                        this.#uiManager.updateToolbar(mode);\n                    }\n                    updateMode(mode = this.#uiManager.getMode()) {\n                        this.#cleanup();\n                        if (mode === _util.AnnotationEditorType.INK) {\n                            this.addInkEditorIfNeeded(false);\n                            this.disableClick();\n                        } else this.enableClick();\n                        if (mode !== _util.AnnotationEditorType.NONE) {\n                            this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n                            this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n                            this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n                            this.div.hidden = false;\n                        }\n                    }\n                    addInkEditorIfNeeded(isCommitting) {\n                        if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) return;\n                        if (!isCommitting) {\n                            for (const editor of this.#editors.values())if (editor.isEmpty()) {\n                                editor.setInBackground();\n                                return;\n                            }\n                        }\n                        const editor = this.#createAndAddNewEditor({\n                            offsetX: 0,\n                            offsetY: 0\n                        }, false);\n                        editor.setInBackground();\n                    }\n                    setEditingState(isEditing) {\n                        this.#uiManager.setEditingState(isEditing);\n                    }\n                    addCommands(params) {\n                        this.#uiManager.addCommands(params);\n                    }\n                    enable() {\n                        this.div.style.pointerEvents = \"auto\";\n                        const annotationElementIds = new Set();\n                        for (const editor of this.#editors.values()){\n                            editor.enableEditing();\n                            if (editor.annotationElementId) annotationElementIds.add(editor.annotationElementId);\n                        }\n                        if (!this.#annotationLayer) return;\n                        const editables = this.#annotationLayer.getEditableAnnotations();\n                        for (const editable of editables){\n                            editable.hide();\n                            if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) continue;\n                            if (annotationElementIds.has(editable.data.id)) continue;\n                            const editor = this.deserialize(editable);\n                            if (!editor) continue;\n                            this.addOrRebuild(editor);\n                            editor.enableEditing();\n                        }\n                    }\n                    disable() {\n                        this.#isDisabling = true;\n                        this.div.style.pointerEvents = \"none\";\n                        const hiddenAnnotationIds = new Set();\n                        for (const editor of this.#editors.values()){\n                            editor.disableEditing();\n                            if (!editor.annotationElementId || editor.serialize() !== null) {\n                                hiddenAnnotationIds.add(editor.annotationElementId);\n                                continue;\n                            }\n                            this.getEditableAnnotation(editor.annotationElementId)?.show();\n                            editor.remove();\n                        }\n                        if (this.#annotationLayer) {\n                            const editables = this.#annotationLayer.getEditableAnnotations();\n                            for (const editable of editables){\n                                const { id } = editable.data;\n                                if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) continue;\n                                editable.show();\n                            }\n                        }\n                        this.#cleanup();\n                        if (this.isEmpty) this.div.hidden = true;\n                        this.#isDisabling = false;\n                    }\n                    getEditableAnnotation(id) {\n                        return this.#annotationLayer?.getEditableAnnotation(id) || null;\n                    }\n                    setActiveEditor(editor) {\n                        const currentActive = this.#uiManager.getActive();\n                        if (currentActive === editor) return;\n                        this.#uiManager.setActiveEditor(editor);\n                    }\n                    enableClick() {\n                        this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n                        this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n                    }\n                    disableClick() {\n                        this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n                        this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n                    }\n                    attach(editor) {\n                        this.#editors.set(editor.id, editor);\n                        const { annotationElementId } = editor;\n                        if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) this.#uiManager.removeDeletedAnnotationElement(editor);\n                    }\n                    detach(editor) {\n                        this.#editors.delete(editor.id);\n                        this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n                        if (!this.#isDisabling && editor.annotationElementId) this.#uiManager.addDeletedAnnotationElement(editor);\n                    }\n                    remove(editor) {\n                        this.detach(editor);\n                        this.#uiManager.removeEditor(editor);\n                        if (editor.div.contains(document.activeElement)) setTimeout(()=>{\n                            this.#uiManager.focusMainContainer();\n                        }, 0);\n                        editor.div.remove();\n                        editor.isAttachedToDOM = false;\n                        if (!this.#isCleaningUp) this.addInkEditorIfNeeded(false);\n                    }\n                    changeParent(editor) {\n                        if (editor.parent === this) return;\n                        if (editor.annotationElementId) {\n                            this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n                            _editor.AnnotationEditor.deleteAnnotationElement(editor);\n                            editor.annotationElementId = null;\n                        }\n                        this.attach(editor);\n                        editor.parent?.detach(editor);\n                        editor.setParent(this);\n                        if (editor.div && editor.isAttachedToDOM) {\n                            editor.div.remove();\n                            this.div.append(editor.div);\n                        }\n                    }\n                    add(editor) {\n                        this.changeParent(editor);\n                        this.#uiManager.addEditor(editor);\n                        this.attach(editor);\n                        if (!editor.isAttachedToDOM) {\n                            const div = editor.render();\n                            this.div.append(div);\n                            editor.isAttachedToDOM = true;\n                        }\n                        editor.fixAndSetPosition();\n                        editor.onceAdded();\n                        this.#uiManager.addToAnnotationStorage(editor);\n                    }\n                    moveEditorInDOM(editor) {\n                        if (!editor.isAttachedToDOM) return;\n                        const { activeElement } = document;\n                        if (editor.div.contains(activeElement)) {\n                            editor._focusEventsAllowed = false;\n                            setTimeout(()=>{\n                                if (!editor.div.contains(document.activeElement)) {\n                                    editor.div.addEventListener(\"focusin\", ()=>{\n                                        editor._focusEventsAllowed = true;\n                                    }, {\n                                        once: true\n                                    });\n                                    activeElement.focus();\n                                } else editor._focusEventsAllowed = true;\n                            }, 0);\n                        }\n                        editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n                    }\n                    addOrRebuild(editor) {\n                        if (editor.needsToBeRebuilt()) editor.rebuild();\n                        else this.add(editor);\n                    }\n                    addUndoableEditor(editor) {\n                        const cmd = ()=>editor._uiManager.rebuild(editor);\n                        const undo = ()=>{\n                            editor.remove();\n                        };\n                        this.addCommands({\n                            cmd: cmd,\n                            undo: undo,\n                            mustExec: false\n                        });\n                    }\n                    getNextId() {\n                        return this.#uiManager.getId();\n                    }\n                    #createNewEditor(params) {\n                        switch(this.#uiManager.getMode()){\n                            case _util.AnnotationEditorType.FREETEXT:\n                                return new _freetext.FreeTextEditor(params);\n                            case _util.AnnotationEditorType.INK:\n                                return new _ink.InkEditor(params);\n                            case _util.AnnotationEditorType.STAMP:\n                                return new _stamp.StampEditor(params);\n                        }\n                        return null;\n                    }\n                    pasteEditor(mode, params) {\n                        this.#uiManager.updateToolbar(mode);\n                        this.#uiManager.updateMode(mode);\n                        const { offsetX, offsetY } = this.#getCenterPoint();\n                        const id = this.getNextId();\n                        const editor = this.#createNewEditor({\n                            parent: this,\n                            id: id,\n                            x: offsetX,\n                            y: offsetY,\n                            uiManager: this.#uiManager,\n                            isCentered: true,\n                            ...params\n                        });\n                        if (editor) this.add(editor);\n                    }\n                    deserialize(data) {\n                        switch(data.annotationType ?? data.annotationEditorType){\n                            case _util.AnnotationEditorType.FREETEXT:\n                                return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n                            case _util.AnnotationEditorType.INK:\n                                return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n                            case _util.AnnotationEditorType.STAMP:\n                                return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n                        }\n                        return null;\n                    }\n                    #createAndAddNewEditor(event, isCentered) {\n                        const id = this.getNextId();\n                        const editor = this.#createNewEditor({\n                            parent: this,\n                            id: id,\n                            x: event.offsetX,\n                            y: event.offsetY,\n                            uiManager: this.#uiManager,\n                            isCentered: isCentered\n                        });\n                        if (editor) this.add(editor);\n                        return editor;\n                    }\n                    #getCenterPoint() {\n                        const { x, y, width, height } = this.div.getBoundingClientRect();\n                        const tlX = Math.max(0, x);\n                        const tlY = Math.max(0, y);\n                        const brX = Math.min(window.innerWidth, x + width);\n                        const brY = Math.min(window.innerHeight, y + height);\n                        const centerX = (tlX + brX) / 2 - x;\n                        const centerY = (tlY + brY) / 2 - y;\n                        const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [\n                            centerX,\n                            centerY\n                        ] : [\n                            centerY,\n                            centerX\n                        ];\n                        return {\n                            offsetX: offsetX,\n                            offsetY: offsetY\n                        };\n                    }\n                    addNewEditor() {\n                        this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n                    }\n                    setSelected(editor) {\n                        this.#uiManager.setSelected(editor);\n                    }\n                    toggleSelected(editor) {\n                        this.#uiManager.toggleSelected(editor);\n                    }\n                    isSelected(editor) {\n                        return this.#uiManager.isSelected(editor);\n                    }\n                    unselect(editor) {\n                        this.#uiManager.unselect(editor);\n                    }\n                    pointerup(event) {\n                        const { isMac } = _util.FeatureTest.platform;\n                        if (event.button !== 0 || event.ctrlKey && isMac) return;\n                        if (event.target !== this.div) return;\n                        if (!this.#hadPointerDown) return;\n                        this.#hadPointerDown = false;\n                        if (!this.#allowClick) {\n                            this.#allowClick = true;\n                            return;\n                        }\n                        if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n                            this.#uiManager.unselectAll();\n                            return;\n                        }\n                        this.#createAndAddNewEditor(event, false);\n                    }\n                    pointerdown(event) {\n                        if (this.#hadPointerDown) {\n                            this.#hadPointerDown = false;\n                            return;\n                        }\n                        const { isMac } = _util.FeatureTest.platform;\n                        if (event.button !== 0 || event.ctrlKey && isMac) return;\n                        if (event.target !== this.div) return;\n                        this.#hadPointerDown = true;\n                        const editor = this.#uiManager.getActive();\n                        this.#allowClick = !editor || editor.isEmpty();\n                    }\n                    findNewParent(editor, x, y) {\n                        const layer = this.#uiManager.findParent(x, y);\n                        if (layer === null || layer === this) return false;\n                        layer.changeParent(editor);\n                        return true;\n                    }\n                    destroy() {\n                        if (this.#uiManager.getActive()?.parent === this) {\n                            this.#uiManager.commitOrRemove();\n                            this.#uiManager.setActiveEditor(null);\n                        }\n                        for (const editor of this.#editors.values()){\n                            this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n                            editor.setParent(null);\n                            editor.isAttachedToDOM = false;\n                            editor.div.remove();\n                        }\n                        this.div = null;\n                        this.#editors.clear();\n                        this.#uiManager.removeLayer(this);\n                    }\n                    #cleanup() {\n                        this.#isCleaningUp = true;\n                        for (const editor of this.#editors.values())if (editor.isEmpty()) editor.remove();\n                        this.#isCleaningUp = false;\n                    }\n                    render({ viewport }) {\n                        this.viewport = viewport;\n                        (0, _display_utils.setLayerDimensions)(this.div, viewport);\n                        for (const editor of this.#uiManager.getEditors(this.pageIndex))this.add(editor);\n                        this.updateMode();\n                    }\n                    update({ viewport }) {\n                        this.#uiManager.commitOrRemove();\n                        this.viewport = viewport;\n                        (0, _display_utils.setLayerDimensions)(this.div, {\n                            rotation: viewport.rotation\n                        });\n                        this.updateMode();\n                    }\n                    get pageDimensions() {\n                        const { pageWidth, pageHeight } = this.viewport.rawDims;\n                        return [\n                            pageWidth,\n                            pageHeight\n                        ];\n                    }\n                }\n                exports.AnnotationEditorLayer = AnnotationEditorLayer;\n            /***/ },\n            /* 28 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.FreeTextEditor = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _tools = __w_pdfjs_require__(5);\n                var _editor = __w_pdfjs_require__(4);\n                var _annotation_layer = __w_pdfjs_require__(29);\n                class FreeTextEditor extends _editor.AnnotationEditor {\n                    #boundEditorDivBlur = this.editorDivBlur.bind(this);\n                    #boundEditorDivFocus = this.editorDivFocus.bind(this);\n                    #boundEditorDivInput = this.editorDivInput.bind(this);\n                    #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n                    #color;\n                    #content = \"\";\n                    #editorDivId = `${this.id}-editor`;\n                    #fontSize;\n                    #initialData = null;\n                    static _freeTextDefaultContent = \"\";\n                    static _internalPadding = 0;\n                    static _defaultColor = null;\n                    static _defaultFontSize = 10;\n                    static get _keyboardManager() {\n                        const proto = FreeTextEditor.prototype;\n                        const arrowChecker = (self)=>self.isEmpty();\n                        const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n                        const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n                        return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([\n                            [\n                                [\n                                    \"ctrl+s\",\n                                    \"mac+meta+s\",\n                                    \"ctrl+p\",\n                                    \"mac+meta+p\"\n                                ],\n                                proto.commitOrRemove,\n                                {\n                                    bubbles: true\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+Enter\",\n                                    \"mac+meta+Enter\",\n                                    \"Escape\",\n                                    \"mac+Escape\"\n                                ],\n                                proto.commitOrRemove\n                            ],\n                            [\n                                [\n                                    \"ArrowLeft\",\n                                    \"mac+ArrowLeft\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        -small,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowLeft\",\n                                    \"mac+shift+ArrowLeft\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        -big,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowRight\",\n                                    \"mac+ArrowRight\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        small,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowRight\",\n                                    \"mac+shift+ArrowRight\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        big,\n                                        0\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowUp\",\n                                    \"mac+ArrowUp\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        0,\n                                        -small\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowUp\",\n                                    \"mac+shift+ArrowUp\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        0,\n                                        -big\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ArrowDown\",\n                                    \"mac+ArrowDown\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        0,\n                                        small\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ],\n                            [\n                                [\n                                    \"ctrl+ArrowDown\",\n                                    \"mac+shift+ArrowDown\"\n                                ],\n                                proto._translateEmpty,\n                                {\n                                    args: [\n                                        0,\n                                        big\n                                    ],\n                                    checker: arrowChecker\n                                }\n                            ]\n                        ]));\n                    }\n                    static _type = \"freetext\";\n                    constructor(params){\n                        super({\n                            ...params,\n                            name: \"freeTextEditor\"\n                        });\n                        this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n                        this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n                    }\n                    static initialize(l10n) {\n                        _editor.AnnotationEditor.initialize(l10n, {\n                            strings: [\n                                \"free_text2_default_content\",\n                                \"editor_free_text2_aria_label\"\n                            ]\n                        });\n                        const style = getComputedStyle(document.documentElement);\n                        this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n                    }\n                    static updateDefaultParams(type, value) {\n                        switch(type){\n                            case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                                FreeTextEditor._defaultFontSize = value;\n                                break;\n                            case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                                FreeTextEditor._defaultColor = value;\n                                break;\n                        }\n                    }\n                    updateParams(type, value) {\n                        switch(type){\n                            case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                                this.#updateFontSize(value);\n                                break;\n                            case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                                this.#updateColor(value);\n                                break;\n                        }\n                    }\n                    static get defaultPropertiesToUpdate() {\n                        return [\n                            [\n                                _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n                                FreeTextEditor._defaultFontSize\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n                                FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor\n                            ]\n                        ];\n                    }\n                    get propertiesToUpdate() {\n                        return [\n                            [\n                                _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n                                this.#fontSize\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n                                this.#color\n                            ]\n                        ];\n                    }\n                    #updateFontSize(fontSize) {\n                        const setFontsize = (size)=>{\n                            this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n                            this.translate(0, -(size - this.#fontSize) * this.parentScale);\n                            this.#fontSize = size;\n                            this.#setEditorDimensions();\n                        };\n                        const savedFontsize = this.#fontSize;\n                        this.addCommands({\n                            cmd: ()=>{\n                                setFontsize(fontSize);\n                            },\n                            undo: ()=>{\n                                setFontsize(savedFontsize);\n                            },\n                            mustExec: true,\n                            type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n                            overwriteIfSameType: true,\n                            keepUndo: true\n                        });\n                    }\n                    #updateColor(color) {\n                        const savedColor = this.#color;\n                        this.addCommands({\n                            cmd: ()=>{\n                                this.#color = this.editorDiv.style.color = color;\n                            },\n                            undo: ()=>{\n                                this.#color = this.editorDiv.style.color = savedColor;\n                            },\n                            mustExec: true,\n                            type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n                            overwriteIfSameType: true,\n                            keepUndo: true\n                        });\n                    }\n                    _translateEmpty(x, y) {\n                        this._uiManager.translateSelectedEditors(x, y, true);\n                    }\n                    getInitialTranslation() {\n                        const scale = this.parentScale;\n                        return [\n                            -FreeTextEditor._internalPadding * scale,\n                            -(FreeTextEditor._internalPadding + this.#fontSize) * scale\n                        ];\n                    }\n                    rebuild() {\n                        if (!this.parent) return;\n                        super.rebuild();\n                        if (this.div === null) return;\n                        if (!this.isAttachedToDOM) this.parent.add(this);\n                    }\n                    enableEditMode() {\n                        if (this.isInEditMode()) return;\n                        this.parent.setEditingState(false);\n                        this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n                        super.enableEditMode();\n                        this.overlayDiv.classList.remove(\"enabled\");\n                        this.editorDiv.contentEditable = true;\n                        this._isDraggable = false;\n                        this.div.removeAttribute(\"aria-activedescendant\");\n                        this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n                        this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n                        this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n                        this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n                    }\n                    disableEditMode() {\n                        if (!this.isInEditMode()) return;\n                        this.parent.setEditingState(true);\n                        super.disableEditMode();\n                        this.overlayDiv.classList.add(\"enabled\");\n                        this.editorDiv.contentEditable = false;\n                        this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n                        this._isDraggable = true;\n                        this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n                        this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n                        this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n                        this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n                        this.div.focus({\n                            preventScroll: true\n                        });\n                        this.isEditing = false;\n                        this.parent.div.classList.add(\"freeTextEditing\");\n                    }\n                    focusin(event) {\n                        if (!this._focusEventsAllowed) return;\n                        super.focusin(event);\n                        if (event.target !== this.editorDiv) this.editorDiv.focus();\n                    }\n                    onceAdded() {\n                        if (this.width) {\n                            this.#cheatInitialRect();\n                            return;\n                        }\n                        this.enableEditMode();\n                        this.editorDiv.focus();\n                        if (this._initialOptions?.isCentered) this.center();\n                        this._initialOptions = null;\n                    }\n                    isEmpty() {\n                        return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n                    }\n                    remove() {\n                        this.isEditing = false;\n                        if (this.parent) {\n                            this.parent.setEditingState(true);\n                            this.parent.div.classList.add(\"freeTextEditing\");\n                        }\n                        super.remove();\n                    }\n                    #extractText() {\n                        const divs = this.editorDiv.getElementsByTagName(\"div\");\n                        if (divs.length === 0) return this.editorDiv.innerText;\n                        const buffer = [];\n                        for (const div of divs)buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n                        return buffer.join(\"\\n\");\n                    }\n                    #setEditorDimensions() {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        let rect;\n                        if (this.isAttachedToDOM) rect = this.div.getBoundingClientRect();\n                        else {\n                            const { currentLayer, div } = this;\n                            const savedDisplay = div.style.display;\n                            div.style.display = \"hidden\";\n                            currentLayer.div.append(this.div);\n                            rect = div.getBoundingClientRect();\n                            div.remove();\n                            div.style.display = savedDisplay;\n                        }\n                        if (this.rotation % 180 === this.parentRotation % 180) {\n                            this.width = rect.width / parentWidth;\n                            this.height = rect.height / parentHeight;\n                        } else {\n                            this.width = rect.height / parentWidth;\n                            this.height = rect.width / parentHeight;\n                        }\n                        this.fixAndSetPosition();\n                    }\n                    commit() {\n                        if (!this.isInEditMode()) return;\n                        super.commit();\n                        this.disableEditMode();\n                        const savedText = this.#content;\n                        const newText = this.#content = this.#extractText().trimEnd();\n                        if (savedText === newText) return;\n                        const setText = (text)=>{\n                            this.#content = text;\n                            if (!text) {\n                                this.remove();\n                                return;\n                            }\n                            this.#setContent();\n                            this._uiManager.rebuild(this);\n                            this.#setEditorDimensions();\n                        };\n                        this.addCommands({\n                            cmd: ()=>{\n                                setText(newText);\n                            },\n                            undo: ()=>{\n                                setText(savedText);\n                            },\n                            mustExec: false\n                        });\n                        this.#setEditorDimensions();\n                    }\n                    shouldGetKeyboardEvents() {\n                        return this.isInEditMode();\n                    }\n                    enterInEditMode() {\n                        this.enableEditMode();\n                        this.editorDiv.focus();\n                    }\n                    dblclick(event) {\n                        this.enterInEditMode();\n                    }\n                    keydown(event) {\n                        if (event.target === this.div && event.key === \"Enter\") {\n                            this.enterInEditMode();\n                            event.preventDefault();\n                        }\n                    }\n                    editorDivKeydown(event) {\n                        FreeTextEditor._keyboardManager.exec(this, event);\n                    }\n                    editorDivFocus(event) {\n                        this.isEditing = true;\n                    }\n                    editorDivBlur(event) {\n                        this.isEditing = false;\n                    }\n                    editorDivInput(event) {\n                        this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n                    }\n                    disableEditing() {\n                        this.editorDiv.setAttribute(\"role\", \"comment\");\n                        this.editorDiv.removeAttribute(\"aria-multiline\");\n                    }\n                    enableEditing() {\n                        this.editorDiv.setAttribute(\"role\", \"textbox\");\n                        this.editorDiv.setAttribute(\"aria-multiline\", true);\n                    }\n                    render() {\n                        if (this.div) return this.div;\n                        let baseX, baseY;\n                        if (this.width) {\n                            baseX = this.x;\n                            baseY = this.y;\n                        }\n                        super.render();\n                        this.editorDiv = document.createElement(\"div\");\n                        this.editorDiv.className = \"internal\";\n                        this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n                        this.enableEditing();\n                        _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then((msg)=>this.editorDiv?.setAttribute(\"aria-label\", msg));\n                        _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then((msg)=>this.editorDiv?.setAttribute(\"default-content\", msg));\n                        this.editorDiv.contentEditable = true;\n                        const { style } = this.editorDiv;\n                        style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n                        style.color = this.#color;\n                        this.div.append(this.editorDiv);\n                        this.overlayDiv = document.createElement(\"div\");\n                        this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n                        this.div.append(this.overlayDiv);\n                        (0, _tools.bindEvents)(this, this.div, [\n                            \"dblclick\",\n                            \"keydown\"\n                        ]);\n                        if (this.width) {\n                            const [parentWidth, parentHeight] = this.parentDimensions;\n                            if (this.annotationElementId) {\n                                const { position } = this.#initialData;\n                                let [tx, ty] = this.getInitialTranslation();\n                                [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                                const [pageWidth, pageHeight] = this.pageDimensions;\n                                const [pageX, pageY] = this.pageTranslation;\n                                let posX, posY;\n                                switch(this.rotation){\n                                    case 0:\n                                        posX = baseX + (position[0] - pageX) / pageWidth;\n                                        posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                                        break;\n                                    case 90:\n                                        posX = baseX + (position[0] - pageX) / pageWidth;\n                                        posY = baseY - (position[1] - pageY) / pageHeight;\n                                        [tx, ty] = [\n                                            ty,\n                                            -tx\n                                        ];\n                                        break;\n                                    case 180:\n                                        posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                                        posY = baseY - (position[1] - pageY) / pageHeight;\n                                        [tx, ty] = [\n                                            -tx,\n                                            -ty\n                                        ];\n                                        break;\n                                    case 270:\n                                        posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                                        posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                                        [tx, ty] = [\n                                            -ty,\n                                            tx\n                                        ];\n                                        break;\n                                }\n                                this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n                            } else this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n                            this.#setContent();\n                            this._isDraggable = true;\n                            this.editorDiv.contentEditable = false;\n                        } else {\n                            this._isDraggable = false;\n                            this.editorDiv.contentEditable = true;\n                        }\n                        return this.div;\n                    }\n                    #setContent() {\n                        this.editorDiv.replaceChildren();\n                        if (!this.#content) return;\n                        for (const line of this.#content.split(\"\\n\")){\n                            const div = document.createElement(\"div\");\n                            div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n                            this.editorDiv.append(div);\n                        }\n                    }\n                    get contentDiv() {\n                        return this.editorDiv;\n                    }\n                    static deserialize(data, parent, uiManager) {\n                        let initialData = null;\n                        if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n                            const { data: { defaultAppearanceData: { fontSize, fontColor }, rect, rotation, id }, textContent, textPosition, parent: { page: { pageNumber } } } = data;\n                            if (!textContent || textContent.length === 0) return null;\n                            initialData = data = {\n                                annotationType: _util.AnnotationEditorType.FREETEXT,\n                                color: Array.from(fontColor),\n                                fontSize: fontSize,\n                                value: textContent.join(\"\\n\"),\n                                position: textPosition,\n                                pageIndex: pageNumber - 1,\n                                rect: rect,\n                                rotation: rotation,\n                                id: id,\n                                deleted: false\n                            };\n                        }\n                        const editor = super.deserialize(data, parent, uiManager);\n                        editor.#fontSize = data.fontSize;\n                        editor.#color = _util.Util.makeHexColor(...data.color);\n                        editor.#content = data.value;\n                        editor.annotationElementId = data.id || null;\n                        editor.#initialData = initialData;\n                        return editor;\n                    }\n                    serialize(isForCopying = false) {\n                        if (this.isEmpty()) return null;\n                        if (this.deleted) return {\n                            pageIndex: this.pageIndex,\n                            id: this.annotationElementId,\n                            deleted: true\n                        };\n                        const padding = FreeTextEditor._internalPadding * this.parentScale;\n                        const rect = this.getRect(padding, padding);\n                        const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n                        const serialized = {\n                            annotationType: _util.AnnotationEditorType.FREETEXT,\n                            color: color,\n                            fontSize: this.#fontSize,\n                            value: this.#content,\n                            pageIndex: this.pageIndex,\n                            rect: rect,\n                            rotation: this.rotation,\n                            structTreeParentId: this._structTreeParentId\n                        };\n                        if (isForCopying) return serialized;\n                        if (this.annotationElementId && !this.#hasElementChanged(serialized)) return null;\n                        serialized.id = this.annotationElementId;\n                        return serialized;\n                    }\n                    #hasElementChanged(serialized) {\n                        const { value, fontSize, color, rect, pageIndex } = this.#initialData;\n                        return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i)=>Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i)=>c !== color[i]) || serialized.pageIndex !== pageIndex;\n                    }\n                    #cheatInitialRect(delayed = false) {\n                        if (!this.annotationElementId) return;\n                        this.#setEditorDimensions();\n                        if (!delayed && (this.width === 0 || this.height === 0)) {\n                            setTimeout(()=>this.#cheatInitialRect(true), 0);\n                            return;\n                        }\n                        const padding = FreeTextEditor._internalPadding * this.parentScale;\n                        this.#initialData.rect = this.getRect(padding, padding);\n                    }\n                }\n                exports.FreeTextEditor = FreeTextEditor;\n            /***/ },\n            /* 29 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _annotation_storage = __w_pdfjs_require__(3);\n                var _scripting_utils = __w_pdfjs_require__(30);\n                var _displayL10n_utils = __w_pdfjs_require__(31);\n                var _xfa_layer = __w_pdfjs_require__(32);\n                const DEFAULT_TAB_INDEX = 1000;\n                const DEFAULT_FONT_SIZE = 9;\n                const GetElementsByNameSet = new WeakSet();\n                function getRectDims(rect) {\n                    return {\n                        width: rect[2] - rect[0],\n                        height: rect[3] - rect[1]\n                    };\n                }\n                class AnnotationElementFactory {\n                    static create(parameters) {\n                        const subtype = parameters.data.annotationType;\n                        switch(subtype){\n                            case _util.AnnotationType.LINK:\n                                return new LinkAnnotationElement(parameters);\n                            case _util.AnnotationType.TEXT:\n                                return new TextAnnotationElement(parameters);\n                            case _util.AnnotationType.WIDGET:\n                                const fieldType = parameters.data.fieldType;\n                                switch(fieldType){\n                                    case \"Tx\":\n                                        return new TextWidgetAnnotationElement(parameters);\n                                    case \"Btn\":\n                                        if (parameters.data.radioButton) return new RadioButtonWidgetAnnotationElement(parameters);\n                                        else if (parameters.data.checkBox) return new CheckboxWidgetAnnotationElement(parameters);\n                                        return new PushButtonWidgetAnnotationElement(parameters);\n                                    case \"Ch\":\n                                        return new ChoiceWidgetAnnotationElement(parameters);\n                                    case \"Sig\":\n                                        return new SignatureWidgetAnnotationElement(parameters);\n                                }\n                                return new WidgetAnnotationElement(parameters);\n                            case _util.AnnotationType.POPUP:\n                                return new PopupAnnotationElement(parameters);\n                            case _util.AnnotationType.FREETEXT:\n                                return new FreeTextAnnotationElement(parameters);\n                            case _util.AnnotationType.LINE:\n                                return new LineAnnotationElement(parameters);\n                            case _util.AnnotationType.SQUARE:\n                                return new SquareAnnotationElement(parameters);\n                            case _util.AnnotationType.CIRCLE:\n                                return new CircleAnnotationElement(parameters);\n                            case _util.AnnotationType.POLYLINE:\n                                return new PolylineAnnotationElement(parameters);\n                            case _util.AnnotationType.CARET:\n                                return new CaretAnnotationElement(parameters);\n                            case _util.AnnotationType.INK:\n                                return new InkAnnotationElement(parameters);\n                            case _util.AnnotationType.POLYGON:\n                                return new PolygonAnnotationElement(parameters);\n                            case _util.AnnotationType.HIGHLIGHT:\n                                return new HighlightAnnotationElement(parameters);\n                            case _util.AnnotationType.UNDERLINE:\n                                return new UnderlineAnnotationElement(parameters);\n                            case _util.AnnotationType.SQUIGGLY:\n                                return new SquigglyAnnotationElement(parameters);\n                            case _util.AnnotationType.STRIKEOUT:\n                                return new StrikeOutAnnotationElement(parameters);\n                            case _util.AnnotationType.STAMP:\n                                return new StampAnnotationElement(parameters);\n                            case _util.AnnotationType.FILEATTACHMENT:\n                                return new FileAttachmentAnnotationElement(parameters);\n                            default:\n                                return new AnnotationElement(parameters);\n                        }\n                    }\n                }\n                class AnnotationElement {\n                    #hasBorder = false;\n                    constructor(parameters, { isRenderable = false, ignoreBorder = false, createQuadrilaterals = false } = {}){\n                        this.isRenderable = isRenderable;\n                        this.data = parameters.data;\n                        this.layer = parameters.layer;\n                        this.linkService = parameters.linkService;\n                        this.downloadManager = parameters.downloadManager;\n                        this.imageResourcesPath = parameters.imageResourcesPath;\n                        this.renderForms = parameters.renderForms;\n                        this.svgFactory = parameters.svgFactory;\n                        this.annotationStorage = parameters.annotationStorage;\n                        this.enableScripting = parameters.enableScripting;\n                        this.hasJSActions = parameters.hasJSActions;\n                        this._fieldObjects = parameters.fieldObjects;\n                        this.parent = parameters.parent;\n                        if (isRenderable) this.container = this._createContainer(ignoreBorder);\n                        if (createQuadrilaterals) this._createQuadrilaterals();\n                    }\n                    static _hasPopupData({ titleObj, contentsObj, richText }) {\n                        return !!(titleObj?.str || contentsObj?.str || richText?.str);\n                    }\n                    get hasPopupData() {\n                        return AnnotationElement._hasPopupData(this.data);\n                    }\n                    _createContainer(ignoreBorder) {\n                        const { data, parent: { page, viewport } } = this;\n                        const container = document.createElement(\"section\");\n                        container.setAttribute(\"data-annotation-id\", data.id);\n                        if (!(this instanceof WidgetAnnotationElement)) container.tabIndex = DEFAULT_TAB_INDEX;\n                        container.style.zIndex = this.parent.zIndex++;\n                        if (this.data.popupRef) container.setAttribute(\"aria-haspopup\", \"dialog\");\n                        if (data.noRotate) container.classList.add(\"norotate\");\n                        const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n                        if (!data.rect || this instanceof PopupAnnotationElement) {\n                            const { rotation } = data;\n                            if (!data.hasOwnCanvas && rotation !== 0) this.setRotation(rotation, container);\n                            return container;\n                        }\n                        const { width, height } = getRectDims(data.rect);\n                        const rect = _util.Util.normalizeRect([\n                            data.rect[0],\n                            page.view[3] - data.rect[1] + page.view[1],\n                            data.rect[2],\n                            page.view[3] - data.rect[3] + page.view[1]\n                        ]);\n                        if (!ignoreBorder && data.borderStyle.width > 0) {\n                            container.style.borderWidth = `${data.borderStyle.width}px`;\n                            const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n                            const verticalRadius = data.borderStyle.verticalCornerRadius;\n                            if (horizontalRadius > 0 || verticalRadius > 0) {\n                                const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                                container.style.borderRadius = radius;\n                            } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                                const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                                container.style.borderRadius = radius;\n                            }\n                            switch(data.borderStyle.style){\n                                case _util.AnnotationBorderStyleType.SOLID:\n                                    container.style.borderStyle = \"solid\";\n                                    break;\n                                case _util.AnnotationBorderStyleType.DASHED:\n                                    container.style.borderStyle = \"dashed\";\n                                    break;\n                                case _util.AnnotationBorderStyleType.BEVELED:\n                                    (0, _util.warn)(\"Unimplemented border style: beveled\");\n                                    break;\n                                case _util.AnnotationBorderStyleType.INSET:\n                                    (0, _util.warn)(\"Unimplemented border style: inset\");\n                                    break;\n                                case _util.AnnotationBorderStyleType.UNDERLINE:\n                                    container.style.borderBottomStyle = \"solid\";\n                                    break;\n                                default:\n                                    break;\n                            }\n                            const borderColor = data.borderColor || null;\n                            if (borderColor) {\n                                this.#hasBorder = true;\n                                container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n                            } else container.style.borderWidth = 0;\n                        }\n                        container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n                        container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n                        const { rotation } = data;\n                        if (data.hasOwnCanvas || rotation === 0) {\n                            container.style.width = `${100 * width / pageWidth}%`;\n                            container.style.height = `${100 * height / pageHeight}%`;\n                        } else this.setRotation(rotation, container);\n                        return container;\n                    }\n                    setRotation(angle, container = this.container) {\n                        if (!this.data.rect) return;\n                        const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n                        const { width, height } = getRectDims(this.data.rect);\n                        let elementWidth, elementHeight;\n                        if (angle % 180 === 0) {\n                            elementWidth = 100 * width / pageWidth;\n                            elementHeight = 100 * height / pageHeight;\n                        } else {\n                            elementWidth = 100 * height / pageWidth;\n                            elementHeight = 100 * width / pageHeight;\n                        }\n                        container.style.width = `${elementWidth}%`;\n                        container.style.height = `${elementHeight}%`;\n                        container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n                    }\n                    get _commonActions() {\n                        const setColor = (jsName, styleName, event)=>{\n                            const color = event.detail[jsName];\n                            const colorType = color[0];\n                            const colorArray = color.slice(1);\n                            event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n                            this.annotationStorage.setValue(this.data.id, {\n                                [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n                            });\n                        };\n                        return (0, _util.shadow)(this, \"_commonActions\", {\n                            display: (event)=>{\n                                const { display } = event.detail;\n                                const hidden = display % 2 === 1;\n                                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                                this.annotationStorage.setValue(this.data.id, {\n                                    noView: hidden,\n                                    noPrint: display === 1 || display === 2\n                                });\n                            },\n                            print: (event)=>{\n                                this.annotationStorage.setValue(this.data.id, {\n                                    noPrint: !event.detail.print\n                                });\n                            },\n                            hidden: (event)=>{\n                                const { hidden } = event.detail;\n                                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                                this.annotationStorage.setValue(this.data.id, {\n                                    noPrint: hidden,\n                                    noView: hidden\n                                });\n                            },\n                            focus: (event)=>{\n                                setTimeout(()=>event.target.focus({\n                                        preventScroll: false\n                                    }), 0);\n                            },\n                            userName: (event)=>{\n                                event.target.title = event.detail.userName;\n                            },\n                            readonly: (event)=>{\n                                event.target.disabled = event.detail.readonly;\n                            },\n                            required: (event)=>{\n                                this._setRequired(event.target, event.detail.required);\n                            },\n                            bgColor: (event)=>{\n                                setColor(\"bgColor\", \"backgroundColor\", event);\n                            },\n                            fillColor: (event)=>{\n                                setColor(\"fillColor\", \"backgroundColor\", event);\n                            },\n                            fgColor: (event)=>{\n                                setColor(\"fgColor\", \"color\", event);\n                            },\n                            textColor: (event)=>{\n                                setColor(\"textColor\", \"color\", event);\n                            },\n                            borderColor: (event)=>{\n                                setColor(\"borderColor\", \"borderColor\", event);\n                            },\n                            strokeColor: (event)=>{\n                                setColor(\"strokeColor\", \"borderColor\", event);\n                            },\n                            rotation: (event)=>{\n                                const angle = event.detail.rotation;\n                                this.setRotation(angle);\n                                this.annotationStorage.setValue(this.data.id, {\n                                    rotation: angle\n                                });\n                            }\n                        });\n                    }\n                    _dispatchEventFromSandbox(actions, jsEvent) {\n                        const commonActions = this._commonActions;\n                        for (const name of Object.keys(jsEvent.detail)){\n                            const action = actions[name] || commonActions[name];\n                            action?.(jsEvent);\n                        }\n                    }\n                    _setDefaultPropertiesFromJS(element) {\n                        if (!this.enableScripting) return;\n                        const storedData = this.annotationStorage.getRawValue(this.data.id);\n                        if (!storedData) return;\n                        const commonActions = this._commonActions;\n                        for (const [actionName, detail] of Object.entries(storedData)){\n                            const action = commonActions[actionName];\n                            if (action) {\n                                const eventProxy = {\n                                    detail: {\n                                        [actionName]: detail\n                                    },\n                                    target: element\n                                };\n                                action(eventProxy);\n                                delete storedData[actionName];\n                            }\n                        }\n                    }\n                    _createQuadrilaterals() {\n                        if (!this.container) return;\n                        const { quadPoints } = this.data;\n                        if (!quadPoints) return;\n                        const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n                        if (quadPoints.length === 1) {\n                            const [, { x: trX, y: trY }, { x: blX, y: blY }] = quadPoints[0];\n                            if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) return;\n                        }\n                        const { style } = this.container;\n                        let svgBuffer;\n                        if (this.#hasBorder) {\n                            const { borderColor, borderWidth } = style;\n                            style.borderWidth = 0;\n                            svgBuffer = [\n                                \"url('data:image/svg+xml;utf8,\",\n                                `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n                                ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n                                `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`\n                            ];\n                            this.container.classList.add(\"hasBorder\");\n                        }\n                        const width = rectTrX - rectBlX;\n                        const height = rectTrY - rectBlY;\n                        const { svgFactory } = this;\n                        const svg = svgFactory.createElement(\"svg\");\n                        svg.classList.add(\"quadrilateralsContainer\");\n                        svg.setAttribute(\"width\", 0);\n                        svg.setAttribute(\"height\", 0);\n                        const defs = svgFactory.createElement(\"defs\");\n                        svg.append(defs);\n                        const clipPath = svgFactory.createElement(\"clipPath\");\n                        const id = `clippath_${this.data.id}`;\n                        clipPath.setAttribute(\"id\", id);\n                        clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n                        defs.append(clipPath);\n                        for (const [, { x: trX, y: trY }, { x: blX, y: blY }] of quadPoints){\n                            const rect = svgFactory.createElement(\"rect\");\n                            const x = (blX - rectBlX) / width;\n                            const y = (rectTrY - trY) / height;\n                            const rectWidth = (trX - blX) / width;\n                            const rectHeight = (trY - blY) / height;\n                            rect.setAttribute(\"x\", x);\n                            rect.setAttribute(\"y\", y);\n                            rect.setAttribute(\"width\", rectWidth);\n                            rect.setAttribute(\"height\", rectHeight);\n                            clipPath.append(rect);\n                            svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n                        }\n                        if (this.#hasBorder) {\n                            svgBuffer.push(`</g></svg>')`);\n                            style.backgroundImage = svgBuffer.join(\"\");\n                        }\n                        this.container.append(svg);\n                        this.container.style.clipPath = `url(#${id})`;\n                    }\n                    _createPopup() {\n                        const { container, data } = this;\n                        container.setAttribute(\"aria-haspopup\", \"dialog\");\n                        const popup = new PopupAnnotationElement({\n                            data: {\n                                color: data.color,\n                                titleObj: data.titleObj,\n                                modificationDate: data.modificationDate,\n                                contentsObj: data.contentsObj,\n                                richText: data.richText,\n                                parentRect: data.rect,\n                                borderStyle: 0,\n                                id: `popup_${data.id}`,\n                                rotation: data.rotation\n                            },\n                            parent: this.parent,\n                            elements: [\n                                this\n                            ]\n                        });\n                        this.parent.div.append(popup.render());\n                    }\n                    render() {\n                        (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n                    }\n                    _getElementsByName(name, skipId = null) {\n                        const fields = [];\n                        if (this._fieldObjects) {\n                            const fieldObj = this._fieldObjects[name];\n                            if (fieldObj) for (const { page, id, exportValues } of fieldObj){\n                                if (page === -1) continue;\n                                if (id === skipId) continue;\n                                const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                                const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                                if (domElement && !GetElementsByNameSet.has(domElement)) {\n                                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                                    continue;\n                                }\n                                fields.push({\n                                    id: id,\n                                    exportValue: exportValue,\n                                    domElement: domElement\n                                });\n                            }\n                            return fields;\n                        }\n                        for (const domElement of document.getElementsByName(name)){\n                            const { exportValue } = domElement;\n                            const id = domElement.getAttribute(\"data-element-id\");\n                            if (id === skipId) continue;\n                            if (!GetElementsByNameSet.has(domElement)) continue;\n                            fields.push({\n                                id: id,\n                                exportValue: exportValue,\n                                domElement: domElement\n                            });\n                        }\n                        return fields;\n                    }\n                    show() {\n                        if (this.container) this.container.hidden = false;\n                        this.popup?.maybeShow();\n                    }\n                    hide() {\n                        if (this.container) this.container.hidden = true;\n                        this.popup?.forceHide();\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.container;\n                    }\n                    addHighlightArea() {\n                        const triggers = this.getElementsToTriggerPopup();\n                        if (Array.isArray(triggers)) for (const element of triggers)element.classList.add(\"highlightArea\");\n                        else triggers.classList.add(\"highlightArea\");\n                    }\n                    _editOnDoubleClick() {\n                        const { annotationEditorType: mode, data: { id: editId } } = this;\n                        this.container.addEventListener(\"dblclick\", ()=>{\n                            this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n                                source: this,\n                                mode: mode,\n                                editId: editId\n                            });\n                        });\n                    }\n                }\n                class LinkAnnotationElement extends AnnotationElement {\n                    constructor(parameters, options = null){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: !!options?.ignoreBorder,\n                            createQuadrilaterals: true\n                        });\n                        this.isTooltipOnly = parameters.data.isTooltipOnly;\n                    }\n                    render() {\n                        const { data, linkService } = this;\n                        const link = document.createElement(\"a\");\n                        link.setAttribute(\"data-element-id\", data.id);\n                        let isBound = false;\n                        if (data.url) {\n                            linkService.addLinkAttributes(link, data.url, data.newWindow);\n                            isBound = true;\n                        } else if (data.action) {\n                            this._bindNamedAction(link, data.action);\n                            isBound = true;\n                        } else if (data.attachment) {\n                            this._bindAttachment(link, data.attachment);\n                            isBound = true;\n                        } else if (data.setOCGState) {\n                            this.#bindSetOCGState(link, data.setOCGState);\n                            isBound = true;\n                        } else if (data.dest) {\n                            this._bindLink(link, data.dest);\n                            isBound = true;\n                        } else {\n                            if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                                this._bindJSAction(link, data);\n                                isBound = true;\n                            }\n                            if (data.resetForm) {\n                                this._bindResetFormAction(link, data.resetForm);\n                                isBound = true;\n                            } else if (this.isTooltipOnly && !isBound) {\n                                this._bindLink(link, \"\");\n                                isBound = true;\n                            }\n                        }\n                        this.container.classList.add(\"linkAnnotation\");\n                        if (isBound) this.container.append(link);\n                        return this.container;\n                    }\n                    #setInternalLink() {\n                        this.container.setAttribute(\"data-internal-link\", \"\");\n                    }\n                    _bindLink(link, destination) {\n                        link.href = this.linkService.getDestinationHash(destination);\n                        link.onclick = ()=>{\n                            if (destination) this.linkService.goToDestination(destination);\n                            return false;\n                        };\n                        if (destination || destination === \"\") this.#setInternalLink();\n                    }\n                    _bindNamedAction(link, action) {\n                        link.href = this.linkService.getAnchorUrl(\"\");\n                        link.onclick = ()=>{\n                            this.linkService.executeNamedAction(action);\n                            return false;\n                        };\n                        this.#setInternalLink();\n                    }\n                    _bindAttachment(link, attachment) {\n                        link.href = this.linkService.getAnchorUrl(\"\");\n                        link.onclick = ()=>{\n                            this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n                            return false;\n                        };\n                        this.#setInternalLink();\n                    }\n                    #bindSetOCGState(link, action) {\n                        link.href = this.linkService.getAnchorUrl(\"\");\n                        link.onclick = ()=>{\n                            this.linkService.executeSetOCGState(action);\n                            return false;\n                        };\n                        this.#setInternalLink();\n                    }\n                    _bindJSAction(link, data) {\n                        link.href = this.linkService.getAnchorUrl(\"\");\n                        const map = new Map([\n                            [\n                                \"Action\",\n                                \"onclick\"\n                            ],\n                            [\n                                \"Mouse Up\",\n                                \"onmouseup\"\n                            ],\n                            [\n                                \"Mouse Down\",\n                                \"onmousedown\"\n                            ]\n                        ]);\n                        for (const name of Object.keys(data.actions)){\n                            const jsName = map.get(name);\n                            if (!jsName) continue;\n                            link[jsName] = ()=>{\n                                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                    source: this,\n                                    detail: {\n                                        id: data.id,\n                                        name: name\n                                    }\n                                });\n                                return false;\n                            };\n                        }\n                        if (!link.onclick) link.onclick = ()=>false;\n                        this.#setInternalLink();\n                    }\n                    _bindResetFormAction(link, resetForm) {\n                        const otherClickAction = link.onclick;\n                        if (!otherClickAction) link.href = this.linkService.getAnchorUrl(\"\");\n                        this.#setInternalLink();\n                        if (!this._fieldObjects) {\n                            (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n                            if (!otherClickAction) link.onclick = ()=>false;\n                            return;\n                        }\n                        link.onclick = ()=>{\n                            otherClickAction?.();\n                            const { fields: resetFormFields, refs: resetFormRefs, include } = resetForm;\n                            const allFields = [];\n                            if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                                const fieldIds = new Set(resetFormRefs);\n                                for (const fieldName of resetFormFields){\n                                    const fields = this._fieldObjects[fieldName] || [];\n                                    for (const { id } of fields)fieldIds.add(id);\n                                }\n                                for (const fields of Object.values(this._fieldObjects)){\n                                    for (const field of fields)if (fieldIds.has(field.id) === include) allFields.push(field);\n                                }\n                            } else for (const fields of Object.values(this._fieldObjects))allFields.push(...fields);\n                            const storage = this.annotationStorage;\n                            const allIds = [];\n                            for (const field of allFields){\n                                const { id } = field;\n                                allIds.push(id);\n                                switch(field.type){\n                                    case \"text\":\n                                        {\n                                            const value = field.defaultValue || \"\";\n                                            storage.setValue(id, {\n                                                value: value\n                                            });\n                                            break;\n                                        }\n                                    case \"checkbox\":\n                                    case \"radiobutton\":\n                                        {\n                                            const value = field.defaultValue === field.exportValues;\n                                            storage.setValue(id, {\n                                                value: value\n                                            });\n                                            break;\n                                        }\n                                    case \"combobox\":\n                                    case \"listbox\":\n                                        {\n                                            const value = field.defaultValue || \"\";\n                                            storage.setValue(id, {\n                                                value: value\n                                            });\n                                            break;\n                                        }\n                                    default:\n                                        continue;\n                                }\n                                const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                                if (!domElement) continue;\n                                else if (!GetElementsByNameSet.has(domElement)) {\n                                    (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n                                    continue;\n                                }\n                                domElement.dispatchEvent(new Event(\"resetform\"));\n                            }\n                            if (this.enableScripting) this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                source: this,\n                                detail: {\n                                    id: \"app\",\n                                    ids: allIds,\n                                    name: \"ResetForm\"\n                                }\n                            });\n                            return false;\n                        };\n                    }\n                }\n                class TextAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"textAnnotation\");\n                        const image = document.createElement(\"img\");\n                        image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n                        image.alt = \"[{{type}} Annotation]\";\n                        image.dataset.l10nId = \"text_annotation_type\";\n                        image.dataset.l10nArgs = JSON.stringify({\n                            type: this.data.name\n                        });\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this.container.append(image);\n                        return this.container;\n                    }\n                }\n                class WidgetAnnotationElement extends AnnotationElement {\n                    render() {\n                        if (this.data.alternativeText) this.container.title = this.data.alternativeText;\n                        return this.container;\n                    }\n                    showElementAndHideCanvas(element) {\n                        if (this.data.hasOwnCanvas) {\n                            if (element.previousSibling?.nodeName === \"CANVAS\") element.previousSibling.hidden = true;\n                            element.hidden = false;\n                        }\n                    }\n                    _getKeyModifier(event) {\n                        const { isWin, isMac } = _util.FeatureTest.platform;\n                        return isWin && event.ctrlKey || isMac && event.metaKey;\n                    }\n                    _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n                        if (baseName.includes(\"mouse\")) element.addEventListener(baseName, (event)=>{\n                            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                source: this,\n                                detail: {\n                                    id: this.data.id,\n                                    name: eventName,\n                                    value: valueGetter(event),\n                                    shift: event.shiftKey,\n                                    modifier: this._getKeyModifier(event)\n                                }\n                            });\n                        });\n                        else element.addEventListener(baseName, (event)=>{\n                            if (baseName === \"blur\") {\n                                if (!elementData.focused || !event.relatedTarget) return;\n                                elementData.focused = false;\n                            } else if (baseName === \"focus\") {\n                                if (elementData.focused) return;\n                                elementData.focused = true;\n                            }\n                            if (!valueGetter) return;\n                            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                source: this,\n                                detail: {\n                                    id: this.data.id,\n                                    name: eventName,\n                                    value: valueGetter(event)\n                                }\n                            });\n                        });\n                    }\n                    _setEventListeners(element, elementData, names, getter) {\n                        for (const [baseName, eventName] of names)if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                            if (eventName === \"Focus\" || eventName === \"Blur\") elementData ||= {\n                                focused: false\n                            };\n                            this._setEventListener(element, elementData, baseName, eventName, getter);\n                            if (eventName === \"Focus\" && !this.data.actions?.Blur) this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                            else if (eventName === \"Blur\" && !this.data.actions?.Focus) this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                        }\n                    }\n                    _setBackgroundColor(element) {\n                        const color = this.data.backgroundColor || null;\n                        element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n                    }\n                    _setTextStyle(element) {\n                        const TEXT_ALIGNMENT = [\n                            \"left\",\n                            \"center\",\n                            \"right\"\n                        ];\n                        const { fontColor } = this.data.defaultAppearanceData;\n                        const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n                        const style = element.style;\n                        let computedFontSize;\n                        const BORDER_SIZE = 2;\n                        const roundToOneDecimal = (x)=>Math.round(10 * x) / 10;\n                        if (this.data.multiLine) {\n                            const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n                            const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n                            const lineHeight = height / numberOfLines;\n                            computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n                        } else {\n                            const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n                            computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n                        }\n                        style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n                        style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n                        if (this.data.textAlignment !== null) style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n                    }\n                    _setRequired(element, isRequired) {\n                        if (isRequired) element.setAttribute(\"required\", true);\n                        else element.removeAttribute(\"required\");\n                        element.setAttribute(\"aria-required\", isRequired);\n                    }\n                }\n                class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n                    constructor(parameters){\n                        const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n                        super(parameters, {\n                            isRenderable: isRenderable\n                        });\n                    }\n                    setPropertyOnSiblings(base, key, value, keyInStorage) {\n                        const storage = this.annotationStorage;\n                        for (const element of this._getElementsByName(base.name, base.id)){\n                            if (element.domElement) element.domElement[key] = value;\n                            storage.setValue(element.id, {\n                                [keyInStorage]: value\n                            });\n                        }\n                    }\n                    render() {\n                        const storage = this.annotationStorage;\n                        const id = this.data.id;\n                        this.container.classList.add(\"textWidgetAnnotation\");\n                        let element = null;\n                        if (this.renderForms) {\n                            const storedData = storage.getValue(id, {\n                                value: this.data.fieldValue\n                            });\n                            let textContent = storedData.value || \"\";\n                            const maxLen = storage.getValue(id, {\n                                charLimit: this.data.maxLen\n                            }).charLimit;\n                            if (maxLen && textContent.length > maxLen) textContent = textContent.slice(0, maxLen);\n                            let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n                            if (fieldFormattedValues && this.data.comb) fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n                            const elementData = {\n                                userValue: textContent,\n                                formattedValue: fieldFormattedValues,\n                                lastCommittedValue: null,\n                                commitKey: 1,\n                                focused: false\n                            };\n                            if (this.data.multiLine) {\n                                element = document.createElement(\"textarea\");\n                                element.textContent = fieldFormattedValues ?? textContent;\n                                if (this.data.doNotScroll) element.style.overflowY = \"hidden\";\n                            } else {\n                                element = document.createElement(\"input\");\n                                element.type = \"text\";\n                                element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n                                if (this.data.doNotScroll) element.style.overflowX = \"hidden\";\n                            }\n                            if (this.data.hasOwnCanvas) element.hidden = true;\n                            GetElementsByNameSet.add(element);\n                            element.setAttribute(\"data-element-id\", id);\n                            element.disabled = this.data.readOnly;\n                            element.name = this.data.fieldName;\n                            element.tabIndex = DEFAULT_TAB_INDEX;\n                            this._setRequired(element, this.data.required);\n                            if (maxLen) element.maxLength = maxLen;\n                            element.addEventListener(\"input\", (event)=>{\n                                storage.setValue(id, {\n                                    value: event.target.value\n                                });\n                                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                                elementData.formattedValue = null;\n                            });\n                            element.addEventListener(\"resetform\", (event)=>{\n                                const defaultValue = this.data.defaultFieldValue ?? \"\";\n                                element.value = elementData.userValue = defaultValue;\n                                elementData.formattedValue = null;\n                            });\n                            let blurListener = (event)=>{\n                                const { formattedValue } = elementData;\n                                if (formattedValue !== null && formattedValue !== undefined) event.target.value = formattedValue;\n                                event.target.scrollLeft = 0;\n                            };\n                            if (this.enableScripting && this.hasJSActions) {\n                                element.addEventListener(\"focus\", (event)=>{\n                                    if (elementData.focused) return;\n                                    const { target } = event;\n                                    if (elementData.userValue) target.value = elementData.userValue;\n                                    elementData.lastCommittedValue = target.value;\n                                    elementData.commitKey = 1;\n                                    elementData.focused = true;\n                                });\n                                element.addEventListener(\"updatefromsandbox\", (jsEvent)=>{\n                                    this.showElementAndHideCanvas(jsEvent.target);\n                                    const actions = {\n                                        value (event) {\n                                            elementData.userValue = event.detail.value ?? \"\";\n                                            storage.setValue(id, {\n                                                value: elementData.userValue.toString()\n                                            });\n                                            event.target.value = elementData.userValue;\n                                        },\n                                        formattedValue (event) {\n                                            const { formattedValue } = event.detail;\n                                            elementData.formattedValue = formattedValue;\n                                            if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) event.target.value = formattedValue;\n                                            storage.setValue(id, {\n                                                formattedValue: formattedValue\n                                            });\n                                        },\n                                        selRange (event) {\n                                            event.target.setSelectionRange(...event.detail.selRange);\n                                        },\n                                        charLimit: (event)=>{\n                                            const { charLimit } = event.detail;\n                                            const { target } = event;\n                                            if (charLimit === 0) {\n                                                target.removeAttribute(\"maxLength\");\n                                                return;\n                                            }\n                                            target.setAttribute(\"maxLength\", charLimit);\n                                            let value = elementData.userValue;\n                                            if (!value || value.length <= charLimit) return;\n                                            value = value.slice(0, charLimit);\n                                            target.value = elementData.userValue = value;\n                                            storage.setValue(id, {\n                                                value: value\n                                            });\n                                            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                                source: this,\n                                                detail: {\n                                                    id: id,\n                                                    name: \"Keystroke\",\n                                                    value: value,\n                                                    willCommit: true,\n                                                    commitKey: 1,\n                                                    selStart: target.selectionStart,\n                                                    selEnd: target.selectionEnd\n                                                }\n                                            });\n                                        }\n                                    };\n                                    this._dispatchEventFromSandbox(actions, jsEvent);\n                                });\n                                element.addEventListener(\"keydown\", (event)=>{\n                                    elementData.commitKey = 1;\n                                    let commitKey = -1;\n                                    if (event.key === \"Escape\") commitKey = 0;\n                                    else if (event.key === \"Enter\" && !this.data.multiLine) commitKey = 2;\n                                    else if (event.key === \"Tab\") elementData.commitKey = 3;\n                                    if (commitKey === -1) return;\n                                    const { value } = event.target;\n                                    if (elementData.lastCommittedValue === value) return;\n                                    elementData.lastCommittedValue = value;\n                                    elementData.userValue = value;\n                                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                        source: this,\n                                        detail: {\n                                            id: id,\n                                            name: \"Keystroke\",\n                                            value: value,\n                                            willCommit: true,\n                                            commitKey: commitKey,\n                                            selStart: event.target.selectionStart,\n                                            selEnd: event.target.selectionEnd\n                                        }\n                                    });\n                                });\n                                const _blurListener = blurListener;\n                                blurListener = null;\n                                element.addEventListener(\"blur\", (event)=>{\n                                    if (!elementData.focused || !event.relatedTarget) return;\n                                    elementData.focused = false;\n                                    const { value } = event.target;\n                                    elementData.userValue = value;\n                                    if (elementData.lastCommittedValue !== value) this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                        source: this,\n                                        detail: {\n                                            id: id,\n                                            name: \"Keystroke\",\n                                            value: value,\n                                            willCommit: true,\n                                            commitKey: elementData.commitKey,\n                                            selStart: event.target.selectionStart,\n                                            selEnd: event.target.selectionEnd\n                                        }\n                                    });\n                                    _blurListener(event);\n                                });\n                                if (this.data.actions?.Keystroke) element.addEventListener(\"beforeinput\", (event)=>{\n                                    elementData.lastCommittedValue = null;\n                                    const { data, target } = event;\n                                    const { value, selectionStart, selectionEnd } = target;\n                                    let selStart = selectionStart, selEnd = selectionEnd;\n                                    switch(event.inputType){\n                                        case \"deleteWordBackward\":\n                                            {\n                                                const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                                                if (match) selStart -= match[0].length;\n                                                break;\n                                            }\n                                        case \"deleteWordForward\":\n                                            {\n                                                const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                                                if (match) selEnd += match[0].length;\n                                                break;\n                                            }\n                                        case \"deleteContentBackward\":\n                                            if (selectionStart === selectionEnd) selStart -= 1;\n                                            break;\n                                        case \"deleteContentForward\":\n                                            if (selectionStart === selectionEnd) selEnd += 1;\n                                            break;\n                                    }\n                                    event.preventDefault();\n                                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                        source: this,\n                                        detail: {\n                                            id: id,\n                                            name: \"Keystroke\",\n                                            value: value,\n                                            change: data || \"\",\n                                            willCommit: false,\n                                            selStart: selStart,\n                                            selEnd: selEnd\n                                        }\n                                    });\n                                });\n                                this._setEventListeners(element, elementData, [\n                                    [\n                                        \"focus\",\n                                        \"Focus\"\n                                    ],\n                                    [\n                                        \"blur\",\n                                        \"Blur\"\n                                    ],\n                                    [\n                                        \"mousedown\",\n                                        \"Mouse Down\"\n                                    ],\n                                    [\n                                        \"mouseenter\",\n                                        \"Mouse Enter\"\n                                    ],\n                                    [\n                                        \"mouseleave\",\n                                        \"Mouse Exit\"\n                                    ],\n                                    [\n                                        \"mouseup\",\n                                        \"Mouse Up\"\n                                    ]\n                                ], (event)=>event.target.value);\n                            }\n                            if (blurListener) element.addEventListener(\"blur\", blurListener);\n                            if (this.data.comb) {\n                                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                                const combWidth = fieldWidth / maxLen;\n                                element.classList.add(\"comb\");\n                                element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n                            }\n                        } else {\n                            element = document.createElement(\"div\");\n                            element.textContent = this.data.fieldValue;\n                            element.style.verticalAlign = \"middle\";\n                            element.style.display = \"table-cell\";\n                        }\n                        this._setTextStyle(element);\n                        this._setBackgroundColor(element);\n                        this._setDefaultPropertiesFromJS(element);\n                        this.container.append(element);\n                        return this.container;\n                    }\n                }\n                class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: !!parameters.data.hasOwnCanvas\n                        });\n                    }\n                }\n                class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: parameters.renderForms\n                        });\n                    }\n                    render() {\n                        const storage = this.annotationStorage;\n                        const data = this.data;\n                        const id = data.id;\n                        let value = storage.getValue(id, {\n                            value: data.exportValue === data.fieldValue\n                        }).value;\n                        if (typeof value === \"string\") {\n                            value = value !== \"Off\";\n                            storage.setValue(id, {\n                                value: value\n                            });\n                        }\n                        this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n                        const element = document.createElement(\"input\");\n                        GetElementsByNameSet.add(element);\n                        element.setAttribute(\"data-element-id\", id);\n                        element.disabled = data.readOnly;\n                        this._setRequired(element, this.data.required);\n                        element.type = \"checkbox\";\n                        element.name = data.fieldName;\n                        if (value) element.setAttribute(\"checked\", true);\n                        element.setAttribute(\"exportValue\", data.exportValue);\n                        element.tabIndex = DEFAULT_TAB_INDEX;\n                        element.addEventListener(\"change\", (event)=>{\n                            const { name, checked } = event.target;\n                            for (const checkbox of this._getElementsByName(name, id)){\n                                const curChecked = checked && checkbox.exportValue === data.exportValue;\n                                if (checkbox.domElement) checkbox.domElement.checked = curChecked;\n                                storage.setValue(checkbox.id, {\n                                    value: curChecked\n                                });\n                            }\n                            storage.setValue(id, {\n                                value: checked\n                            });\n                        });\n                        element.addEventListener(\"resetform\", (event)=>{\n                            const defaultValue = data.defaultFieldValue || \"Off\";\n                            event.target.checked = defaultValue === data.exportValue;\n                        });\n                        if (this.enableScripting && this.hasJSActions) {\n                            element.addEventListener(\"updatefromsandbox\", (jsEvent)=>{\n                                const actions = {\n                                    value (event) {\n                                        event.target.checked = event.detail.value !== \"Off\";\n                                        storage.setValue(id, {\n                                            value: event.target.checked\n                                        });\n                                    }\n                                };\n                                this._dispatchEventFromSandbox(actions, jsEvent);\n                            });\n                            this._setEventListeners(element, null, [\n                                [\n                                    \"change\",\n                                    \"Validate\"\n                                ],\n                                [\n                                    \"change\",\n                                    \"Action\"\n                                ],\n                                [\n                                    \"focus\",\n                                    \"Focus\"\n                                ],\n                                [\n                                    \"blur\",\n                                    \"Blur\"\n                                ],\n                                [\n                                    \"mousedown\",\n                                    \"Mouse Down\"\n                                ],\n                                [\n                                    \"mouseenter\",\n                                    \"Mouse Enter\"\n                                ],\n                                [\n                                    \"mouseleave\",\n                                    \"Mouse Exit\"\n                                ],\n                                [\n                                    \"mouseup\",\n                                    \"Mouse Up\"\n                                ]\n                            ], (event)=>event.target.checked);\n                        }\n                        this._setBackgroundColor(element);\n                        this._setDefaultPropertiesFromJS(element);\n                        this.container.append(element);\n                        return this.container;\n                    }\n                }\n                class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: parameters.renderForms\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n                        const storage = this.annotationStorage;\n                        const data = this.data;\n                        const id = data.id;\n                        let value = storage.getValue(id, {\n                            value: data.fieldValue === data.buttonValue\n                        }).value;\n                        if (typeof value === \"string\") {\n                            value = value !== data.buttonValue;\n                            storage.setValue(id, {\n                                value: value\n                            });\n                        }\n                        const element = document.createElement(\"input\");\n                        GetElementsByNameSet.add(element);\n                        element.setAttribute(\"data-element-id\", id);\n                        element.disabled = data.readOnly;\n                        this._setRequired(element, this.data.required);\n                        element.type = \"radio\";\n                        element.name = data.fieldName;\n                        if (value) element.setAttribute(\"checked\", true);\n                        element.tabIndex = DEFAULT_TAB_INDEX;\n                        element.addEventListener(\"change\", (event)=>{\n                            const { name, checked } = event.target;\n                            for (const radio of this._getElementsByName(name, id))storage.setValue(radio.id, {\n                                value: false\n                            });\n                            storage.setValue(id, {\n                                value: checked\n                            });\n                        });\n                        element.addEventListener(\"resetform\", (event)=>{\n                            const defaultValue = data.defaultFieldValue;\n                            event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n                        });\n                        if (this.enableScripting && this.hasJSActions) {\n                            const pdfButtonValue = data.buttonValue;\n                            element.addEventListener(\"updatefromsandbox\", (jsEvent)=>{\n                                const actions = {\n                                    value: (event)=>{\n                                        const checked = pdfButtonValue === event.detail.value;\n                                        for (const radio of this._getElementsByName(event.target.name)){\n                                            const curChecked = checked && radio.id === id;\n                                            if (radio.domElement) radio.domElement.checked = curChecked;\n                                            storage.setValue(radio.id, {\n                                                value: curChecked\n                                            });\n                                        }\n                                    }\n                                };\n                                this._dispatchEventFromSandbox(actions, jsEvent);\n                            });\n                            this._setEventListeners(element, null, [\n                                [\n                                    \"change\",\n                                    \"Validate\"\n                                ],\n                                [\n                                    \"change\",\n                                    \"Action\"\n                                ],\n                                [\n                                    \"focus\",\n                                    \"Focus\"\n                                ],\n                                [\n                                    \"blur\",\n                                    \"Blur\"\n                                ],\n                                [\n                                    \"mousedown\",\n                                    \"Mouse Down\"\n                                ],\n                                [\n                                    \"mouseenter\",\n                                    \"Mouse Enter\"\n                                ],\n                                [\n                                    \"mouseleave\",\n                                    \"Mouse Exit\"\n                                ],\n                                [\n                                    \"mouseup\",\n                                    \"Mouse Up\"\n                                ]\n                            ], (event)=>event.target.checked);\n                        }\n                        this._setBackgroundColor(element);\n                        this._setDefaultPropertiesFromJS(element);\n                        this.container.append(element);\n                        return this.container;\n                    }\n                }\n                class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            ignoreBorder: parameters.data.hasAppearance\n                        });\n                    }\n                    render() {\n                        const container = super.render();\n                        container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n                        if (this.data.alternativeText) container.title = this.data.alternativeText;\n                        const linkElement = container.lastChild;\n                        if (this.enableScripting && this.hasJSActions && linkElement) {\n                            this._setDefaultPropertiesFromJS(linkElement);\n                            linkElement.addEventListener(\"updatefromsandbox\", (jsEvent)=>{\n                                this._dispatchEventFromSandbox({}, jsEvent);\n                            });\n                        }\n                        return container;\n                    }\n                }\n                class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: parameters.renderForms\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"choiceWidgetAnnotation\");\n                        const storage = this.annotationStorage;\n                        const id = this.data.id;\n                        const storedData = storage.getValue(id, {\n                            value: this.data.fieldValue\n                        });\n                        const selectElement = document.createElement(\"select\");\n                        GetElementsByNameSet.add(selectElement);\n                        selectElement.setAttribute(\"data-element-id\", id);\n                        selectElement.disabled = this.data.readOnly;\n                        this._setRequired(selectElement, this.data.required);\n                        selectElement.name = this.data.fieldName;\n                        selectElement.tabIndex = DEFAULT_TAB_INDEX;\n                        let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n                        if (!this.data.combo) {\n                            selectElement.size = this.data.options.length;\n                            if (this.data.multiSelect) selectElement.multiple = true;\n                        }\n                        selectElement.addEventListener(\"resetform\", (event)=>{\n                            const defaultValue = this.data.defaultFieldValue;\n                            for (const option of selectElement.options)option.selected = option.value === defaultValue;\n                        });\n                        for (const option of this.data.options){\n                            const optionElement = document.createElement(\"option\");\n                            optionElement.textContent = option.displayValue;\n                            optionElement.value = option.exportValue;\n                            if (storedData.value.includes(option.exportValue)) {\n                                optionElement.setAttribute(\"selected\", true);\n                                addAnEmptyEntry = false;\n                            }\n                            selectElement.append(optionElement);\n                        }\n                        let removeEmptyEntry = null;\n                        if (addAnEmptyEntry) {\n                            const noneOptionElement = document.createElement(\"option\");\n                            noneOptionElement.value = \" \";\n                            noneOptionElement.setAttribute(\"hidden\", true);\n                            noneOptionElement.setAttribute(\"selected\", true);\n                            selectElement.prepend(noneOptionElement);\n                            removeEmptyEntry = ()=>{\n                                noneOptionElement.remove();\n                                selectElement.removeEventListener(\"input\", removeEmptyEntry);\n                                removeEmptyEntry = null;\n                            };\n                            selectElement.addEventListener(\"input\", removeEmptyEntry);\n                        }\n                        const getValue = (isExport)=>{\n                            const name = isExport ? \"value\" : \"textContent\";\n                            const { options, multiple } = selectElement;\n                            if (!multiple) return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n                            return Array.prototype.filter.call(options, (option)=>option.selected).map((option)=>option[name]);\n                        };\n                        let selectedValues = getValue(false);\n                        const getItems = (event)=>{\n                            const options = event.target.options;\n                            return Array.prototype.map.call(options, (option)=>{\n                                return {\n                                    displayValue: option.textContent,\n                                    exportValue: option.value\n                                };\n                            });\n                        };\n                        if (this.enableScripting && this.hasJSActions) {\n                            selectElement.addEventListener(\"updatefromsandbox\", (jsEvent)=>{\n                                const actions = {\n                                    value (event) {\n                                        removeEmptyEntry?.();\n                                        const value = event.detail.value;\n                                        const values = new Set(Array.isArray(value) ? value : [\n                                            value\n                                        ]);\n                                        for (const option of selectElement.options)option.selected = values.has(option.value);\n                                        storage.setValue(id, {\n                                            value: getValue(true)\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    multipleSelection (event) {\n                                        selectElement.multiple = true;\n                                    },\n                                    remove (event) {\n                                        const options = selectElement.options;\n                                        const index = event.detail.remove;\n                                        options[index].selected = false;\n                                        selectElement.remove(index);\n                                        if (options.length > 0) {\n                                            const i = Array.prototype.findIndex.call(options, (option)=>option.selected);\n                                            if (i === -1) options[0].selected = true;\n                                        }\n                                        storage.setValue(id, {\n                                            value: getValue(true),\n                                            items: getItems(event)\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    clear (event) {\n                                        while(selectElement.length !== 0)selectElement.remove(0);\n                                        storage.setValue(id, {\n                                            value: null,\n                                            items: []\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    insert (event) {\n                                        const { index, displayValue, exportValue } = event.detail.insert;\n                                        const selectChild = selectElement.children[index];\n                                        const optionElement = document.createElement(\"option\");\n                                        optionElement.textContent = displayValue;\n                                        optionElement.value = exportValue;\n                                        if (selectChild) selectChild.before(optionElement);\n                                        else selectElement.append(optionElement);\n                                        storage.setValue(id, {\n                                            value: getValue(true),\n                                            items: getItems(event)\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    items (event) {\n                                        const { items } = event.detail;\n                                        while(selectElement.length !== 0)selectElement.remove(0);\n                                        for (const item of items){\n                                            const { displayValue, exportValue } = item;\n                                            const optionElement = document.createElement(\"option\");\n                                            optionElement.textContent = displayValue;\n                                            optionElement.value = exportValue;\n                                            selectElement.append(optionElement);\n                                        }\n                                        if (selectElement.options.length > 0) selectElement.options[0].selected = true;\n                                        storage.setValue(id, {\n                                            value: getValue(true),\n                                            items: getItems(event)\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    indices (event) {\n                                        const indices = new Set(event.detail.indices);\n                                        for (const option of event.target.options)option.selected = indices.has(option.index);\n                                        storage.setValue(id, {\n                                            value: getValue(true)\n                                        });\n                                        selectedValues = getValue(false);\n                                    },\n                                    editable (event) {\n                                        event.target.disabled = !event.detail.editable;\n                                    }\n                                };\n                                this._dispatchEventFromSandbox(actions, jsEvent);\n                            });\n                            selectElement.addEventListener(\"input\", (event)=>{\n                                const exportValue = getValue(true);\n                                storage.setValue(id, {\n                                    value: exportValue\n                                });\n                                event.preventDefault();\n                                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                                    source: this,\n                                    detail: {\n                                        id: id,\n                                        name: \"Keystroke\",\n                                        value: selectedValues,\n                                        changeEx: exportValue,\n                                        willCommit: false,\n                                        commitKey: 1,\n                                        keyDown: false\n                                    }\n                                });\n                            });\n                            this._setEventListeners(selectElement, null, [\n                                [\n                                    \"focus\",\n                                    \"Focus\"\n                                ],\n                                [\n                                    \"blur\",\n                                    \"Blur\"\n                                ],\n                                [\n                                    \"mousedown\",\n                                    \"Mouse Down\"\n                                ],\n                                [\n                                    \"mouseenter\",\n                                    \"Mouse Enter\"\n                                ],\n                                [\n                                    \"mouseleave\",\n                                    \"Mouse Exit\"\n                                ],\n                                [\n                                    \"mouseup\",\n                                    \"Mouse Up\"\n                                ],\n                                [\n                                    \"input\",\n                                    \"Action\"\n                                ],\n                                [\n                                    \"input\",\n                                    \"Validate\"\n                                ]\n                            ], (event)=>event.target.value);\n                        } else selectElement.addEventListener(\"input\", function(event) {\n                            storage.setValue(id, {\n                                value: getValue(true)\n                            });\n                        });\n                        if (this.data.combo) this._setTextStyle(selectElement);\n                        this._setBackgroundColor(selectElement);\n                        this._setDefaultPropertiesFromJS(selectElement);\n                        this.container.append(selectElement);\n                        return this.container;\n                    }\n                }\n                class PopupAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        const { data, elements } = parameters;\n                        super(parameters, {\n                            isRenderable: AnnotationElement._hasPopupData(data)\n                        });\n                        this.elements = elements;\n                    }\n                    render() {\n                        this.container.classList.add(\"popupAnnotation\");\n                        const popup = new PopupElement({\n                            container: this.container,\n                            color: this.data.color,\n                            titleObj: this.data.titleObj,\n                            modificationDate: this.data.modificationDate,\n                            contentsObj: this.data.contentsObj,\n                            richText: this.data.richText,\n                            rect: this.data.rect,\n                            parentRect: this.data.parentRect || null,\n                            parent: this.parent,\n                            elements: this.elements,\n                            open: this.data.open\n                        });\n                        const elementIds = [];\n                        for (const element of this.elements){\n                            element.popup = popup;\n                            elementIds.push(element.data.id);\n                            element.addHighlightArea();\n                        }\n                        this.container.setAttribute(\"aria-controls\", elementIds.map((id)=>`${_util.AnnotationPrefix}${id}`).join(\",\"));\n                        return this.container;\n                    }\n                }\n                class PopupElement {\n                    #dateTimePromise = null;\n                    #boundKeyDown = this.#keyDown.bind(this);\n                    #boundHide = this.#hide.bind(this);\n                    #boundShow = this.#show.bind(this);\n                    #boundToggle = this.#toggle.bind(this);\n                    #color = null;\n                    #container = null;\n                    #contentsObj = null;\n                    #elements = null;\n                    #parent = null;\n                    #parentRect = null;\n                    #pinned = false;\n                    #popup = null;\n                    #rect = null;\n                    #richText = null;\n                    #titleObj = null;\n                    #wasVisible = false;\n                    constructor({ container, color, elements, titleObj, modificationDate, contentsObj, richText, parent, rect, parentRect, open }){\n                        this.#container = container;\n                        this.#titleObj = titleObj;\n                        this.#contentsObj = contentsObj;\n                        this.#richText = richText;\n                        this.#parent = parent;\n                        this.#color = color;\n                        this.#rect = rect;\n                        this.#parentRect = parentRect;\n                        this.#elements = elements;\n                        const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n                        if (dateObject) this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n                            date: dateObject.toLocaleDateString(),\n                            time: dateObject.toLocaleTimeString()\n                        });\n                        this.trigger = elements.flatMap((e)=>e.getElementsToTriggerPopup());\n                        for (const element of this.trigger){\n                            element.addEventListener(\"click\", this.#boundToggle);\n                            element.addEventListener(\"mouseenter\", this.#boundShow);\n                            element.addEventListener(\"mouseleave\", this.#boundHide);\n                            element.classList.add(\"popupTriggerArea\");\n                        }\n                        for (const element of elements)element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n                        this.#container.hidden = true;\n                        if (open) this.#toggle();\n                    }\n                    render() {\n                        if (this.#popup) return;\n                        const { page: { view }, viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY } } } = this.#parent;\n                        const popup = this.#popup = document.createElement(\"div\");\n                        popup.className = \"popup\";\n                        if (this.#color) {\n                            const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n                            if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n                            else {\n                                const BACKGROUND_ENLIGHT = 0.7;\n                                popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map((c)=>Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n                            }\n                        }\n                        const header = document.createElement(\"span\");\n                        header.className = \"header\";\n                        const title = document.createElement(\"h1\");\n                        header.append(title);\n                        ({ dir: title.dir, str: title.textContent } = this.#titleObj);\n                        popup.append(header);\n                        if (this.#dateTimePromise) {\n                            const modificationDate = document.createElement(\"span\");\n                            modificationDate.classList.add(\"popupDate\");\n                            this.#dateTimePromise.then((localized)=>{\n                                modificationDate.textContent = localized;\n                            });\n                            header.append(modificationDate);\n                        }\n                        const contentsObj = this.#contentsObj;\n                        const richText = this.#richText;\n                        if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n                            _xfa_layer.XfaLayer.render({\n                                xfaHtml: richText.html,\n                                intent: \"richText\",\n                                div: popup\n                            });\n                            popup.lastChild.classList.add(\"richText\", \"popupContent\");\n                        } else {\n                            const contents = this._formatContents(contentsObj);\n                            popup.append(contents);\n                        }\n                        let useParentRect = !!this.#parentRect;\n                        let rect = useParentRect ? this.#parentRect : this.#rect;\n                        for (const element of this.#elements)if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n                            rect = element.data.rect;\n                            useParentRect = true;\n                            break;\n                        }\n                        const normalizedRect = _util.Util.normalizeRect([\n                            rect[0],\n                            view[3] - rect[1] + view[1],\n                            rect[2],\n                            view[3] - rect[3] + view[1]\n                        ]);\n                        const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n                        const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n                        const popupLeft = normalizedRect[0] + parentWidth;\n                        const popupTop = normalizedRect[1];\n                        const { style } = this.#container;\n                        style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n                        style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n                        this.#container.append(popup);\n                    }\n                    _formatContents({ str, dir }) {\n                        const p = document.createElement(\"p\");\n                        p.classList.add(\"popupContent\");\n                        p.dir = dir;\n                        const lines = str.split(/(?:\\r\\n?|\\n)/);\n                        for(let i = 0, ii = lines.length; i < ii; ++i){\n                            const line = lines[i];\n                            p.append(document.createTextNode(line));\n                            if (i < ii - 1) p.append(document.createElement(\"br\"));\n                        }\n                        return p;\n                    }\n                    #keyDown(event) {\n                        if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) return;\n                        if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) this.#toggle();\n                    }\n                    #toggle() {\n                        this.#pinned = !this.#pinned;\n                        if (this.#pinned) {\n                            this.#show();\n                            this.#container.addEventListener(\"click\", this.#boundToggle);\n                            this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n                        } else {\n                            this.#hide();\n                            this.#container.removeEventListener(\"click\", this.#boundToggle);\n                            this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n                        }\n                    }\n                    #show() {\n                        if (!this.#popup) this.render();\n                        if (!this.isVisible) {\n                            this.#container.hidden = false;\n                            this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n                        } else if (this.#pinned) this.#container.classList.add(\"focused\");\n                    }\n                    #hide() {\n                        this.#container.classList.remove(\"focused\");\n                        if (this.#pinned || !this.isVisible) return;\n                        this.#container.hidden = true;\n                        this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n                    }\n                    forceHide() {\n                        this.#wasVisible = this.isVisible;\n                        if (!this.#wasVisible) return;\n                        this.#container.hidden = true;\n                    }\n                    maybeShow() {\n                        if (!this.#wasVisible) return;\n                        this.#wasVisible = false;\n                        this.#container.hidden = false;\n                    }\n                    get isVisible() {\n                        return this.#container.hidden === false;\n                    }\n                }\n                class FreeTextAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                        this.textContent = parameters.data.textContent;\n                        this.textPosition = parameters.data.textPosition;\n                        this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n                    }\n                    render() {\n                        this.container.classList.add(\"freeTextAnnotation\");\n                        if (this.textContent) {\n                            const content = document.createElement(\"div\");\n                            content.classList.add(\"annotationTextContent\");\n                            content.setAttribute(\"role\", \"comment\");\n                            for (const line of this.textContent){\n                                const lineSpan = document.createElement(\"span\");\n                                lineSpan.textContent = line;\n                                content.append(lineSpan);\n                            }\n                            this.container.append(content);\n                        }\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this._editOnDoubleClick();\n                        return this.container;\n                    }\n                }\n                exports.FreeTextAnnotationElement = FreeTextAnnotationElement;\n                class LineAnnotationElement extends AnnotationElement {\n                    #line = null;\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"lineAnnotation\");\n                        const data = this.data;\n                        const { width, height } = getRectDims(data.rect);\n                        const svg = this.svgFactory.create(width, height, true);\n                        const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n                        line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n                        line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n                        line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n                        line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n                        line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                        line.setAttribute(\"stroke\", \"transparent\");\n                        line.setAttribute(\"fill\", \"transparent\");\n                        svg.append(line);\n                        this.container.append(svg);\n                        if (!data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#line;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                }\n                class SquareAnnotationElement extends AnnotationElement {\n                    #square = null;\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"squareAnnotation\");\n                        const data = this.data;\n                        const { width, height } = getRectDims(data.rect);\n                        const svg = this.svgFactory.create(width, height, true);\n                        const borderWidth = data.borderStyle.width;\n                        const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n                        square.setAttribute(\"x\", borderWidth / 2);\n                        square.setAttribute(\"y\", borderWidth / 2);\n                        square.setAttribute(\"width\", width - borderWidth);\n                        square.setAttribute(\"height\", height - borderWidth);\n                        square.setAttribute(\"stroke-width\", borderWidth || 1);\n                        square.setAttribute(\"stroke\", \"transparent\");\n                        square.setAttribute(\"fill\", \"transparent\");\n                        svg.append(square);\n                        this.container.append(svg);\n                        if (!data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#square;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                }\n                class CircleAnnotationElement extends AnnotationElement {\n                    #circle = null;\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"circleAnnotation\");\n                        const data = this.data;\n                        const { width, height } = getRectDims(data.rect);\n                        const svg = this.svgFactory.create(width, height, true);\n                        const borderWidth = data.borderStyle.width;\n                        const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n                        circle.setAttribute(\"cx\", width / 2);\n                        circle.setAttribute(\"cy\", height / 2);\n                        circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n                        circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n                        circle.setAttribute(\"stroke-width\", borderWidth || 1);\n                        circle.setAttribute(\"stroke\", \"transparent\");\n                        circle.setAttribute(\"fill\", \"transparent\");\n                        svg.append(circle);\n                        this.container.append(svg);\n                        if (!data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#circle;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                }\n                class PolylineAnnotationElement extends AnnotationElement {\n                    #polyline = null;\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                        this.containerClassName = \"polylineAnnotation\";\n                        this.svgElementName = \"svg:polyline\";\n                    }\n                    render() {\n                        this.container.classList.add(this.containerClassName);\n                        const data = this.data;\n                        const { width, height } = getRectDims(data.rect);\n                        const svg = this.svgFactory.create(width, height, true);\n                        let points = [];\n                        for (const coordinate of data.vertices){\n                            const x = coordinate.x - data.rect[0];\n                            const y = data.rect[3] - coordinate.y;\n                            points.push(x + \",\" + y);\n                        }\n                        points = points.join(\" \");\n                        const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n                        polyline.setAttribute(\"points\", points);\n                        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                        polyline.setAttribute(\"stroke\", \"transparent\");\n                        polyline.setAttribute(\"fill\", \"transparent\");\n                        svg.append(polyline);\n                        this.container.append(svg);\n                        if (!data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#polyline;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                }\n                class PolygonAnnotationElement extends PolylineAnnotationElement {\n                    constructor(parameters){\n                        super(parameters);\n                        this.containerClassName = \"polygonAnnotation\";\n                        this.svgElementName = \"svg:polygon\";\n                    }\n                }\n                class CaretAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"caretAnnotation\");\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                }\n                class InkAnnotationElement extends AnnotationElement {\n                    #polylines = [];\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                        this.containerClassName = \"inkAnnotation\";\n                        this.svgElementName = \"svg:polyline\";\n                        this.annotationEditorType = _util.AnnotationEditorType.INK;\n                    }\n                    render() {\n                        this.container.classList.add(this.containerClassName);\n                        const data = this.data;\n                        const { width, height } = getRectDims(data.rect);\n                        const svg = this.svgFactory.create(width, height, true);\n                        for (const inkList of data.inkLists){\n                            let points = [];\n                            for (const coordinate of inkList){\n                                const x = coordinate.x - data.rect[0];\n                                const y = data.rect[3] - coordinate.y;\n                                points.push(`${x},${y}`);\n                            }\n                            points = points.join(\" \");\n                            const polyline = this.svgFactory.createElement(this.svgElementName);\n                            this.#polylines.push(polyline);\n                            polyline.setAttribute(\"points\", points);\n                            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                            polyline.setAttribute(\"stroke\", \"transparent\");\n                            polyline.setAttribute(\"fill\", \"transparent\");\n                            if (!data.popupRef && this.hasPopupData) this._createPopup();\n                            svg.append(polyline);\n                        }\n                        this.container.append(svg);\n                        return this.container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#polylines;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                }\n                exports.InkAnnotationElement = InkAnnotationElement;\n                class HighlightAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true,\n                            createQuadrilaterals: true\n                        });\n                    }\n                    render() {\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this.container.classList.add(\"highlightAnnotation\");\n                        return this.container;\n                    }\n                }\n                class UnderlineAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true,\n                            createQuadrilaterals: true\n                        });\n                    }\n                    render() {\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this.container.classList.add(\"underlineAnnotation\");\n                        return this.container;\n                    }\n                }\n                class SquigglyAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true,\n                            createQuadrilaterals: true\n                        });\n                    }\n                    render() {\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this.container.classList.add(\"squigglyAnnotation\");\n                        return this.container;\n                    }\n                }\n                class StrikeOutAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true,\n                            createQuadrilaterals: true\n                        });\n                    }\n                    render() {\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        this.container.classList.add(\"strikeoutAnnotation\");\n                        return this.container;\n                    }\n                }\n                class StampAnnotationElement extends AnnotationElement {\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true,\n                            ignoreBorder: true\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"stampAnnotation\");\n                        if (!this.data.popupRef && this.hasPopupData) this._createPopup();\n                        return this.container;\n                    }\n                }\n                exports.StampAnnotationElement = StampAnnotationElement;\n                class FileAttachmentAnnotationElement extends AnnotationElement {\n                    #trigger = null;\n                    constructor(parameters){\n                        super(parameters, {\n                            isRenderable: true\n                        });\n                        const { filename, content } = this.data.file;\n                        this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n                        this.content = content;\n                        this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n                            source: this,\n                            filename: filename,\n                            content: content\n                        });\n                    }\n                    render() {\n                        this.container.classList.add(\"fileAttachmentAnnotation\");\n                        const { container, data } = this;\n                        let trigger;\n                        if (data.hasAppearance || data.fillAlpha === 0) trigger = document.createElement(\"div\");\n                        else {\n                            trigger = document.createElement(\"img\");\n                            trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n                            if (data.fillAlpha && data.fillAlpha < 1) trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n                        }\n                        trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n                        this.#trigger = trigger;\n                        const { isMac } = _util.FeatureTest.platform;\n                        container.addEventListener(\"keydown\", (evt)=>{\n                            if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) this.#download();\n                        });\n                        if (!data.popupRef && this.hasPopupData) this._createPopup();\n                        else trigger.classList.add(\"popupTriggerArea\");\n                        container.append(trigger);\n                        return container;\n                    }\n                    getElementsToTriggerPopup() {\n                        return this.#trigger;\n                    }\n                    addHighlightArea() {\n                        this.container.classList.add(\"highlightArea\");\n                    }\n                    #download() {\n                        this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n                    }\n                }\n                class AnnotationLayer {\n                    #accessibilityManager = null;\n                    #annotationCanvasMap = null;\n                    #editableAnnotations = new Map();\n                    constructor({ div, accessibilityManager, annotationCanvasMap, l10n, page, viewport }){\n                        this.div = div;\n                        this.#accessibilityManager = accessibilityManager;\n                        this.#annotationCanvasMap = annotationCanvasMap;\n                        this.l10n = l10n;\n                        this.page = page;\n                        this.viewport = viewport;\n                        this.zIndex = 0;\n                        this.l10n ||= _displayL10n_utils.NullL10n;\n                    }\n                    #appendElement(element, id) {\n                        const contentElement = element.firstChild || element;\n                        contentElement.id = `${_util.AnnotationPrefix}${id}`;\n                        this.div.append(element);\n                        this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n                    }\n                    async render(params) {\n                        const { annotations } = params;\n                        const layer = this.div;\n                        (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n                        const popupToElements = new Map();\n                        const elementParams = {\n                            data: null,\n                            layer: layer,\n                            linkService: params.linkService,\n                            downloadManager: params.downloadManager,\n                            imageResourcesPath: params.imageResourcesPath || \"\",\n                            renderForms: params.renderForms !== false,\n                            svgFactory: new _display_utils.DOMSVGFactory(),\n                            annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n                            enableScripting: params.enableScripting === true,\n                            hasJSActions: params.hasJSActions,\n                            fieldObjects: params.fieldObjects,\n                            parent: this,\n                            elements: null\n                        };\n                        for (const data of annotations){\n                            if (data.noHTML) continue;\n                            const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n                            if (!isPopupAnnotation) {\n                                const { width, height } = getRectDims(data.rect);\n                                if (width <= 0 || height <= 0) continue;\n                            } else {\n                                const elements = popupToElements.get(data.id);\n                                if (!elements) continue;\n                                elementParams.elements = elements;\n                            }\n                            elementParams.data = data;\n                            const element = AnnotationElementFactory.create(elementParams);\n                            if (!element.isRenderable) continue;\n                            if (!isPopupAnnotation && data.popupRef) {\n                                const elements = popupToElements.get(data.popupRef);\n                                if (!elements) popupToElements.set(data.popupRef, [\n                                    element\n                                ]);\n                                else elements.push(element);\n                            }\n                            if (element.annotationEditorType > 0) this.#editableAnnotations.set(element.data.id, element);\n                            const rendered = element.render();\n                            if (data.hidden) rendered.style.visibility = \"hidden\";\n                            this.#appendElement(rendered, data.id);\n                        }\n                        this.#setAnnotationCanvasMap();\n                        await this.l10n.translate(layer);\n                    }\n                    update({ viewport }) {\n                        const layer = this.div;\n                        this.viewport = viewport;\n                        (0, _display_utils.setLayerDimensions)(layer, {\n                            rotation: viewport.rotation\n                        });\n                        this.#setAnnotationCanvasMap();\n                        layer.hidden = false;\n                    }\n                    #setAnnotationCanvasMap() {\n                        if (!this.#annotationCanvasMap) return;\n                        const layer = this.div;\n                        for (const [id, canvas] of this.#annotationCanvasMap){\n                            const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n                            if (!element) continue;\n                            const { firstChild } = element;\n                            if (!firstChild) element.append(canvas);\n                            else if (firstChild.nodeName === \"CANVAS\") firstChild.replaceWith(canvas);\n                            else firstChild.before(canvas);\n                        }\n                        this.#annotationCanvasMap.clear();\n                    }\n                    getEditableAnnotations() {\n                        return Array.from(this.#editableAnnotations.values());\n                    }\n                    getEditableAnnotation(id) {\n                        return this.#editableAnnotations.get(id);\n                    }\n                }\n                exports.AnnotationLayer = AnnotationLayer;\n            /***/ },\n            /* 30 */ /***/ (__unused_webpack_module, exports)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.ColorConverters = void 0;\n                function makeColorComp(n) {\n                    return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n                }\n                function scaleAndClamp(x) {\n                    return Math.max(0, Math.min(255, 255 * x));\n                }\n                class ColorConverters {\n                    static CMYK_G([c, y, m, k]) {\n                        return [\n                            \"G\",\n                            1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)\n                        ];\n                    }\n                    static G_CMYK([g]) {\n                        return [\n                            \"CMYK\",\n                            0,\n                            0,\n                            0,\n                            1 - g\n                        ];\n                    }\n                    static G_RGB([g]) {\n                        return [\n                            \"RGB\",\n                            g,\n                            g,\n                            g\n                        ];\n                    }\n                    static G_rgb([g]) {\n                        g = scaleAndClamp(g);\n                        return [\n                            g,\n                            g,\n                            g\n                        ];\n                    }\n                    static G_HTML([g]) {\n                        const G = makeColorComp(g);\n                        return `#${G}${G}${G}`;\n                    }\n                    static RGB_G([r, g, b]) {\n                        return [\n                            \"G\",\n                            0.3 * r + 0.59 * g + 0.11 * b\n                        ];\n                    }\n                    static RGB_rgb(color) {\n                        return color.map(scaleAndClamp);\n                    }\n                    static RGB_HTML(color) {\n                        return `#${color.map(makeColorComp).join(\"\")}`;\n                    }\n                    static T_HTML() {\n                        return \"#00000000\";\n                    }\n                    static T_rgb() {\n                        return [\n                            null\n                        ];\n                    }\n                    static CMYK_RGB([c, y, m, k]) {\n                        return [\n                            \"RGB\",\n                            1 - Math.min(1, c + k),\n                            1 - Math.min(1, m + k),\n                            1 - Math.min(1, y + k)\n                        ];\n                    }\n                    static CMYK_rgb([c, y, m, k]) {\n                        return [\n                            scaleAndClamp(1 - Math.min(1, c + k)),\n                            scaleAndClamp(1 - Math.min(1, m + k)),\n                            scaleAndClamp(1 - Math.min(1, y + k))\n                        ];\n                    }\n                    static CMYK_HTML(components) {\n                        const rgb = this.CMYK_RGB(components).slice(1);\n                        return this.RGB_HTML(rgb);\n                    }\n                    static RGB_CMYK([r, g, b]) {\n                        const c = 1 - r;\n                        const m = 1 - g;\n                        const y = 1 - b;\n                        const k = Math.min(c, m, y);\n                        return [\n                            \"CMYK\",\n                            c,\n                            m,\n                            y,\n                            k\n                        ];\n                    }\n                }\n                exports.ColorConverters = ColorConverters;\n            /***/ },\n            /* 31 */ /***/ (__unused_webpack_module, exports)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.NullL10n = void 0;\n                exports.getL10nFallback = getL10nFallback;\n                const DEFAULT_L10N_STRINGS = {\n                    of_pages: \"of {{pagesCount}}\",\n                    page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n                    document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n                    document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n                    document_properties_date_string: \"{{date}}, {{time}}\",\n                    document_properties_page_size_unit_inches: \"in\",\n                    document_properties_page_size_unit_millimeters: \"mm\",\n                    document_properties_page_size_orientation_portrait: \"portrait\",\n                    document_properties_page_size_orientation_landscape: \"landscape\",\n                    document_properties_page_size_name_a3: \"A3\",\n                    document_properties_page_size_name_a4: \"A4\",\n                    document_properties_page_size_name_letter: \"Letter\",\n                    document_properties_page_size_name_legal: \"Legal\",\n                    document_properties_page_size_dimension_string: \"{{width}} \\xd7 {{height}} {{unit}} ({{orientation}})\",\n                    document_properties_page_size_dimension_name_string: \"{{width}} \\xd7 {{height}} {{unit}} ({{name}}, {{orientation}})\",\n                    document_properties_linearized_yes: \"Yes\",\n                    document_properties_linearized_no: \"No\",\n                    additional_layers: \"Additional Layers\",\n                    page_landmark: \"Page {{page}}\",\n                    thumb_page_title: \"Page {{page}}\",\n                    thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n                    find_reached_top: \"Reached top of document, continued from bottom\",\n                    find_reached_bottom: \"Reached end of document, continued from top\",\n                    \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n                    \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n                    \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n                    \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n                    find_not_found: \"Phrase not found\",\n                    page_scale_width: \"Page Width\",\n                    page_scale_fit: \"Page Fit\",\n                    page_scale_auto: \"Automatic Zoom\",\n                    page_scale_actual: \"Actual Size\",\n                    page_scale_percent: \"{{scale}}%\",\n                    loading_error: \"An error occurred while loading the PDF.\",\n                    invalid_file_error: \"Invalid or corrupted PDF file.\",\n                    missing_file_error: \"Missing PDF file.\",\n                    unexpected_response_error: \"Unexpected server response.\",\n                    rendering_error: \"An error occurred while rendering the page.\",\n                    annotation_date_string: \"{{date}}, {{time}}\",\n                    printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n                    printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n                    web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n                    free_text2_default_content: \"Start typing\\u2026\",\n                    editor_free_text2_aria_label: \"Text Editor\",\n                    editor_ink2_aria_label: \"Draw Editor\",\n                    editor_ink_canvas_aria_label: \"User-created image\",\n                    editor_alt_text_button_label: \"Alt text\",\n                    editor_alt_text_edit_button_label: \"Edit alt text\",\n                    editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n                };\n                DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n                function getL10nFallback(key, args) {\n                    switch(key){\n                        case \"find_match_count\":\n                            key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n                            break;\n                        case \"find_match_count_limit\":\n                            key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n                            break;\n                    }\n                    return DEFAULT_L10N_STRINGS[key] || \"\";\n                }\n                function formatL10nValue(text, args) {\n                    if (!args) return text;\n                    return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name)=>{\n                        return name in args ? args[name] : \"{{\" + name + \"}}\";\n                    });\n                }\n                const NullL10n = {\n                    async getLanguage () {\n                        return \"en-us\";\n                    },\n                    async getDirection () {\n                        return \"ltr\";\n                    },\n                    async get (key, args = null, fallback = getL10nFallback(key, args)) {\n                        return formatL10nValue(fallback, args);\n                    },\n                    async translate (element) {}\n                };\n                exports.NullL10n = NullL10n;\n            /***/ },\n            /* 32 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.XfaLayer = void 0;\n                var _xfa_text = __w_pdfjs_require__(25);\n                class XfaLayer {\n                    static setupStorage(html, id, element, storage, intent) {\n                        const storedData = storage.getValue(id, {\n                            value: null\n                        });\n                        switch(element.name){\n                            case \"textarea\":\n                                if (storedData.value !== null) html.textContent = storedData.value;\n                                if (intent === \"print\") break;\n                                html.addEventListener(\"input\", (event)=>{\n                                    storage.setValue(id, {\n                                        value: event.target.value\n                                    });\n                                });\n                                break;\n                            case \"input\":\n                                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                                    if (storedData.value === element.attributes.xfaOn) html.setAttribute(\"checked\", true);\n                                    else if (storedData.value === element.attributes.xfaOff) html.removeAttribute(\"checked\");\n                                    if (intent === \"print\") break;\n                                    html.addEventListener(\"change\", (event)=>{\n                                        storage.setValue(id, {\n                                            value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                                        });\n                                    });\n                                } else {\n                                    if (storedData.value !== null) html.setAttribute(\"value\", storedData.value);\n                                    if (intent === \"print\") break;\n                                    html.addEventListener(\"input\", (event)=>{\n                                        storage.setValue(id, {\n                                            value: event.target.value\n                                        });\n                                    });\n                                }\n                                break;\n                            case \"select\":\n                                if (storedData.value !== null) {\n                                    html.setAttribute(\"value\", storedData.value);\n                                    for (const option of element.children){\n                                        if (option.attributes.value === storedData.value) option.attributes.selected = true;\n                                        else if (option.attributes.hasOwnProperty(\"selected\")) delete option.attributes.selected;\n                                    }\n                                }\n                                html.addEventListener(\"input\", (event)=>{\n                                    const options = event.target.options;\n                                    const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                                    storage.setValue(id, {\n                                        value: value\n                                    });\n                                });\n                                break;\n                        }\n                    }\n                    static setAttributes({ html, element, storage = null, intent, linkService }) {\n                        const { attributes } = element;\n                        const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n                        if (attributes.type === \"radio\") attributes.name = `${attributes.name}-${intent}`;\n                        for (const [key, value] of Object.entries(attributes)){\n                            if (value === null || value === undefined) continue;\n                            switch(key){\n                                case \"class\":\n                                    if (value.length) html.setAttribute(key, value.join(\" \"));\n                                    break;\n                                case \"dataId\":\n                                    break;\n                                case \"id\":\n                                    html.setAttribute(\"data-element-id\", value);\n                                    break;\n                                case \"style\":\n                                    Object.assign(html.style, value);\n                                    break;\n                                case \"textContent\":\n                                    html.textContent = value;\n                                    break;\n                                default:\n                                    if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") html.setAttribute(key, value);\n                            }\n                        }\n                        if (isHTMLAnchorElement) linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n                        if (storage && attributes.dataId) this.setupStorage(html, attributes.dataId, element, storage);\n                    }\n                    static render(parameters) {\n                        const storage = parameters.annotationStorage;\n                        const linkService = parameters.linkService;\n                        const root = parameters.xfaHtml;\n                        const intent = parameters.intent || \"display\";\n                        const rootHtml = document.createElement(root.name);\n                        if (root.attributes) this.setAttributes({\n                            html: rootHtml,\n                            element: root,\n                            intent: intent,\n                            linkService: linkService\n                        });\n                        const stack = [\n                            [\n                                root,\n                                -1,\n                                rootHtml\n                            ]\n                        ];\n                        const rootDiv = parameters.div;\n                        rootDiv.append(rootHtml);\n                        if (parameters.viewport) {\n                            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n                            rootDiv.style.transform = transform;\n                        }\n                        if (intent !== \"richText\") rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n                        const textDivs = [];\n                        while(stack.length > 0){\n                            const [parent, i, html] = stack.at(-1);\n                            if (i + 1 === parent.children.length) {\n                                stack.pop();\n                                continue;\n                            }\n                            const child = parent.children[++stack.at(-1)[1]];\n                            if (child === null) continue;\n                            const { name } = child;\n                            if (name === \"#text\") {\n                                const node = document.createTextNode(child.value);\n                                textDivs.push(node);\n                                html.append(node);\n                                continue;\n                            }\n                            const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n                            html.append(childHtml);\n                            if (child.attributes) this.setAttributes({\n                                html: childHtml,\n                                element: child,\n                                storage: storage,\n                                intent: intent,\n                                linkService: linkService\n                            });\n                            if (child.children && child.children.length > 0) stack.push([\n                                child,\n                                -1,\n                                childHtml\n                            ]);\n                            else if (child.value) {\n                                const node = document.createTextNode(child.value);\n                                if (_xfa_text.XfaText.shouldBuildText(name)) textDivs.push(node);\n                                childHtml.append(node);\n                            }\n                        }\n                        for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\"))el.setAttribute(\"readOnly\", true);\n                        return {\n                            textDivs: textDivs\n                        };\n                    }\n                    static update(parameters) {\n                        const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n                        parameters.div.style.transform = transform;\n                        parameters.div.hidden = false;\n                    }\n                }\n                exports.XfaLayer = XfaLayer;\n            /***/ },\n            /* 33 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.InkEditor = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _editor = __w_pdfjs_require__(4);\n                var _annotation_layer = __w_pdfjs_require__(29);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _tools = __w_pdfjs_require__(5);\n                class InkEditor extends _editor.AnnotationEditor {\n                    #baseHeight = 0;\n                    #baseWidth = 0;\n                    #boundCanvasPointermove = this.canvasPointermove.bind(this);\n                    #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n                    #boundCanvasPointerup = this.canvasPointerup.bind(this);\n                    #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n                    #currentPath2D = new Path2D();\n                    #disableEditing = false;\n                    #hasSomethingToDraw = false;\n                    #isCanvasInitialized = false;\n                    #observer = null;\n                    #realWidth = 0;\n                    #realHeight = 0;\n                    #requestFrameCallback = null;\n                    static _defaultColor = null;\n                    static _defaultOpacity = 1;\n                    static _defaultThickness = 1;\n                    static _type = \"ink\";\n                    constructor(params){\n                        super({\n                            ...params,\n                            name: \"inkEditor\"\n                        });\n                        this.color = params.color || null;\n                        this.thickness = params.thickness || null;\n                        this.opacity = params.opacity || null;\n                        this.paths = [];\n                        this.bezierPath2D = [];\n                        this.allRawPaths = [];\n                        this.currentPath = [];\n                        this.scaleFactor = 1;\n                        this.translationX = this.translationY = 0;\n                        this.x = 0;\n                        this.y = 0;\n                        this._willKeepAspectRatio = true;\n                    }\n                    static initialize(l10n) {\n                        _editor.AnnotationEditor.initialize(l10n, {\n                            strings: [\n                                \"editor_ink_canvas_aria_label\",\n                                \"editor_ink2_aria_label\"\n                            ]\n                        });\n                    }\n                    static updateDefaultParams(type, value) {\n                        switch(type){\n                            case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                                InkEditor._defaultThickness = value;\n                                break;\n                            case _util.AnnotationEditorParamsType.INK_COLOR:\n                                InkEditor._defaultColor = value;\n                                break;\n                            case _util.AnnotationEditorParamsType.INK_OPACITY:\n                                InkEditor._defaultOpacity = value / 100;\n                                break;\n                        }\n                    }\n                    updateParams(type, value) {\n                        switch(type){\n                            case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                                this.#updateThickness(value);\n                                break;\n                            case _util.AnnotationEditorParamsType.INK_COLOR:\n                                this.#updateColor(value);\n                                break;\n                            case _util.AnnotationEditorParamsType.INK_OPACITY:\n                                this.#updateOpacity(value);\n                                break;\n                        }\n                    }\n                    static get defaultPropertiesToUpdate() {\n                        return [\n                            [\n                                _util.AnnotationEditorParamsType.INK_THICKNESS,\n                                InkEditor._defaultThickness\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.INK_COLOR,\n                                InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.INK_OPACITY,\n                                Math.round(InkEditor._defaultOpacity * 100)\n                            ]\n                        ];\n                    }\n                    get propertiesToUpdate() {\n                        return [\n                            [\n                                _util.AnnotationEditorParamsType.INK_THICKNESS,\n                                this.thickness || InkEditor._defaultThickness\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.INK_COLOR,\n                                this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor\n                            ],\n                            [\n                                _util.AnnotationEditorParamsType.INK_OPACITY,\n                                Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))\n                            ]\n                        ];\n                    }\n                    #updateThickness(thickness) {\n                        const savedThickness = this.thickness;\n                        this.addCommands({\n                            cmd: ()=>{\n                                this.thickness = thickness;\n                                this.#fitToContent();\n                            },\n                            undo: ()=>{\n                                this.thickness = savedThickness;\n                                this.#fitToContent();\n                            },\n                            mustExec: true,\n                            type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n                            overwriteIfSameType: true,\n                            keepUndo: true\n                        });\n                    }\n                    #updateColor(color) {\n                        const savedColor = this.color;\n                        this.addCommands({\n                            cmd: ()=>{\n                                this.color = color;\n                                this.#redraw();\n                            },\n                            undo: ()=>{\n                                this.color = savedColor;\n                                this.#redraw();\n                            },\n                            mustExec: true,\n                            type: _util.AnnotationEditorParamsType.INK_COLOR,\n                            overwriteIfSameType: true,\n                            keepUndo: true\n                        });\n                    }\n                    #updateOpacity(opacity) {\n                        opacity /= 100;\n                        const savedOpacity = this.opacity;\n                        this.addCommands({\n                            cmd: ()=>{\n                                this.opacity = opacity;\n                                this.#redraw();\n                            },\n                            undo: ()=>{\n                                this.opacity = savedOpacity;\n                                this.#redraw();\n                            },\n                            mustExec: true,\n                            type: _util.AnnotationEditorParamsType.INK_OPACITY,\n                            overwriteIfSameType: true,\n                            keepUndo: true\n                        });\n                    }\n                    rebuild() {\n                        if (!this.parent) return;\n                        super.rebuild();\n                        if (this.div === null) return;\n                        if (!this.canvas) {\n                            this.#createCanvas();\n                            this.#createObserver();\n                        }\n                        if (!this.isAttachedToDOM) {\n                            this.parent.add(this);\n                            this.#setCanvasDims();\n                        }\n                        this.#fitToContent();\n                    }\n                    remove() {\n                        if (this.canvas === null) return;\n                        if (!this.isEmpty()) this.commit();\n                        this.canvas.width = this.canvas.height = 0;\n                        this.canvas.remove();\n                        this.canvas = null;\n                        this.#observer.disconnect();\n                        this.#observer = null;\n                        super.remove();\n                    }\n                    setParent(parent) {\n                        if (!this.parent && parent) this._uiManager.removeShouldRescale(this);\n                        else if (this.parent && parent === null) this._uiManager.addShouldRescale(this);\n                        super.setParent(parent);\n                    }\n                    onScaleChanging() {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        const width = this.width * parentWidth;\n                        const height = this.height * parentHeight;\n                        this.setDimensions(width, height);\n                    }\n                    enableEditMode() {\n                        if (this.#disableEditing || this.canvas === null) return;\n                        super.enableEditMode();\n                        this._isDraggable = false;\n                        this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n                    }\n                    disableEditMode() {\n                        if (!this.isInEditMode() || this.canvas === null) return;\n                        super.disableEditMode();\n                        this._isDraggable = !this.isEmpty();\n                        this.div.classList.remove(\"editing\");\n                        this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n                    }\n                    onceAdded() {\n                        this._isDraggable = !this.isEmpty();\n                    }\n                    isEmpty() {\n                        return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n                    }\n                    #getInitialBBox() {\n                        const { parentRotation, parentDimensions: [width, height] } = this;\n                        switch(parentRotation){\n                            case 90:\n                                return [\n                                    0,\n                                    height,\n                                    height,\n                                    width\n                                ];\n                            case 180:\n                                return [\n                                    width,\n                                    height,\n                                    width,\n                                    height\n                                ];\n                            case 270:\n                                return [\n                                    width,\n                                    0,\n                                    height,\n                                    width\n                                ];\n                            default:\n                                return [\n                                    0,\n                                    0,\n                                    width,\n                                    height\n                                ];\n                        }\n                    }\n                    #setStroke() {\n                        const { ctx, color, opacity, thickness, parentScale, scaleFactor } = this;\n                        ctx.lineWidth = thickness * parentScale / scaleFactor;\n                        ctx.lineCap = \"round\";\n                        ctx.lineJoin = \"round\";\n                        ctx.miterLimit = 10;\n                        ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n                    }\n                    #startDrawing(x, y) {\n                        this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n                        this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n                        this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n                        this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n                        this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n                        this.isEditing = true;\n                        if (!this.#isCanvasInitialized) {\n                            this.#isCanvasInitialized = true;\n                            this.#setCanvasDims();\n                            this.thickness ||= InkEditor._defaultThickness;\n                            this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n                            this.opacity ??= InkEditor._defaultOpacity;\n                        }\n                        this.currentPath.push([\n                            x,\n                            y\n                        ]);\n                        this.#hasSomethingToDraw = false;\n                        this.#setStroke();\n                        this.#requestFrameCallback = ()=>{\n                            this.#drawPoints();\n                            if (this.#requestFrameCallback) window.requestAnimationFrame(this.#requestFrameCallback);\n                        };\n                        window.requestAnimationFrame(this.#requestFrameCallback);\n                    }\n                    #draw(x, y) {\n                        const [lastX, lastY] = this.currentPath.at(-1);\n                        if (this.currentPath.length > 1 && x === lastX && y === lastY) return;\n                        const currentPath = this.currentPath;\n                        let path2D = this.#currentPath2D;\n                        currentPath.push([\n                            x,\n                            y\n                        ]);\n                        this.#hasSomethingToDraw = true;\n                        if (currentPath.length <= 2) {\n                            path2D.moveTo(...currentPath[0]);\n                            path2D.lineTo(x, y);\n                            return;\n                        }\n                        if (currentPath.length === 3) {\n                            this.#currentPath2D = path2D = new Path2D();\n                            path2D.moveTo(...currentPath[0]);\n                        }\n                        this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n                    }\n                    #endPath() {\n                        if (this.currentPath.length === 0) return;\n                        const lastPoint = this.currentPath.at(-1);\n                        this.#currentPath2D.lineTo(...lastPoint);\n                    }\n                    #stopDrawing(x, y) {\n                        this.#requestFrameCallback = null;\n                        x = Math.min(Math.max(x, 0), this.canvas.width);\n                        y = Math.min(Math.max(y, 0), this.canvas.height);\n                        this.#draw(x, y);\n                        this.#endPath();\n                        let bezier;\n                        if (this.currentPath.length !== 1) bezier = this.#generateBezierPoints();\n                        else {\n                            const xy = [\n                                x,\n                                y\n                            ];\n                            bezier = [\n                                [\n                                    xy,\n                                    xy.slice(),\n                                    xy.slice(),\n                                    xy\n                                ]\n                            ];\n                        }\n                        const path2D = this.#currentPath2D;\n                        const currentPath = this.currentPath;\n                        this.currentPath = [];\n                        this.#currentPath2D = new Path2D();\n                        const cmd = ()=>{\n                            this.allRawPaths.push(currentPath);\n                            this.paths.push(bezier);\n                            this.bezierPath2D.push(path2D);\n                            this.rebuild();\n                        };\n                        const undo = ()=>{\n                            this.allRawPaths.pop();\n                            this.paths.pop();\n                            this.bezierPath2D.pop();\n                            if (this.paths.length === 0) this.remove();\n                            else {\n                                if (!this.canvas) {\n                                    this.#createCanvas();\n                                    this.#createObserver();\n                                }\n                                this.#fitToContent();\n                            }\n                        };\n                        this.addCommands({\n                            cmd: cmd,\n                            undo: undo,\n                            mustExec: true\n                        });\n                    }\n                    #drawPoints() {\n                        if (!this.#hasSomethingToDraw) return;\n                        this.#hasSomethingToDraw = false;\n                        const thickness = Math.ceil(this.thickness * this.parentScale);\n                        const lastPoints = this.currentPath.slice(-3);\n                        const x = lastPoints.map((xy)=>xy[0]);\n                        const y = lastPoints.map((xy)=>xy[1]);\n                        const xMin = Math.min(...x) - thickness;\n                        const xMax = Math.max(...x) + thickness;\n                        const yMin = Math.min(...y) - thickness;\n                        const yMax = Math.max(...y) + thickness;\n                        const { ctx } = this;\n                        ctx.save();\n                        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                        for (const path of this.bezierPath2D)ctx.stroke(path);\n                        ctx.stroke(this.#currentPath2D);\n                        ctx.restore();\n                    }\n                    #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n                        const prevX = (x0 + x1) / 2;\n                        const prevY = (y0 + y1) / 2;\n                        const x3 = (x1 + x2) / 2;\n                        const y3 = (y1 + y2) / 2;\n                        path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n                    }\n                    #generateBezierPoints() {\n                        const path = this.currentPath;\n                        if (path.length <= 2) return [\n                            [\n                                path[0],\n                                path[0],\n                                path.at(-1),\n                                path.at(-1)\n                            ]\n                        ];\n                        const bezierPoints = [];\n                        let i;\n                        let [x0, y0] = path[0];\n                        for(i = 1; i < path.length - 2; i++){\n                            const [x1, y1] = path[i];\n                            const [x2, y2] = path[i + 1];\n                            const x3 = (x1 + x2) / 2;\n                            const y3 = (y1 + y2) / 2;\n                            const control1 = [\n                                x0 + 2 * (x1 - x0) / 3,\n                                y0 + 2 * (y1 - y0) / 3\n                            ];\n                            const control2 = [\n                                x3 + 2 * (x1 - x3) / 3,\n                                y3 + 2 * (y1 - y3) / 3\n                            ];\n                            bezierPoints.push([\n                                [\n                                    x0,\n                                    y0\n                                ],\n                                control1,\n                                control2,\n                                [\n                                    x3,\n                                    y3\n                                ]\n                            ]);\n                            [x0, y0] = [\n                                x3,\n                                y3\n                            ];\n                        }\n                        const [x1, y1] = path[i];\n                        const [x2, y2] = path[i + 1];\n                        const control1 = [\n                            x0 + 2 * (x1 - x0) / 3,\n                            y0 + 2 * (y1 - y0) / 3\n                        ];\n                        const control2 = [\n                            x2 + 2 * (x1 - x2) / 3,\n                            y2 + 2 * (y1 - y2) / 3\n                        ];\n                        bezierPoints.push([\n                            [\n                                x0,\n                                y0\n                            ],\n                            control1,\n                            control2,\n                            [\n                                x2,\n                                y2\n                            ]\n                        ]);\n                        return bezierPoints;\n                    }\n                    #redraw() {\n                        if (this.isEmpty()) {\n                            this.#updateTransform();\n                            return;\n                        }\n                        this.#setStroke();\n                        const { canvas, ctx } = this;\n                        ctx.setTransform(1, 0, 0, 1, 0, 0);\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        this.#updateTransform();\n                        for (const path of this.bezierPath2D)ctx.stroke(path);\n                    }\n                    commit() {\n                        if (this.#disableEditing) return;\n                        super.commit();\n                        this.isEditing = false;\n                        this.disableEditMode();\n                        this.setInForeground();\n                        this.#disableEditing = true;\n                        this.div.classList.add(\"disabled\");\n                        this.#fitToContent(true);\n                        this.makeResizable();\n                        this.parent.addInkEditorIfNeeded(true);\n                        this.moveInDOM();\n                        this.div.focus({\n                            preventScroll: true\n                        });\n                    }\n                    focusin(event) {\n                        if (!this._focusEventsAllowed) return;\n                        super.focusin(event);\n                        this.enableEditMode();\n                    }\n                    canvasPointerdown(event) {\n                        if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) return;\n                        this.setInForeground();\n                        event.preventDefault();\n                        if (event.type !== \"mouse\") this.div.focus();\n                        this.#startDrawing(event.offsetX, event.offsetY);\n                    }\n                    canvasPointermove(event) {\n                        event.preventDefault();\n                        this.#draw(event.offsetX, event.offsetY);\n                    }\n                    canvasPointerup(event) {\n                        event.preventDefault();\n                        this.#endDrawing(event);\n                    }\n                    canvasPointerleave(event) {\n                        this.#endDrawing(event);\n                    }\n                    #endDrawing(event) {\n                        this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n                        this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n                        this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n                        this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n                        setTimeout(()=>{\n                            this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n                        }, 10);\n                        this.#stopDrawing(event.offsetX, event.offsetY);\n                        this.addToAnnotationStorage();\n                        this.setInBackground();\n                    }\n                    #createCanvas() {\n                        this.canvas = document.createElement(\"canvas\");\n                        this.canvas.width = this.canvas.height = 0;\n                        this.canvas.className = \"inkEditorCanvas\";\n                        _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then((msg)=>this.canvas?.setAttribute(\"aria-label\", msg));\n                        this.div.append(this.canvas);\n                        this.ctx = this.canvas.getContext(\"2d\");\n                    }\n                    #createObserver() {\n                        this.#observer = new ResizeObserver((entries)=>{\n                            const rect = entries[0].contentRect;\n                            if (rect.width && rect.height) this.setDimensions(rect.width, rect.height);\n                        });\n                        this.#observer.observe(this.div);\n                    }\n                    get isResizable() {\n                        return !this.isEmpty() && this.#disableEditing;\n                    }\n                    render() {\n                        if (this.div) return this.div;\n                        let baseX, baseY;\n                        if (this.width) {\n                            baseX = this.x;\n                            baseY = this.y;\n                        }\n                        super.render();\n                        _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then((msg)=>this.div?.setAttribute(\"aria-label\", msg));\n                        const [x, y, w, h] = this.#getInitialBBox();\n                        this.setAt(x, y, 0, 0);\n                        this.setDims(w, h);\n                        this.#createCanvas();\n                        if (this.width) {\n                            const [parentWidth, parentHeight] = this.parentDimensions;\n                            this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n                            this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n                            this.#isCanvasInitialized = true;\n                            this.#setCanvasDims();\n                            this.setDims(this.width * parentWidth, this.height * parentHeight);\n                            this.#redraw();\n                            this.div.classList.add(\"disabled\");\n                        } else {\n                            this.div.classList.add(\"editing\");\n                            this.enableEditMode();\n                        }\n                        this.#createObserver();\n                        return this.div;\n                    }\n                    #setCanvasDims() {\n                        if (!this.#isCanvasInitialized) return;\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.canvas.width = Math.ceil(this.width * parentWidth);\n                        this.canvas.height = Math.ceil(this.height * parentHeight);\n                        this.#updateTransform();\n                    }\n                    setDimensions(width, height) {\n                        const roundedWidth = Math.round(width);\n                        const roundedHeight = Math.round(height);\n                        if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) return;\n                        this.#realWidth = roundedWidth;\n                        this.#realHeight = roundedHeight;\n                        this.canvas.style.visibility = \"hidden\";\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.width = width / parentWidth;\n                        this.height = height / parentHeight;\n                        this.fixAndSetPosition();\n                        if (this.#disableEditing) this.#setScaleFactor(width, height);\n                        this.#setCanvasDims();\n                        this.#redraw();\n                        this.canvas.style.visibility = \"visible\";\n                        this.fixDims();\n                    }\n                    #setScaleFactor(width, height) {\n                        const padding = this.#getPadding();\n                        const scaleFactorW = (width - padding) / this.#baseWidth;\n                        const scaleFactorH = (height - padding) / this.#baseHeight;\n                        this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n                    }\n                    #updateTransform() {\n                        const padding = this.#getPadding() / 2;\n                        this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n                    }\n                    static #buildPath2D(bezier) {\n                        const path2D = new Path2D();\n                        for(let i = 0, ii = bezier.length; i < ii; i++){\n                            const [first, control1, control2, second] = bezier[i];\n                            if (i === 0) path2D.moveTo(...first);\n                            path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n                        }\n                        return path2D;\n                    }\n                    static #toPDFCoordinates(points, rect, rotation) {\n                        const [blX, blY, trX, trY] = rect;\n                        switch(rotation){\n                            case 0:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    points[i] += blX;\n                                    points[i + 1] = trY - points[i + 1];\n                                }\n                                break;\n                            case 90:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    const x = points[i];\n                                    points[i] = points[i + 1] + blX;\n                                    points[i + 1] = x + blY;\n                                }\n                                break;\n                            case 180:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    points[i] = trX - points[i];\n                                    points[i + 1] += blY;\n                                }\n                                break;\n                            case 270:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    const x = points[i];\n                                    points[i] = trX - points[i + 1];\n                                    points[i + 1] = trY - x;\n                                }\n                                break;\n                            default:\n                                throw new Error(\"Invalid rotation\");\n                        }\n                        return points;\n                    }\n                    static #fromPDFCoordinates(points, rect, rotation) {\n                        const [blX, blY, trX, trY] = rect;\n                        switch(rotation){\n                            case 0:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    points[i] -= blX;\n                                    points[i + 1] = trY - points[i + 1];\n                                }\n                                break;\n                            case 90:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    const x = points[i];\n                                    points[i] = points[i + 1] - blY;\n                                    points[i + 1] = x - blX;\n                                }\n                                break;\n                            case 180:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    points[i] = trX - points[i];\n                                    points[i + 1] -= blY;\n                                }\n                                break;\n                            case 270:\n                                for(let i = 0, ii = points.length; i < ii; i += 2){\n                                    const x = points[i];\n                                    points[i] = trY - points[i + 1];\n                                    points[i + 1] = trX - x;\n                                }\n                                break;\n                            default:\n                                throw new Error(\"Invalid rotation\");\n                        }\n                        return points;\n                    }\n                    #serializePaths(s, tx, ty, rect) {\n                        const paths = [];\n                        const padding = this.thickness / 2;\n                        const shiftX = s * tx + padding;\n                        const shiftY = s * ty + padding;\n                        for (const bezier of this.paths){\n                            const buffer = [];\n                            const points = [];\n                            for(let j = 0, jj = bezier.length; j < jj; j++){\n                                const [first, control1, control2, second] = bezier[j];\n                                const p10 = s * first[0] + shiftX;\n                                const p11 = s * first[1] + shiftY;\n                                const p20 = s * control1[0] + shiftX;\n                                const p21 = s * control1[1] + shiftY;\n                                const p30 = s * control2[0] + shiftX;\n                                const p31 = s * control2[1] + shiftY;\n                                const p40 = s * second[0] + shiftX;\n                                const p41 = s * second[1] + shiftY;\n                                if (j === 0) {\n                                    buffer.push(p10, p11);\n                                    points.push(p10, p11);\n                                }\n                                buffer.push(p20, p21, p30, p31, p40, p41);\n                                points.push(p20, p21);\n                                if (j === jj - 1) points.push(p40, p41);\n                            }\n                            paths.push({\n                                bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n                                points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n                            });\n                        }\n                        return paths;\n                    }\n                    #getBbox() {\n                        let xMin = Infinity;\n                        let xMax = -Infinity;\n                        let yMin = Infinity;\n                        let yMax = -Infinity;\n                        for (const path of this.paths)for (const [first, control1, control2, second] of path){\n                            const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n                            xMin = Math.min(xMin, bbox[0]);\n                            yMin = Math.min(yMin, bbox[1]);\n                            xMax = Math.max(xMax, bbox[2]);\n                            yMax = Math.max(yMax, bbox[3]);\n                        }\n                        return [\n                            xMin,\n                            yMin,\n                            xMax,\n                            yMax\n                        ];\n                    }\n                    #getPadding() {\n                        return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n                    }\n                    #fitToContent(firstTime = false) {\n                        if (this.isEmpty()) return;\n                        if (!this.#disableEditing) {\n                            this.#redraw();\n                            return;\n                        }\n                        const bbox = this.#getBbox();\n                        const padding = this.#getPadding();\n                        this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n                        this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n                        const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n                        const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.width = width / parentWidth;\n                        this.height = height / parentHeight;\n                        this.setAspectRatio(width, height);\n                        const prevTranslationX = this.translationX;\n                        const prevTranslationY = this.translationY;\n                        this.translationX = -bbox[0];\n                        this.translationY = -bbox[1];\n                        this.#setCanvasDims();\n                        this.#redraw();\n                        this.#realWidth = width;\n                        this.#realHeight = height;\n                        this.setDims(width, height);\n                        const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n                        this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n                    }\n                    static deserialize(data, parent, uiManager) {\n                        if (data instanceof _annotation_layer.InkAnnotationElement) return null;\n                        const editor = super.deserialize(data, parent, uiManager);\n                        editor.thickness = data.thickness;\n                        editor.color = _util.Util.makeHexColor(...data.color);\n                        editor.opacity = data.opacity;\n                        const [pageWidth, pageHeight] = editor.pageDimensions;\n                        const width = editor.width * pageWidth;\n                        const height = editor.height * pageHeight;\n                        const scaleFactor = editor.parentScale;\n                        const padding = data.thickness / 2;\n                        editor.#disableEditing = true;\n                        editor.#realWidth = Math.round(width);\n                        editor.#realHeight = Math.round(height);\n                        const { paths, rect, rotation } = data;\n                        for (let { bezier } of paths){\n                            bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n                            const path = [];\n                            editor.paths.push(path);\n                            let p0 = scaleFactor * (bezier[0] - padding);\n                            let p1 = scaleFactor * (bezier[1] - padding);\n                            for(let i = 2, ii = bezier.length; i < ii; i += 6){\n                                const p10 = scaleFactor * (bezier[i] - padding);\n                                const p11 = scaleFactor * (bezier[i + 1] - padding);\n                                const p20 = scaleFactor * (bezier[i + 2] - padding);\n                                const p21 = scaleFactor * (bezier[i + 3] - padding);\n                                const p30 = scaleFactor * (bezier[i + 4] - padding);\n                                const p31 = scaleFactor * (bezier[i + 5] - padding);\n                                path.push([\n                                    [\n                                        p0,\n                                        p1\n                                    ],\n                                    [\n                                        p10,\n                                        p11\n                                    ],\n                                    [\n                                        p20,\n                                        p21\n                                    ],\n                                    [\n                                        p30,\n                                        p31\n                                    ]\n                                ]);\n                                p0 = p30;\n                                p1 = p31;\n                            }\n                            const path2D = this.#buildPath2D(path);\n                            editor.bezierPath2D.push(path2D);\n                        }\n                        const bbox = editor.#getBbox();\n                        editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n                        editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n                        editor.#setScaleFactor(width, height);\n                        return editor;\n                    }\n                    serialize() {\n                        if (this.isEmpty()) return null;\n                        const rect = this.getRect(0, 0);\n                        const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n                        return {\n                            annotationType: _util.AnnotationEditorType.INK,\n                            color: color,\n                            thickness: this.thickness,\n                            opacity: this.opacity,\n                            paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n                            pageIndex: this.pageIndex,\n                            rect: rect,\n                            rotation: this.rotation,\n                            structTreeParentId: this._structTreeParentId\n                        };\n                    }\n                }\n                exports.InkEditor = InkEditor;\n            /***/ },\n            /* 34 */ /***/ (__unused_webpack_module, exports, __w_pdfjs_require__)=>{\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.StampEditor = void 0;\n                var _util = __w_pdfjs_require__(1);\n                var _editor = __w_pdfjs_require__(4);\n                var _display_utils = __w_pdfjs_require__(6);\n                var _annotation_layer = __w_pdfjs_require__(29);\n                class StampEditor extends _editor.AnnotationEditor {\n                    #bitmap = null;\n                    #bitmapId = null;\n                    #bitmapPromise = null;\n                    #bitmapUrl = null;\n                    #bitmapFile = null;\n                    #canvas = null;\n                    #observer = null;\n                    #resizeTimeoutId = null;\n                    #isSvg = false;\n                    #hasBeenAddedInUndoStack = false;\n                    static _type = \"stamp\";\n                    constructor(params){\n                        super({\n                            ...params,\n                            name: \"stampEditor\"\n                        });\n                        this.#bitmapUrl = params.bitmapUrl;\n                        this.#bitmapFile = params.bitmapFile;\n                    }\n                    static initialize(l10n) {\n                        _editor.AnnotationEditor.initialize(l10n);\n                    }\n                    static get supportedTypes() {\n                        const types = [\n                            \"apng\",\n                            \"avif\",\n                            \"bmp\",\n                            \"gif\",\n                            \"jpeg\",\n                            \"png\",\n                            \"svg+xml\",\n                            \"webp\",\n                            \"x-icon\"\n                        ];\n                        return (0, _util.shadow)(this, \"supportedTypes\", types.map((type)=>`image/${type}`));\n                    }\n                    static get supportedTypesStr() {\n                        return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n                    }\n                    static isHandlingMimeForPasting(mime) {\n                        return this.supportedTypes.includes(mime);\n                    }\n                    static paste(item, parent) {\n                        parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n                            bitmapFile: item.getAsFile()\n                        });\n                    }\n                    #getBitmapFetched(data, fromId = false) {\n                        if (!data) {\n                            this.remove();\n                            return;\n                        }\n                        this.#bitmap = data.bitmap;\n                        if (!fromId) {\n                            this.#bitmapId = data.id;\n                            this.#isSvg = data.isSvg;\n                        }\n                        this.#createCanvas();\n                    }\n                    #getBitmapDone() {\n                        this.#bitmapPromise = null;\n                        this._uiManager.enableWaiting(false);\n                        if (this.#canvas) this.div.focus();\n                    }\n                    #getBitmap() {\n                        if (this.#bitmapId) {\n                            this._uiManager.enableWaiting(true);\n                            this._uiManager.imageManager.getFromId(this.#bitmapId).then((data)=>this.#getBitmapFetched(data, true)).finally(()=>this.#getBitmapDone());\n                            return;\n                        }\n                        if (this.#bitmapUrl) {\n                            const url = this.#bitmapUrl;\n                            this.#bitmapUrl = null;\n                            this._uiManager.enableWaiting(true);\n                            this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then((data)=>this.#getBitmapFetched(data)).finally(()=>this.#getBitmapDone());\n                            return;\n                        }\n                        if (this.#bitmapFile) {\n                            const file = this.#bitmapFile;\n                            this.#bitmapFile = null;\n                            this._uiManager.enableWaiting(true);\n                            this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then((data)=>this.#getBitmapFetched(data)).finally(()=>this.#getBitmapDone());\n                            return;\n                        }\n                        const input = document.createElement(\"input\");\n                        input.type = \"file\";\n                        input.accept = StampEditor.supportedTypesStr;\n                        this.#bitmapPromise = new Promise((resolve)=>{\n                            input.addEventListener(\"change\", async ()=>{\n                                if (!input.files || input.files.length === 0) this.remove();\n                                else {\n                                    this._uiManager.enableWaiting(true);\n                                    const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n                                    this.#getBitmapFetched(data);\n                                }\n                                resolve();\n                            });\n                            input.addEventListener(\"cancel\", ()=>{\n                                this.remove();\n                                resolve();\n                            });\n                        }).finally(()=>this.#getBitmapDone());\n                        input.click();\n                    }\n                    remove() {\n                        if (this.#bitmapId) {\n                            this.#bitmap = null;\n                            this._uiManager.imageManager.deleteId(this.#bitmapId);\n                            this.#canvas?.remove();\n                            this.#canvas = null;\n                            this.#observer?.disconnect();\n                            this.#observer = null;\n                        }\n                        super.remove();\n                    }\n                    rebuild() {\n                        if (!this.parent) {\n                            if (this.#bitmapId) this.#getBitmap();\n                            return;\n                        }\n                        super.rebuild();\n                        if (this.div === null) return;\n                        if (this.#bitmapId) this.#getBitmap();\n                        if (!this.isAttachedToDOM) this.parent.add(this);\n                    }\n                    onceAdded() {\n                        this._isDraggable = true;\n                        this.div.focus();\n                    }\n                    isEmpty() {\n                        return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n                    }\n                    get isResizable() {\n                        return true;\n                    }\n                    render() {\n                        if (this.div) return this.div;\n                        let baseX, baseY;\n                        if (this.width) {\n                            baseX = this.x;\n                            baseY = this.y;\n                        }\n                        super.render();\n                        this.div.hidden = true;\n                        if (this.#bitmap) this.#createCanvas();\n                        else this.#getBitmap();\n                        if (this.width) {\n                            const [parentWidth, parentHeight] = this.parentDimensions;\n                            this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n                        }\n                        return this.div;\n                    }\n                    #createCanvas() {\n                        const { div } = this;\n                        let { width, height } = this.#bitmap;\n                        const [pageWidth, pageHeight] = this.pageDimensions;\n                        const MAX_RATIO = 0.75;\n                        if (this.width) {\n                            width = this.width * pageWidth;\n                            height = this.height * pageHeight;\n                        } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n                            const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n                            width *= factor;\n                            height *= factor;\n                        }\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n                        this._uiManager.enableWaiting(false);\n                        const canvas = this.#canvas = document.createElement(\"canvas\");\n                        div.append(canvas);\n                        div.hidden = false;\n                        this.#drawBitmap(width, height);\n                        this.#createObserver();\n                        if (!this.#hasBeenAddedInUndoStack) {\n                            this.parent.addUndoableEditor(this);\n                            this.#hasBeenAddedInUndoStack = true;\n                        }\n                        this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n                            source: this,\n                            details: {\n                                type: \"editing\",\n                                subtype: this.editorType,\n                                data: {\n                                    action: \"inserted_image\"\n                                }\n                            }\n                        });\n                        this.addAltTextButton();\n                    }\n                    #setDimensions(width, height) {\n                        const [parentWidth, parentHeight] = this.parentDimensions;\n                        this.width = width / parentWidth;\n                        this.height = height / parentHeight;\n                        this.setDims(width, height);\n                        if (this._initialOptions?.isCentered) this.center();\n                        else this.fixAndSetPosition();\n                        this._initialOptions = null;\n                        if (this.#resizeTimeoutId !== null) clearTimeout(this.#resizeTimeoutId);\n                        const TIME_TO_WAIT = 200;\n                        this.#resizeTimeoutId = setTimeout(()=>{\n                            this.#resizeTimeoutId = null;\n                            this.#drawBitmap(width, height);\n                        }, TIME_TO_WAIT);\n                    }\n                    #scaleBitmap(width, height) {\n                        const { width: bitmapWidth, height: bitmapHeight } = this.#bitmap;\n                        let newWidth = bitmapWidth;\n                        let newHeight = bitmapHeight;\n                        let bitmap = this.#bitmap;\n                        while(newWidth > 2 * width || newHeight > 2 * height){\n                            const prevWidth = newWidth;\n                            const prevHeight = newHeight;\n                            if (newWidth > 2 * width) newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n                            if (newHeight > 2 * height) newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n                            const offscreen = new OffscreenCanvas(newWidth, newHeight);\n                            const ctx = offscreen.getContext(\"2d\");\n                            ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n                            bitmap = offscreen.transferToImageBitmap();\n                        }\n                        return bitmap;\n                    }\n                    #drawBitmap(width, height) {\n                        width = Math.ceil(width);\n                        height = Math.ceil(height);\n                        const canvas = this.#canvas;\n                        if (!canvas || canvas.width === width && canvas.height === height) return;\n                        canvas.width = width;\n                        canvas.height = height;\n                        const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n                        const ctx = canvas.getContext(\"2d\");\n                        ctx.filter = this._uiManager.hcmFilter;\n                        ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n                    }\n                    #serializeBitmap(toUrl) {\n                        if (toUrl) {\n                            if (this.#isSvg) {\n                                const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n                                if (url) return url;\n                            }\n                            const canvas = document.createElement(\"canvas\");\n                            ({ width: canvas.width, height: canvas.height } = this.#bitmap);\n                            const ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(this.#bitmap, 0, 0);\n                            return canvas.toDataURL();\n                        }\n                        if (this.#isSvg) {\n                            const [pageWidth, pageHeight] = this.pageDimensions;\n                            const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n                            const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n                            const offscreen = new OffscreenCanvas(width, height);\n                            const ctx = offscreen.getContext(\"2d\");\n                            ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n                            return offscreen.transferToImageBitmap();\n                        }\n                        return structuredClone(this.#bitmap);\n                    }\n                    #createObserver() {\n                        this.#observer = new ResizeObserver((entries)=>{\n                            const rect = entries[0].contentRect;\n                            if (rect.width && rect.height) this.#setDimensions(rect.width, rect.height);\n                        });\n                        this.#observer.observe(this.div);\n                    }\n                    static deserialize(data, parent, uiManager) {\n                        if (data instanceof _annotation_layer.StampAnnotationElement) return null;\n                        const editor = super.deserialize(data, parent, uiManager);\n                        const { rect, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;\n                        if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) editor.#bitmapId = bitmapId;\n                        else editor.#bitmapUrl = bitmapUrl;\n                        editor.#isSvg = isSvg;\n                        const [parentWidth, parentHeight] = editor.pageDimensions;\n                        editor.width = (rect[2] - rect[0]) / parentWidth;\n                        editor.height = (rect[3] - rect[1]) / parentHeight;\n                        if (accessibilityData) editor.altTextData = accessibilityData;\n                        return editor;\n                    }\n                    serialize(isForCopying = false, context = null) {\n                        if (this.isEmpty()) return null;\n                        const serialized = {\n                            annotationType: _util.AnnotationEditorType.STAMP,\n                            bitmapId: this.#bitmapId,\n                            pageIndex: this.pageIndex,\n                            rect: this.getRect(0, 0),\n                            rotation: this.rotation,\n                            isSvg: this.#isSvg,\n                            structTreeParentId: this._structTreeParentId\n                        };\n                        if (isForCopying) {\n                            serialized.bitmapUrl = this.#serializeBitmap(true);\n                            serialized.accessibilityData = this.altTextData;\n                            return serialized;\n                        }\n                        const { decorative, altText } = this.altTextData;\n                        if (!decorative && altText) serialized.accessibilityData = {\n                            type: \"Figure\",\n                            alt: altText\n                        };\n                        if (context === null) return serialized;\n                        context.stamps ||= new Map();\n                        const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n                        if (!context.stamps.has(this.#bitmapId)) {\n                            context.stamps.set(this.#bitmapId, {\n                                area: area,\n                                serialized: serialized\n                            });\n                            serialized.bitmap = this.#serializeBitmap(false);\n                        } else if (this.#isSvg) {\n                            const prevData = context.stamps.get(this.#bitmapId);\n                            if (area > prevData.area) {\n                                prevData.area = area;\n                                prevData.serialized.bitmap.close();\n                                prevData.serialized.bitmap = this.#serializeBitmap(false);\n                            }\n                        }\n                        return serialized;\n                    }\n                }\n                exports.StampEditor = StampEditor;\n            /***/ }\n        ];\n        /************************************************************************/ /******/ // The module cache\n        /******/ var __webpack_module_cache__ = {};\n        /******/ /******/ // The require function\n        /******/ function __w_pdfjs_require__(moduleId) {\n            /******/ // Check if module is in cache\n            /******/ var cachedModule = __webpack_module_cache__[moduleId];\n            /******/ if (cachedModule !== undefined) /******/ return cachedModule.exports;\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = __webpack_module_cache__[moduleId] = {\n                /******/ // no module.id needed\n                /******/ // no module.loaded needed\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ __webpack_modules__[moduleId](module1, module1.exports, __w_pdfjs_require__);\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /************************************************************************/ var __webpack_exports__ = {};\n        // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n        (()=>{\n            var exports = __webpack_exports__;\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            Object.defineProperty(exports, \"AbortException\", {\n                enumerable: true,\n                get: function() {\n                    return _util.AbortException;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationEditorLayer\", {\n                enumerable: true,\n                get: function() {\n                    return _annotation_editor_layer.AnnotationEditorLayer;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationEditorParamsType\", {\n                enumerable: true,\n                get: function() {\n                    return _util.AnnotationEditorParamsType;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationEditorType\", {\n                enumerable: true,\n                get: function() {\n                    return _util.AnnotationEditorType;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationEditorUIManager\", {\n                enumerable: true,\n                get: function() {\n                    return _tools.AnnotationEditorUIManager;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationLayer\", {\n                enumerable: true,\n                get: function() {\n                    return _annotation_layer.AnnotationLayer;\n                }\n            });\n            Object.defineProperty(exports, \"AnnotationMode\", {\n                enumerable: true,\n                get: function() {\n                    return _util.AnnotationMode;\n                }\n            });\n            Object.defineProperty(exports, \"CMapCompressionType\", {\n                enumerable: true,\n                get: function() {\n                    return _util.CMapCompressionType;\n                }\n            });\n            Object.defineProperty(exports, \"DOMSVGFactory\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.DOMSVGFactory;\n                }\n            });\n            Object.defineProperty(exports, \"FeatureTest\", {\n                enumerable: true,\n                get: function() {\n                    return _util.FeatureTest;\n                }\n            });\n            Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n                enumerable: true,\n                get: function() {\n                    return _worker_options.GlobalWorkerOptions;\n                }\n            });\n            Object.defineProperty(exports, \"ImageKind\", {\n                enumerable: true,\n                get: function() {\n                    return _util.ImageKind;\n                }\n            });\n            Object.defineProperty(exports, \"InvalidPDFException\", {\n                enumerable: true,\n                get: function() {\n                    return _util.InvalidPDFException;\n                }\n            });\n            Object.defineProperty(exports, \"MissingPDFException\", {\n                enumerable: true,\n                get: function() {\n                    return _util.MissingPDFException;\n                }\n            });\n            Object.defineProperty(exports, \"OPS\", {\n                enumerable: true,\n                get: function() {\n                    return _util.OPS;\n                }\n            });\n            Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n                enumerable: true,\n                get: function() {\n                    return _api.PDFDataRangeTransport;\n                }\n            });\n            Object.defineProperty(exports, \"PDFDateString\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.PDFDateString;\n                }\n            });\n            Object.defineProperty(exports, \"PDFWorker\", {\n                enumerable: true,\n                get: function() {\n                    return _api.PDFWorker;\n                }\n            });\n            Object.defineProperty(exports, \"PasswordResponses\", {\n                enumerable: true,\n                get: function() {\n                    return _util.PasswordResponses;\n                }\n            });\n            Object.defineProperty(exports, \"PermissionFlag\", {\n                enumerable: true,\n                get: function() {\n                    return _util.PermissionFlag;\n                }\n            });\n            Object.defineProperty(exports, \"PixelsPerInch\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.PixelsPerInch;\n                }\n            });\n            Object.defineProperty(exports, \"PromiseCapability\", {\n                enumerable: true,\n                get: function() {\n                    return _util.PromiseCapability;\n                }\n            });\n            Object.defineProperty(exports, \"RenderingCancelledException\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.RenderingCancelledException;\n                }\n            });\n            Object.defineProperty(exports, \"SVGGraphics\", {\n                enumerable: true,\n                get: function() {\n                    return _api.SVGGraphics;\n                }\n            });\n            Object.defineProperty(exports, \"UnexpectedResponseException\", {\n                enumerable: true,\n                get: function() {\n                    return _util.UnexpectedResponseException;\n                }\n            });\n            Object.defineProperty(exports, \"Util\", {\n                enumerable: true,\n                get: function() {\n                    return _util.Util;\n                }\n            });\n            Object.defineProperty(exports, \"VerbosityLevel\", {\n                enumerable: true,\n                get: function() {\n                    return _util.VerbosityLevel;\n                }\n            });\n            Object.defineProperty(exports, \"XfaLayer\", {\n                enumerable: true,\n                get: function() {\n                    return _xfa_layer.XfaLayer;\n                }\n            });\n            Object.defineProperty(exports, \"build\", {\n                enumerable: true,\n                get: function() {\n                    return _api.build;\n                }\n            });\n            Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n                enumerable: true,\n                get: function() {\n                    return _util.createValidAbsoluteUrl;\n                }\n            });\n            Object.defineProperty(exports, \"getDocument\", {\n                enumerable: true,\n                get: function() {\n                    return _api.getDocument;\n                }\n            });\n            Object.defineProperty(exports, \"getFilenameFromUrl\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.getFilenameFromUrl;\n                }\n            });\n            Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.getPdfFilenameFromUrl;\n                }\n            });\n            Object.defineProperty(exports, \"getXfaPageViewport\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.getXfaPageViewport;\n                }\n            });\n            Object.defineProperty(exports, \"isDataScheme\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.isDataScheme;\n                }\n            });\n            Object.defineProperty(exports, \"isPdfFile\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.isPdfFile;\n                }\n            });\n            Object.defineProperty(exports, \"loadScript\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.loadScript;\n                }\n            });\n            Object.defineProperty(exports, \"noContextMenu\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.noContextMenu;\n                }\n            });\n            Object.defineProperty(exports, \"normalizeUnicode\", {\n                enumerable: true,\n                get: function() {\n                    return _util.normalizeUnicode;\n                }\n            });\n            Object.defineProperty(exports, \"renderTextLayer\", {\n                enumerable: true,\n                get: function() {\n                    return _text_layer.renderTextLayer;\n                }\n            });\n            Object.defineProperty(exports, \"setLayerDimensions\", {\n                enumerable: true,\n                get: function() {\n                    return _display_utils.setLayerDimensions;\n                }\n            });\n            Object.defineProperty(exports, \"shadow\", {\n                enumerable: true,\n                get: function() {\n                    return _util.shadow;\n                }\n            });\n            Object.defineProperty(exports, \"updateTextLayer\", {\n                enumerable: true,\n                get: function() {\n                    return _text_layer.updateTextLayer;\n                }\n            });\n            Object.defineProperty(exports, \"version\", {\n                enumerable: true,\n                get: function() {\n                    return _api.version;\n                }\n            });\n            var _util = __w_pdfjs_require__(1);\n            var _api = __w_pdfjs_require__(2);\n            var _display_utils = __w_pdfjs_require__(6);\n            var _text_layer = __w_pdfjs_require__(26);\n            var _annotation_editor_layer = __w_pdfjs_require__(27);\n            var _tools = __w_pdfjs_require__(5);\n            var _annotation_layer = __w_pdfjs_require__(29);\n            var _worker_options = __w_pdfjs_require__(14);\n            var _xfa_layer = __w_pdfjs_require__(32);\n            const pdfjsVersion = \"3.11.174\";\n            const pdfjsBuild = \"ce8716743\";\n        })();\n        /******/ return __webpack_exports__;\n    /******/ })();\n});\n\n});\nparcelRegister(\"hPtJY\", function(module, exports) {\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n});\n\nparcelRegister(\"6ZWSX\", function(module, exports) {\n\n$parcel$export(module.exports, \"Buffer\", () => $51861dfc7ca9d588$export$a143d493d941bafc, (v) => $51861dfc7ca9d588$export$a143d493d941bafc = v);\n$parcel$export(module.exports, \"INSPECT_MAX_BYTES\", () => $51861dfc7ca9d588$export$f99ded8fe4b79145, (v) => $51861dfc7ca9d588$export$f99ded8fe4b79145 = v);\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $51861dfc7ca9d588$export$a143d493d941bafc;\nvar $51861dfc7ca9d588$export$e4cf37d7f6fb9e0a;\nvar $51861dfc7ca9d588$export$f99ded8fe4b79145;\nvar $51861dfc7ca9d588$export$599f31c3813fae4d;\n\"use strict\";\n\nvar $kuxul = parcelRequire(\"kuxul\");\n\nvar $9NvM5 = parcelRequire(\"9NvM5\");\nconst $51861dfc7ca9d588$var$customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\n$51861dfc7ca9d588$export$a143d493d941bafc = $51861dfc7ca9d588$var$Buffer;\n$51861dfc7ca9d588$export$e4cf37d7f6fb9e0a = $51861dfc7ca9d588$var$SlowBuffer;\n$51861dfc7ca9d588$export$f99ded8fe4b79145 = 50;\nconst $51861dfc7ca9d588$var$K_MAX_LENGTH = 0x7fffffff;\n$51861dfc7ca9d588$export$599f31c3813fae4d = $51861dfc7ca9d588$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT = $51861dfc7ca9d588$var$typedArraySupport();\nif (!$51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $51861dfc7ca9d588$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        const arr = new Uint8Array(1);\n        const proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $51861dfc7ca9d588$var$createBuffer(length) {\n    if (length > $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $51861dfc7ca9d588$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $51861dfc7ca9d588$var$allocUnsafe(arg);\n    }\n    return $51861dfc7ca9d588$var$from(arg, encodingOrOffset, length);\n}\n$51861dfc7ca9d588$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $51861dfc7ca9d588$var$from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return $51861dfc7ca9d588$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $51861dfc7ca9d588$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($51861dfc7ca9d588$var$isInstance(value, ArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, ArrayBuffer)) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && ($51861dfc7ca9d588$var$isInstance(value, SharedArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, SharedArrayBuffer))) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $51861dfc7ca9d588$var$Buffer.from(valueOf, encodingOrOffset, length);\n    const b = $51861dfc7ca9d588$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return $51861dfc7ca9d588$var$Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $51861dfc7ca9d588$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $51861dfc7ca9d588$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer, Uint8Array);\nfunction $51861dfc7ca9d588$var$assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $51861dfc7ca9d588$var$alloc(size, fill, encoding) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    if (size <= 0) return $51861dfc7ca9d588$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? $51861dfc7ca9d588$var$createBuffer(size).fill(fill, encoding) : $51861dfc7ca9d588$var$createBuffer(size).fill(fill);\n    return $51861dfc7ca9d588$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $51861dfc7ca9d588$var$Buffer.alloc = function(size, fill, encoding) {\n    return $51861dfc7ca9d588$var$alloc(size, fill, encoding);\n};\nfunction $51861dfc7ca9d588$var$allocUnsafe(size) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    return $51861dfc7ca9d588$var$createBuffer(size < 0 ? 0 : $51861dfc7ca9d588$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $51861dfc7ca9d588$var$Buffer.allocUnsafe = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $51861dfc7ca9d588$var$Buffer.allocUnsafeSlow = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\nfunction $51861dfc7ca9d588$var$fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    const length = $51861dfc7ca9d588$var$byteLength(string, encoding) | 0;\n    let buf = $51861dfc7ca9d588$var$createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : $51861dfc7ca9d588$var$checked(array.length) | 0;\n    const buf = $51861dfc7ca9d588$var$createBuffer(length);\n    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayView(arrayView) {\n    if ($51861dfc7ca9d588$var$isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return $51861dfc7ca9d588$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $51861dfc7ca9d588$var$fromArrayLike(arrayView);\n}\nfunction $51861dfc7ca9d588$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    let buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromObject(obj) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(obj)) {\n        const len = $51861dfc7ca9d588$var$checked(obj.length) | 0;\n        const buf = $51861dfc7ca9d588$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || $51861dfc7ca9d588$var$numberIsNaN(obj.length)) return $51861dfc7ca9d588$var$createBuffer(0);\n        return $51861dfc7ca9d588$var$fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return $51861dfc7ca9d588$var$fromArrayLike(obj.data);\n}\nfunction $51861dfc7ca9d588$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $51861dfc7ca9d588$var$K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction $51861dfc7ca9d588$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $51861dfc7ca9d588$var$Buffer.alloc(+length);\n}\n$51861dfc7ca9d588$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $51861dfc7ca9d588$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$51861dfc7ca9d588$var$Buffer.compare = function compare(a, b) {\n    if ($51861dfc7ca9d588$var$isInstance(a, Uint8Array)) a = $51861dfc7ca9d588$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($51861dfc7ca9d588$var$isInstance(b, Uint8Array)) b = $51861dfc7ca9d588$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(a) || !$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$51861dfc7ca9d588$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $51861dfc7ca9d588$var$Buffer.alloc(0);\n    let i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    const buffer = $51861dfc7ca9d588$var$Buffer.allocUnsafe(length);\n    let pos = 0;\n    for(i = 0; i < list.length; ++i){\n        let buf = list[i];\n        if ($51861dfc7ca9d588$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) {\n                if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) buf = $51861dfc7ca9d588$var$Buffer.from(buf);\n                buf.copy(buffer, pos);\n            } else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $51861dfc7ca9d588$var$byteLength(string, encoding) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $51861dfc7ca9d588$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return $51861dfc7ca9d588$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $51861dfc7ca9d588$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$51861dfc7ca9d588$var$Buffer.byteLength = $51861dfc7ca9d588$var$byteLength;\nfunction $51861dfc7ca9d588$var$slowToString(encoding, start, end) {\n    let loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return $51861dfc7ca9d588$var$hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8Slice(this, start, end);\n        case \"ascii\":\n            return $51861dfc7ca9d588$var$asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return $51861dfc7ca9d588$var$latin1Slice(this, start, end);\n        case \"base64\":\n            return $51861dfc7ca9d588$var$base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $51861dfc7ca9d588$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$51861dfc7ca9d588$var$Buffer.prototype._isBuffer = true;\nfunction $51861dfc7ca9d588$var$swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(let i = 0; i < len; i += 2)$51861dfc7ca9d588$var$swap(this, i, i + 1);\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(let i = 0; i < len; i += 4){\n        $51861dfc7ca9d588$var$swap(this, i, i + 3);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(let i = 0; i < len; i += 8){\n        $51861dfc7ca9d588$var$swap(this, i, i + 7);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 6);\n        $51861dfc7ca9d588$var$swap(this, i + 2, i + 5);\n        $51861dfc7ca9d588$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return $51861dfc7ca9d588$var$utf8Slice(this, 0, length);\n    return $51861dfc7ca9d588$var$slowToString.apply(this, arguments);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toLocaleString = $51861dfc7ca9d588$var$Buffer.prototype.toString;\n$51861dfc7ca9d588$var$Buffer.prototype.equals = function equals(b) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return $51861dfc7ca9d588$var$Buffer.compare(this, b) === 0;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = $51861dfc7ca9d588$export$f99ded8fe4b79145;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif ($51861dfc7ca9d588$var$customInspectSymbol) $51861dfc7ca9d588$var$Buffer.prototype[$51861dfc7ca9d588$var$customInspectSymbol] = $51861dfc7ca9d588$var$Buffer.prototype.inspect;\n$51861dfc7ca9d588$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($51861dfc7ca9d588$var$isInstance(target, Uint8Array)) target = $51861dfc7ca9d588$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $51861dfc7ca9d588$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($51861dfc7ca9d588$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction $51861dfc7ca9d588$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    let i;\n    if (dir) {\n        let foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            let found = true;\n            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $51861dfc7ca9d588$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    let i;\n    for(i = 0; i < length; ++i){\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($51861dfc7ca9d588$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $51861dfc7ca9d588$var$utf8Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$asciiWrite(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$base64Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$ucs2Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$51861dfc7ca9d588$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return $51861dfc7ca9d588$var$hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return $51861dfc7ca9d588$var$asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return $51861dfc7ca9d588$var$base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $51861dfc7ca9d588$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $51861dfc7ca9d588$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $kuxul.fromByteArray(buf);\n    else return $kuxul.fromByteArray(buf.slice(start, end));\n}\nfunction $51861dfc7ca9d588$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while(i < end){\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $51861dfc7ca9d588$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $51861dfc7ca9d588$var$decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $51861dfc7ca9d588$var$asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for(let i = start; i < end; ++i)out += $51861dfc7ca9d588$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $51861dfc7ca9d588$var$utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $51861dfc7ca9d588$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\n$51861dfc7ca9d588$var$Buffer.prototype.readUintLE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUintBE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint8 = $51861dfc7ca9d588$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readBigUInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readBigUInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readBigInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow\n    );\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readBigInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $9NvM5.read(this, offset, true, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $9NvM5.read(this, offset, false, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $9NvM5.read(this, offset, true, 52, 8);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $9NvM5.read(this, offset, false, 52, 8);\n};\nfunction $51861dfc7ca9d588$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintLE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintBE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint8 = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $51861dfc7ca9d588$var$wrtBigUInt64LE(buf, value, offset, min, max) {\n    $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n}\nfunction $51861dfc7ca9d588$var$wrtBigUInt64BE(buf, value, offset, min, max) {\n    $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigUInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigUInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction $51861dfc7ca9d588$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $9NvM5.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $51861dfc7ca9d588$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $9NvM5.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$51861dfc7ca9d588$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$51861dfc7ca9d588$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        const bytes = $51861dfc7ca9d588$var$Buffer.isBuffer(val) ? val : $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\nconst $51861dfc7ca9d588$var$errors = {};\nfunction $51861dfc7ca9d588$var$E(sym, getMessage, Base) {\n    $51861dfc7ca9d588$var$errors[sym] = class NodeError extends Base {\n        constructor(){\n            super();\n            Object.defineProperty(this, \"message\", {\n                value: getMessage.apply(this, arguments),\n                writable: true,\n                configurable: true\n            });\n            // Add the error code to the name to include it in the stack trace.\n            this.name = `${this.name} [${sym}]`;\n            // Access the stack to generate the error message including the error code\n            // from the name.\n            this.stack // eslint-disable-line no-unused-expressions\n            ;\n            // Reset the name to the actual name.\n            delete this.name;\n        }\n        get code() {\n            return sym;\n        }\n        set code(value) {\n            Object.defineProperty(this, \"code\", {\n                configurable: true,\n                enumerable: true,\n                value: value,\n                writable: true\n            });\n        }\n        toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n        }\n    };\n}\n$51861dfc7ca9d588$var$E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n    if (name) return `${name} is outside of buffer bounds`;\n    return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\n$51861dfc7ca9d588$var$E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\n$51861dfc7ca9d588$var$E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = $51861dfc7ca9d588$var$addNumericalSeparator(String(input));\n    else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = $51861dfc7ca9d588$var$addNumericalSeparator(received);\n        received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n}, RangeError);\nfunction $51861dfc7ca9d588$var$addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;\n    return `${val.slice(0, i)}${res}`;\n}\n// CHECK FUNCTIONS\n// ===============\nfunction $51861dfc7ca9d588$var$checkBounds(buf, offset, byteLength) {\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) $51861dfc7ca9d588$var$boundsError(offset, buf.length - (byteLength + 1));\n}\nfunction $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength > 3) {\n            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        } else range = `>= ${min}${n} and <= ${max}${n}`;\n        throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    $51861dfc7ca9d588$var$checkBounds(buf, offset, byteLength);\n}\nfunction $51861dfc7ca9d588$var$validateNumber(value, name) {\n    if (typeof value !== \"number\") throw new $51861dfc7ca9d588$var$errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction $51861dfc7ca9d588$var$boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n        $51861dfc7ca9d588$var$validateNumber(value, type);\n        throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n    if (length < 0) throw new $51861dfc7ca9d588$var$errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n// HELPER FUNCTIONS\n// ================\nconst $51861dfc7ca9d588$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $51861dfc7ca9d588$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($51861dfc7ca9d588$var$INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction $51861dfc7ca9d588$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for(let i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction $51861dfc7ca9d588$var$asciiToBytes(str) {\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$base64ToBytes(str) {\n    return $kuxul.toByteArray($51861dfc7ca9d588$var$base64clean(str));\n}\nfunction $51861dfc7ca9d588$var$blitBuffer(src, dst, offset, length) {\n    let i;\n    for(i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $51861dfc7ca9d588$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $51861dfc7ca9d588$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst $51861dfc7ca9d588$var$hexSliceLookupTable = function() {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for(let i = 0; i < 16; ++i){\n        const i16 = i * 16;\n        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n// Return not function with Error if BigInt not supported\nfunction $51861dfc7ca9d588$var$defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? $51861dfc7ca9d588$var$BufferBigIntNotDefined : fn;\n}\nfunction $51861dfc7ca9d588$var$BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n}\n\n});\nparcelRegister(\"kuxul\", function(module, exports) {\n\n$parcel$export(module.exports, \"toByteArray\", () => $eeb0961446aae8e3$export$d622b2ad8d90c771, (v) => $eeb0961446aae8e3$export$d622b2ad8d90c771 = v);\n$parcel$export(module.exports, \"fromByteArray\", () => $eeb0961446aae8e3$export$6100ba28696e12de, (v) => $eeb0961446aae8e3$export$6100ba28696e12de = v);\nvar $eeb0961446aae8e3$export$a48f0734ac7c2329;\nvar $eeb0961446aae8e3$export$d622b2ad8d90c771;\nvar $eeb0961446aae8e3$export$6100ba28696e12de;\n\"use strict\";\n$eeb0961446aae8e3$export$a48f0734ac7c2329 = $eeb0961446aae8e3$var$byteLength;\n$eeb0961446aae8e3$export$d622b2ad8d90c771 = $eeb0961446aae8e3$var$toByteArray;\n$eeb0961446aae8e3$export$6100ba28696e12de = $eeb0961446aae8e3$var$fromByteArray;\nvar $eeb0961446aae8e3$var$lookup = [];\nvar $eeb0961446aae8e3$var$revLookup = [];\nvar $eeb0961446aae8e3$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $eeb0961446aae8e3$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $eeb0961446aae8e3$var$i = 0, $eeb0961446aae8e3$var$len = $eeb0961446aae8e3$var$code.length; $eeb0961446aae8e3$var$i < $eeb0961446aae8e3$var$len; ++$eeb0961446aae8e3$var$i){\n    $eeb0961446aae8e3$var$lookup[$eeb0961446aae8e3$var$i] = $eeb0961446aae8e3$var$code[$eeb0961446aae8e3$var$i];\n    $eeb0961446aae8e3$var$revLookup[$eeb0961446aae8e3$var$code.charCodeAt($eeb0961446aae8e3$var$i)] = $eeb0961446aae8e3$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$eeb0961446aae8e3$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$eeb0961446aae8e3$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $eeb0961446aae8e3$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $eeb0961446aae8e3$var$byteLength(b64) {\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$toByteArray(b64) {\n    var tmp;\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $eeb0961446aae8e3$var$Arr($eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 18 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 2 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 10 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $eeb0961446aae8e3$var$tripletToBase64(num) {\n    return $eeb0961446aae8e3$var$lookup[num >> 18 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 12 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 6 & 0x3F] + $eeb0961446aae8e3$var$lookup[num & 0x3F];\n}\nfunction $eeb0961446aae8e3$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($eeb0961446aae8e3$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $eeb0961446aae8e3$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($eeb0961446aae8e3$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 2] + $eeb0961446aae8e3$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 10] + $eeb0961446aae8e3$var$lookup[tmp >> 4 & 0x3F] + $eeb0961446aae8e3$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n});\n\nparcelRegister(\"9NvM5\", function(module, exports) {\n\n$parcel$export(module.exports, \"read\", () => $7221566bd4d49f44$export$aafa59e2e03f2942, (v) => $7221566bd4d49f44$export$aafa59e2e03f2942 = v);\n$parcel$export(module.exports, \"write\", () => $7221566bd4d49f44$export$68d8715fc104d294, (v) => $7221566bd4d49f44$export$68d8715fc104d294 = v);\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $7221566bd4d49f44$export$aafa59e2e03f2942;\nvar $7221566bd4d49f44$export$68d8715fc104d294;\n$7221566bd4d49f44$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$7221566bd4d49f44$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n});\n\n\nparcelRegister(\"kjyEk\", function(module, exports) {\n\"use strict\";\n\n});\n\n\nparcelRegister(\"cjFze\", function(module, exports) {\n//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) // AMD. Register as an anonymous module.\n    define([], factory);\n    else // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n})(module.exports, function() {\n    return function download(data, strFileName, strMimeType) {\n        var self = window, defaultMime = \"application/octet-stream\", mimeType = strMimeType || defaultMime, payload = data, url = !strFileName && !strMimeType && payload, anchor = document.createElement(\"a\"), toString = function(a) {\n            return String(a);\n        }, myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString, fileName = strFileName || \"download\", blob, reader;\n        myBlob = myBlob.call ? myBlob.bind(self) : Blob;\n        if (String(this) === \"true\") {\n            payload = [\n                payload,\n                mimeType\n            ];\n            mimeType = payload[0];\n            payload = payload[1];\n        }\n        if (url && url.length < 2048) {\n            fileName = url.split(\"/\").pop().split(\"?\")[0];\n            anchor.href = url; // assign href prop to temp anchor\n            if (anchor.href.indexOf(url) !== -1) {\n                var ajax = new XMLHttpRequest();\n                ajax.open(\"GET\", url, true);\n                ajax.responseType = \"blob\";\n                ajax.onload = function(e) {\n                    download(e.target.response, fileName, defaultMime);\n                };\n                setTimeout(function() {\n                    ajax.send();\n                }, 0); // allows setting custom ajax headers using the return:\n                return ajax;\n            } // end if valid url?\n        } // end if url?\n        //go ahead and download dataURLs right away\n        if (/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)) {\n            if (payload.length > 2096103.424 && myBlob !== toString) {\n                payload = dataUrlToBlob(payload);\n                mimeType = payload.type || defaultMime;\n            } else return navigator.msSaveBlob ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload); // everyone else can save dataURLs un-processed\n        } else if (/([\\x80-\\xff])/.test(payload)) {\n            var i = 0, tempUiArr = new Uint8Array(payload.length), mx = tempUiArr.length;\n            for(i; i < mx; ++i)tempUiArr[i] = payload.charCodeAt(i);\n            payload = new myBlob([\n                tempUiArr\n            ], {\n                type: mimeType\n            });\n        }\n        blob = payload instanceof myBlob ? payload : new myBlob([\n            payload\n        ], {\n            type: mimeType\n        });\n        function dataUrlToBlob(strUrl) {\n            var parts = strUrl.split(/[:;,]/), type = parts[1], decoder = parts[2] == \"base64\" ? atob : decodeURIComponent, binData = decoder(parts.pop()), mx = binData.length, i = 0, uiArr = new Uint8Array(mx);\n            for(i; i < mx; ++i)uiArr[i] = binData.charCodeAt(i);\n            return new myBlob([\n                uiArr\n            ], {\n                type: type\n            });\n        }\n        function saver(url, winMode) {\n            if (\"download\" in anchor) {\n                anchor.href = url;\n                anchor.setAttribute(\"download\", fileName);\n                anchor.className = \"download-js-link\";\n                anchor.innerHTML = \"downloading...\";\n                anchor.style.display = \"none\";\n                document.body.appendChild(anchor);\n                setTimeout(function() {\n                    anchor.click();\n                    document.body.removeChild(anchor);\n                    if (winMode === true) setTimeout(function() {\n                        self.URL.revokeObjectURL(anchor.href);\n                    }, 250);\n                }, 66);\n                return true;\n            }\n            // handle non-a[download] safari as best we can:\n            if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n                if (/^data:/.test(url)) url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n                if (!window.open(url)) {\n                    if (confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")) location.href = url;\n                }\n                return true;\n            }\n            //do iframe dataURL download (old ch+FF):\n            var f = document.createElement(\"iframe\");\n            document.body.appendChild(f);\n            if (!winMode && /^data:/.test(url)) url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n            f.src = url;\n            setTimeout(function() {\n                document.body.removeChild(f);\n            }, 333);\n        } //end saver\n        if (navigator.msSaveBlob) return navigator.msSaveBlob(blob, fileName);\n        if (self.URL) saver(self.URL.createObjectURL(blob), true);\n        else {\n            // handle non-Blob()+non-URL browsers:\n            if (typeof blob === \"string\" || blob.constructor === toString) try {\n                return saver(\"data:\" + mimeType + \";base64,\" + self.btoa(blob));\n            } catch (y) {\n                return saver(\"data:\" + mimeType + \",\" + encodeURIComponent(blob));\n            }\n            // Blob but not URL support:\n            reader = new FileReader();\n            reader.onload = function(e) {\n                saver(this.result);\n            };\n            reader.readAsDataURL(blob);\n        }\n        return true;\n    }; /* end download() */ \n});\n\n});\n\nparcelRegister(\"grh1p\", function(module, exports) {\nmodule.exports = JSON.parse('{\"meetings\":[{\"week\":\"2023-09\",\"label\":\"28 February\",\"theme\":\"1 CR\\xd4NICAS 20-22\",\"chairman\":\"Tom Hanks\",\"opening_song\":133,\"middle_song\":134,\"closing_song\":5,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Ajude os jovens a ser bem-sucedidos\"},\"bible_reading\":{\"reader\":\"Johnny Depp\",\"assignment\":\"1 Cr\\xf4nicas 20: 1-8\"},\"initial_call\":{\"student\":\"Keira Knightley\",\"assistant\":\"Margot Robbie\"},\"return_visit\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Jessica Alba\"},\"talk\":{\"student\":\"Robert Downey Jr.\",\"theme\":\"Jovens -- Voc\\xeas est\\xe3o prontos para se batizar?\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Use os princ\\xedpios b\\xedblicos para ajudar seus filhos a ser bem-sucedidos\"},{\"time\":5,\"speaker\":\"Tom Hanks\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-10\",\"label\":\"7 March\",\"theme\":\"1 CR\\xd4NICAS 23-26\",\"chairman\":\"Will Smith\",\"opening_song\":123,\"middle_song\":101,\"closing_song\":127,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"A adora\\xe7\\xe3o no templo fica bem organizada\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"1 Cr\\xf4nicas 23:21-32\"},\"initial_call\":{\"label\":\"V\\xeddeo do convite da Celebra\\xe7\\xe3o\"},\"return_visit\":{\"student\":\"Emma Stone\",\"assistant\":\"Anne Hathaway\",\"label\":\"Convite da Celebra\\xe7\\xe3o\"},\"talk\":{\"student\":\"Johnny Depp\",\"theme\":\"Por que os crist\\xe3os est\\xe3o organizados?\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Christian Bale\",\"theme\":\"Como ajudar quando acontece um desastre?\"},{\"time\":5,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"Campanha da Celebra\\xe7\\xe3o -- In\\xedcio no s\\xe1bado  , 11 March\"}]},{\"week\":\"2023-11\",\"label\":\"14 March\",\"theme\":\"1 CR\\xd4NICAS 27-29\",\"chairman\":\"Matt Damon\",\"opening_song\":133,\"middle_song\":4,\"closing_song\":45,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"Conselhos amorosos de um pai para seu filho\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"1 Cr\\xf4nicas 27: 1-15\"},\"initial_call\":{\"label\":\"V\\xeddeo da revisita\"},\"return_visit\":{\"student\":\"Meryl Streep\",\"assistant\":\"Angelina Jolie\",\"label\":\"Revisita -- designa\\xe7\\xe3o 1\"},\"bible_study\":{\"student\":\"Julia Roberts\",\"assistant\":\"Nicole Kidman\",\"label\":\"Revisita -- designa\\xe7\\xe3o 2\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"},{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Realiza\\xe7\\xf5es da Organiza\\xe7\\xe3o\"}]},{\"week\":\"2023-12\",\"label\":\"21 March\",\"theme\":\"2 CR\\xd4NICAS 1-4\",\"chairman\":\"Christian Bale\",\"opening_song\":41,\"middle_song\":19,\"closing_song\":135,\"closing_prayer\":\"Dwayne Johnson\",\"spiritual_gems\":\"Will Smith\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"O rei Salom\\xe3o toma uma decis\\xe3o ruim\"},\"bible_reading\":{\"reader\":\"Tom Cruise\",\"assignment\":\"2 Cr\\xf4nicas 4:7-22\"},\"initial_call\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Sandra Bullock\",\"label\":\"Convite da Celebra\\xe7\\xe3o\"},\"return_visit\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Keira Knightley\"},\"bible_study\":{\"student\":\"Cate Blanchett\",\"assistant\":\"Charlize Theron\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Dwayne Johnson\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"Voc\\xea vai estar preparado para o dia mais importante do ano?\"}]},{\"week\":\"2023-13\",\"label\":\"28 March\",\"theme\":\"2 CR\\xd4NICAS 5-7\",\"chairman\":\"Tom Hanks\",\"opening_song\":129,\"middle_song\":36,\"closing_song\":34,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Meu cora\\xe7\\xe3o sempre estar\\xe1 nele\"},\"bible_reading\":{\"reader\":\"Kate Winslet\",\"assignment\":\"2 Cr\\xf4nicas 6:28-42\"},\"initial_call\":{\"student\":\"Natalie Portman\",\"assistant\":\"Reese Witherspoon\",\"label\":\"Convite da Celebra\\xe7\\xe3o\"},\"return_visit\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Viola Davis\"},\"talk\":{\"student\":\"Brad Pitt\",\"theme\":\"E se por alguma circunst\\xe2ncia excepcional n\\xe3o pudermos assistir \\xe0 Celebra\\xe7\\xe3o?\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Will Smith\",\"theme\":\"Proteja o seu cora\\xe7\\xe3o\"},{\"time\":5,\"speaker\":\"Matt Damon\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-14\",\"label\":\"11 April\",\"theme\":\"2 CR\\xd4NICAS 8-9\",\"chairman\":\"Christian Bale\",\"opening_song\":88,\"middle_song\":98,\"closing_song\":79,\"closing_prayer\":\"Morgan Freeman\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Ela dava valor \\xe0 sabedoria\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"2 Cr\\xf4nicas 8:1-16\"},\"initial_call\":{\"label\":\"V\\xeddeo da primeira conversa\"},\"return_visit\":{\"student\":\"Amy Adams\",\"assistant\":\"Helen Mirren\",\"label\":\"Primeira conversa\"},\"bible_study\":{\"student\":\"Julianne Moore\",\"assistant\":\"Jessica Alba\"},\"service_talk\":{\"speaker\":\"Morgan Freeman\",\"theme\":\"Discurso de servi\\xe7o: Permane\\xe7am \\u201Cbem estabelecidos na verdade\\u201D!\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) \\u2014 n.\\xba 2\"}]},{\"week\":\"2023-15\",\"label\":\"18 April\",\"theme\":\"2 CR\\xd4NICAS 10-12\",\"chairman\":\"Matt Damon\",\"opening_song\":103,\"middle_song\":79,\"closing_song\":121,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Conselhos s\\xe1bios podem ajudar voc\\xea\"},\"bible_reading\":{\"reader\":\"Robert Downey Jr.\",\"assignment\":\"2 Cr\\xf4nicas 10:1-15\"},\"initial_call\":{\"student\":\"Julia Roberts\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"student\":\"Anne Hathaway\",\"assistant\":\"Saoirse Ronan\"},\"talk\":{\"student\":\"Tom Cruise\",\"theme\":\"Treine seu estudante da B\\xedblia quando ele pedir um conselho\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Tom Hanks\",\"theme\":\"Como usar os v\\xeddeos que falam sobre o estudo da B\\xedblia?\"},{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-16\",\"label\":\"25 April\",\"theme\":\"2 CR\\xd4NICAS 13-16\",\"chairman\":\"Tom Hanks\",\"opening_song\":3,\"middle_song\":94,\"closing_song\":39,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"Quando devemos confiar em Jeov\\xe1?\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"2 Cr\\xf4nicas 14:1-15\"},\"initial_call\":{\"student\":\"Viola Davis\",\"assistant\":\"Emma Stone\"},\"return_visit\":{\"student\":\"Charlize Theron\",\"assistant\":\"Cate Blanchett\"},\"bible_study\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Meryl Streep\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"Decis\\xf5es que mostram confian\\xe7a em Jeov\\xe1\"}]},{\"week\":\"2023-17\",\"label\":\"2 May\",\"message\":\"N\\xe3o h\\xe1 reuni\\xe3o por causa da <p>Assembleia de Circuito</p> Amigos da Paz\"},{\"week\":\"2023-18\",\"label\":\"9 May\",\"theme\":\"2 CR\\xd4NICAS 20-21\",\"chairman\":\"Will Smith\",\"opening_song\":118,\"middle_song\":119,\"closing_song\":\"Congresso de 2023\",\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"Tenham f\\xe9 em Jeov\\xe1, seu Deus\"},\"bible_reading\":{\"reader\":\"Kate Winslet\",\"assignment\":\"2 Cr\\xf4. 20:20-30\"},\"initial_call\":{\"label\":\"V\\xeddeo da revisita\"},\"return_visit\":{\"student\":\"Meryl Streep\",\"assistant\":\"Sandra Bullock\"},\"bible_study\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Emma Watson\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Tom Cruise\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Matt Damon\",\"theme\":\"Voc\\xea est\\xe1 preparado para uma crise econ\\xf4mica?\"}]},{\"week\":\"2023-19\",\"label\":\"16 May\",\"theme\":\"2 CR\\xd4NICAS 22-24\",\"chairman\":\"Christian Bale\",\"opening_song\":73,\"middle_song\":55,\"closing_song\":37,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"Jeov\\xe1 recompensa atos de coragem\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"2 Cr\\xf4. 22:1-12\"},\"initial_call\":{\"student\":\"Keira Knightley\",\"assistant\":\"Anne Hathaway\"},\"return_visit\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Nicole Kidman\"},\"talk\":{\"student\":\"Brad Pitt\",\"theme\":\"O esp\\xedrito de Jeov\\xe1 vai ajudar voc\\xea a ter coragem.\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) \\u2014 n.\\xba 3\"}]},{\"week\":\"2023-20\",\"label\":\"23 May\",\"theme\":\"2 CR\\xd4NICAS 25-27\",\"chairman\":\"Matt Damon\",\"opening_song\":80,\"middle_song\":136,\"closing_song\":51,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Jeov\\xe1 pode lhe dar muito mais do que isso\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"2 Cr\\xf4. 25:1-13\"},\"initial_call\":{\"student\":\"Margot Robbie\",\"assistant\":\"Viola Davis\"},\"return_visit\":{\"student\":\"Cate Blanchett\",\"assistant\":\"Jennifer Lawrence\"},\"bible_study\":{\"student\":\"Julianne Moore\",\"assistant\":\"Emma Stone\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"Fa\\xe7a Qualquer Sacrif\\xedcio pela Vida Eterna (Mar. 10:29, 30)\"}]},{\"week\":\"2023-21\",\"label\":\"30 May\",\"theme\":\"2 CR\\xd4NICAS 28-29\",\"chairman\":\"Tom Hanks\",\"opening_song\":54,\"middle_song\":56,\"closing_song\":86,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Voc\\xea pode servir a Jeov\\xe1 mesmo sem o exemplo de seus pais\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"2 Cr\\xf4. 28:1-11\"},\"initial_call\":{\"student\":\"Amy Adams\",\"assistant\":\"Jessica Alba\"},\"return_visit\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Halle Berry\"},\"bible_study\":{\"student\":\"Saoirse Ronan\",\"assistant\":\"Julia Roberts\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":8,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"\\u201CJeov\\xe1 \\xe9 o \\u2018pai dos \\xf3rf\\xe3os\\u2019\\u201D\"},{\"time\":7,\"speaker\":\"Will Smith\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-22\",\"label\":\"6 June\",\"theme\":\"2 CR\\xd4NICAS 30-31\",\"chairman\":\"Will Smith\",\"opening_song\":87,\"middle_song\":74,\"closing_song\":115,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201C\\xc9 bom estarmos com nossos irm\\xe3os\\u201D\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"2 Cr\\xf4. 31:11-21\"},\"initial_call\":{\"student\":\"Meryl Streep\",\"assistant\":\"Saoirse Ronan\"},\"return_visit\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Scarlett Johansson\"},\"talk\":{\"student\":\"Johnny Depp\",\"theme\":\"Louve a Jeov\\xe1 com seus coment\\xe1rios nas reuni\\xf5es\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"Torne-se Amigo de Jeov\\xe1 \\u2014 Prepare Seu Coment\\xe1rio\"},{\"time\":10,\"speaker\":\"Will Smith\",\"theme\":\"Realiza\\xe7\\xf5es da organiza\\xe7\\xe3o\"}]},{\"week\":\"2023-23\",\"label\":\"13 June\",\"theme\":\"2 CR\\xd4NICAS 32-33\",\"chairman\":\"Christian Bale\",\"opening_song\":103,\"middle_song\":36,\"closing_song\":90,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CFortale\\xe7a seus irm\\xe3os em tempos dif\\xedceis\\u201D\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"2 Cr\\xf4. 32:1-15\"},\"initial_call\":{\"student\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Keira Knightley\"},\"bible_study\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Charlize Theron\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) \\u2014 n.\\xba 4\"},{\"time\":5,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-24\",\"label\":\"20 June\",\"theme\":\"2 CR\\xd4NICAS 34-36\",\"chairman\":\"Matt Damon\",\"opening_song\":97,\"middle_song\":96,\"closing_song\":117,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"\\u201CVoc\\xea est\\xe1 aplicando tudo que aprende da Palavra de Deus?\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"2 Cr\\xf4. 35:1-14\"},\"initial_call\":{\"student\":\"Halle Berry\",\"assistant\":\"Amy Adams\"},\"return_visit\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Emma Watson\"},\"talk\":{\"student\":\"Tom Cruise\",\"theme\":\"Use o poder da Palavra de Deus na prega\\xe7\\xe3o\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Matt Damon\",\"theme\":\"\\u201CVoc\\xea est\\xe1 usando bem a B\\xedblia em \\xe1udio?\\u201D\"}]},{\"week\":\"2023-25\",\"label\":\"27 June\",\"theme\":\"ESDRAS 1-3\",\"chairman\":\"Will Smith\",\"opening_song\":75,\"middle_song\":58,\"closing_song\":132,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"\\u201CDeixe que Jeov\\xe1 use voc\\xea\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Esd. 2:58-70\"},\"initial_call\":{\"student\":\"Anne Hathaway|Nicole Kidman\",\"assistant\":\"Nicole Kidman|Jennifer Aniston\"},\"return_visit\":{\"student\":\"Jessica Alba\",\"assistant\":\"Viola Davis\"},\"bible_study\":{\"student\":\"Julia Roberts\",\"assistant\":\"Julianne Moore\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Tom Cruise\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"\\u201CTenha alegria ao iniciar conversas\\u201D\"}]},{\"week\":\"2023-26\",\"label\":\"4 July\",\"theme\":\"ESDRAS 4-6\",\"chairman\":\"Tom Hanks\",\"opening_song\":148,\"middle_song\":7,\"closing_song\":130,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Will Smith\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CN\\xe3o interfiram nas obras dessa casa\\u201D\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Esdras 4:8-24\"},\"initial_call\":{\"label\":\"V\\xeddeo da primeira conversa\"},\"return_visit\":{\"student\":\"Emma Stone\",\"assistant\":\"Michelle Pfeiffer\",\"label\":\"Primeira conversa \\u2014 designa\\xe7\\xe3o 1\"},\"bible_study\":{\"student\":\"Meryl Streep\",\"assistant\":\"Margot Robbie|Amy Adams\",\"label\":\"Primeira conversa \\u2014 designa\\xe7\\xe3o 2\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201CN\\xf3s \\u2018defendemos e estabelecemos legalmente as boas novas\\u2019\\u201D\"}]},{\"week\":\"2023-27\",\"label\":\"11 July\",\"theme\":\"ESDRAS 7-8\",\"chairman\":\"Christian Bale\",\"opening_song\":82,\"middle_song\":59,\"closing_song\":134,\"closing_prayer\":\"Johnny Depp\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"\\u201CO modo de agir de Esdras deu honra a Jeov\\xe1\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney|Johnny Depp\",\"assignment\":\"Esdras 8:21-36\"},\"initial_call\":{\"label\":\"V\\xeddeo da revisita\"},\"return_visit\":{\"student\":\"Saoirse Ronan|Jennifer Aniston\",\"assistant\":\"Jennifer Aniston|Viola Davis\",\"label\":\"Revisita \\u2014 designa\\xe7\\xe3o 1\"},\"bible_study\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Halle Berry\",\"label\":\"Revisita \\u2014 designa\\xe7\\xe3o 2\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-28\",\"label\":\"18 July\",\"theme\":\"ESDRAS 9-10\",\"chairman\":\"Matt Damon\",\"opening_song\":89,\"middle_song\":150,\"closing_song\":133,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"\\u201CA desobedi\\xeancia causa sofrimento\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Esdras 9:1-9\"},\"initial_call\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Nicole Kidman\"},\"return_visit\":{\"student\":\"Emma Watson\",\"assistant\":\"Jessica Chastain\"},\"bible_study\":{\"student\":\"Keira Knightley|Brad Pitt\",\"assistant\":\"Saoirse Ronan|Harrison Ford\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"A Obedi\\xeancia nos Protege (2 Tes. 1:8)\"}]},{\"week\":\"2023-29\",\"label\":\"25 July\",\"theme\":\"NEEMIAS 1-2\",\"chairman\":\"Will Smith\",\"opening_song\":47,\"middle_song\":44,\"closing_song\":102,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201COrei imediatamente\\u201D\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Neemias 2:11-20\"},\"initial_call\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Helen Mirren|Jessica Chastain\"},\"return_visit\":{\"student\":\"Julia Roberts\",\"assistant\":\"Anne Hathaway\"},\"bible_study\":{\"student\":\"Viola Davis\",\"assistant\":\"Charlize Theron|Scarlett Johansson\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale|Matt Damon\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"Torne-se Amigo de Jeov\\xe1 \\u2014 Ser\\xe1 Que Jeov\\xe1 Responde Nossas Ora\\xe7\\xf5es?\"}]},{\"week\":\"2023-30\",\"label\":\"1 August\",\"message\":\"N\\xe3o h\\xe1 reuni\\xe3o devido ao <p>Congresso regional de 2023</p> Seja Paciente\"},{\"week\":\"2023-31\",\"label\":\"8 August\",\"theme\":\"NEEMIAS 5-7\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":17,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"\\u201CNeemias queria servir, e n\\xe3o ser servido\\u201D\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Nee. 5:1-13\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Keira Knightley\",\"assistant\":\"Jessica Alba\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Amy Adams\",\"assistant\":\"Meryl Streep\"},\"middle_song\":90,\"living_as_christians\":[{\"theme\":\"Boletim do Corpo Governante (2023) - n.\\xba 5\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Denzel Washington\"},\"closing_song\":35,\"closing_prayer\":\"Tom Cruise\",\"talk\":{\"theme\":\"Evangelizadores bem-sucedidos ajudam uns aos outros.\",\"student\":\"Brad Pitt|Johnny Depp\"}},{\"week\":\"2023-32\",\"label\":\"15 August\",\"theme\":\"NEEMIAS 8-9\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":110,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CA alegria que vem de Jeov\\xe1 \\xe9 a fortaleza de voc\\xeas\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"Nee. 8:1-12\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Emma Stone\"},\"middle_song\":132,\"living_as_christians\":[{\"theme\":\"\\u201CVoc\\xea pode ajudar sua fam\\xedlia a ter mais alegria\\u201D\",\"time\":15,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":123,\"closing_prayer\":\"Denzel Washington\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"student\":\"Julianne Moore\",\"assistant\":\"Margot Robbie\"}},{\"week\":\"2023-33\",\"label\":\"22 August\",\"theme\":\"NEEMIAS 10-11\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":37,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"\\u201CEles fizeram sacrif\\xedcios para servir a Jeov\\xe1\\u201D\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Nee. 10:28-39\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Emma Watson\",\"assistant\":\"Jennifer Aniston\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Jessica Chastain|Amy Adams\",\"assistant\":\"Scarlett Johansson\"},\"middle_song\":81,\"living_as_christians\":[{\"theme\":\"\\u201CQuais s\\xe3o os seus alvos para o novo ano de servi\\xe7o?\\u201D\",\"time\":10,\"speaker\":\"Will Smith\"},{\"theme\":\"\\u201CCampanha especial em setembro para divulgar o Reino de Deus!\\u201D\",\"time\":5,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Tom Cruise\"},\"closing_song\":92,\"closing_prayer\":\"Johnny Depp\",\"talk\":{\"theme\":\"Sacrif\\xedcios que agradam a Deus nos nossos dias.\",\"student\":\"Johnny Depp|Brad Pitt\"}},{\"week\":\"2023-34\",\"label\":\"29 August\",\"theme\":\"NEEMIAS 12-13\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":34,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"\\u201CSeja leal a Jeov\\xe1 ao escolher seus amigos\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Nee. 12:27-39\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Anne Hathaway\",\"assistant\":\"Julia Roberts\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Jennifer Lawrence\",\"assistant\":\"Nicole Kidman\"},\"middle_song\":108,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Matt Damon\"},{\"theme\":\"\\u201CImite o amor leal de Jeov\\xe1\\u201D\",\"time\":10,\"speaker\":\"Denzel Washington\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":84,\"closing_prayer\":\"Brad Pitt\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Viola Davis\"}},{\"week\":\"2023-35\",\"label\":\"5 September\",\"theme\":\"ESTER 1-2\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":137,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"\\u201CSeja modesto assim como Ester\\u201D\"},\"bible_reading\":{\"reader\":\"Tom Cruise\",\"assignment\":\"Ester 1:13-22\"},\"initial_call\":{\"label\":\"V\\xeddeo da primeira conversa\"},\"return_visit\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Jessica Alba\",\"assistant\":\"Saoirse Ronan\"},\"middle_song\":106,\"living_as_christians\":[{\"theme\":\"O Que Outros Jovens Dizem \\u2014 Apar\\xeancia\",\"time\":5,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Realiza\\xe7\\xf5es da organiza\\xe7\\xe3o\",\"time\":10,\"speaker\":\"Tom Hanks\"}],\"service_talk\":{\"speaker\":\"Morgan Freeman\",\"theme\":\"Discurso de servi\\xe7o: Esteja pronto para falar das \\u201Cboas novas de paz\\u201D\"},\"closing_song\":101,\"closing_prayer\":\"Morgan Freeman\",\"talk\":{\"theme\":\"Ajuda de Jesus e dos anjos.\",\"student\":\"Johnny Depp\"}},{\"week\":\"2023-36\",\"label\":\"12 September\",\"theme\":\"ESTER 3-5\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":85,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201CAjude outros a atingir o seu potencial\\u201D\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Ester 3:1-12\"},\"initial_call\":{\"label\":\"V\\xeddeo da revisita\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 16\",\"student\":\"Emma Stone\",\"assistant\":\"Keira Knightley\"},\"middle_song\":65,\"living_as_christians\":[{\"theme\":\"Torne-se Amigo de Jeov\\xe1 \\u2014 Ester Foi Corajosa\",\"time\":5,\"speaker\":\"Will Smith\"},{\"theme\":\"Necessidades locais\",\"time\":10,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Johnny Depp\"},\"closing_song\":125,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 15\",\"student\":\"Meryl Streep\",\"assistant\":\"Julianne Moore\"}},{\"week\":\"2023-37\",\"label\":\"19 September\",\"theme\":\"ESTER 6-8\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":115,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CUma li\\xe7\\xe3o de boa comunica\\xe7\\xe3o\\u201D\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Ester 8:9-17\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 3\",\"student\":\"Margot Robbie\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 12\",\"student\":\"Jessica Chastain\",\"assistant\":\"Michelle Pfeiffer\"},\"middle_song\":148,\"living_as_christians\":[{\"theme\":\"\\u201CConfie em Jeov\\xe1 ao enfrentar bullying\\u201D\",\"time\":15,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Brad Pitt\"},\"closing_song\":124,\"closing_prayer\":\"Dwayne Johnson\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: ensine de modo simples.\",\"student\":\"Tom Cruise\"}},{\"week\":\"2023-38\",\"label\":\"26 September\",\"theme\":\"ESTER 9-10\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":102,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"\\u201CEle usou sua autoridade para ajudar o povo de Deus\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"Ester 9:1-14\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 6\",\"student\":\"Jennifer Aniston\",\"assistant\":\"Amy Adams\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 13\",\"student\":\"Scarlett Johansson\",\"assistant\":\"Emma Watson\"},\"middle_song\":117,\"living_as_christians\":[{\"theme\":\"\\u201CPastores que trabalham para o bem do povo de Jeov\\xe1\\u201D\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":55,\"closing_prayer\":\"Tom Cruise\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 19\",\"student\":\"Viola Davis\",\"assistant\":\"Julia Roberts\"}},{\"week\":\"2023-39\",\"label\":\"3 October\",\"theme\":\"J\\xd3 1-3\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":141,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"\\u201CContinue a mostrar o quanto voc\\xea ama a Jeov\\xe1\\u201D\"},\"bible_reading\":{\"reader\":\"Marlon Brando\",\"assignment\":\"J\\xf3 3:1-26\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 9\",\"student\":\"Jennifer Lawrence\",\"assistant\":\"Elizabeth Olsen\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 20\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Nicole Kidman\"},\"middle_song\":21,\"living_as_christians\":[{\"theme\":\"Eu Achava Que Estava Fazendo Tudo Certo\",\"time\":10,\"speaker\":\"Christian Bale\"},{\"theme\":\"\\u201CUse a p\\xe1gina inicial do JW.ORG em seu minist\\xe9rio\\u201D\",\"time\":5,\"speaker\":\"Dwayne Johnson\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":129,\"closing_prayer\":\"Denzel Washington\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: seja realista e humilde.\",\"student\":\"Robert Downey Jr.\"}},{\"week\":\"2023-40\",\"label\":\"10 October\",\"theme\":\"J\\xd3 4-5\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Matt Damon\",\"opening_song\":121,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"\\u201CCuidado com a desinforma\\xe7\\xe3o\\u201D\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"J\\xf3 5:1-27\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 4\",\"student\":\"Amy Adams\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 15\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Anne Hathaway\"},\"middle_song\":78,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":38,\"closing_prayer\":\"Johnny Depp\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 16\",\"student\":\"Emma Stone\",\"assistant\":\"Jessica Alba\"}},{\"week\":\"2023-41\",\"label\":\"17 October\",\"theme\":\"J\\xd3 6-7\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":33,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"\\u201CQuando a vida parece insuport\\xe1vel\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"J\\xf3 6:1-21\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 7\",\"student\":\"Keira Knightley|Meryl Streep\",\"assistant\":\"Meryl Streep|Emma Stone\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Julianne Moore\",\"assistant\":\"Michelle Pfeiffer\"},\"middle_song\":144,\"living_as_christians\":[{\"theme\":\"\\u201CJeov\\xe1 salva os que t\\xeam esp\\xedrito esmagado\\u201D\",\"time\":15,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":143,\"closing_prayer\":\"Brad Pitt\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: use ilustra\\xe7\\xf5es que toquem o cora\\xe7\\xe3o.\",\"student\":\"Brad Pitt\"}},{\"week\":\"2023-42\",\"label\":\"24 October\",\"theme\":\"J\\xd3 8-10\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Christian Bale\",\"opening_song\":107,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CO amor leal de Deus nos protege das mentiras de Satan\\xe1s\\u201D\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"J\\xf3 9:20-35\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 17\",\"student\":\"Jennifer Aniston\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 3\",\"student\":\"Scarlett Johansson\",\"assistant\":\"Margot Robbie\"},\"middle_song\":109,\"living_as_christians\":[{\"theme\":\"\\u201CAjude pessoas n\\xe3o religiosas a conhecer o Criador\\u201D\",\"time\":10,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":64,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 14\",\"student\":\"Johnny Depp\",\"assistant\":\"Harrison Ford\"}},{\"week\":\"2023-43\",\"label\":\"31 October\",\"theme\":\"J\\xd3 11-12\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":87,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201CTr\\xeas modos de ter sabedoria e se beneficiar dela\\u201D\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"J\\xf3 12:1-25\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Viola Davis|Meryl Streep\",\"assistant\":\"Emma Watson\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 13\",\"student\":\"Robert Downey Jr.\",\"assistant\":\"Tom Cruise\"},\"middle_song\":135,\"living_as_christians\":[{\"theme\":\"\\u201CPais: ajudem seus filhos a ter a sabedoria que vem de Deus\\u201D\",\"time\":15,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":3,\"closing_prayer\":\"Dwayne Johnson\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 19\",\"student\":\"Jessica Chastain\",\"assistant\":\"Julia Roberts\"}},{\"week\":\"2023-44\",\"label\":\"7 November\",\"theme\":\"J\\xd3 13-14\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Matt Damon\",\"opening_song\":151,\"opening_talk\":{\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"\\u201CQuando um homem morre, pode ele viver novamente?\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"J\\xf3 13:1-28\"},\"initial_call\":{\"label\":\"V\\xeddeo da primeira conversa\"},\"return_visit\":{\"label\":\"Primeira conversa\",\"advice\":\"th 2\",\"student\":\"Nicole Kidman\",\"assistant\":\"Amy Adams\"},\"middle_song\":127,\"living_as_christians\":[{\"theme\":\"\\u201C\\u2018Cada um de voc\\xeas deve p\\xf4r algo \\xe0 parte\\u2019\\u201D\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":76,\"closing_prayer\":\"Tom Cruise\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 19\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Jennifer Lawrence|Meryl Streep\"}},{\"week\":\"2023-45\",\"label\":\"14 November\",\"theme\":\"J\\xd3 15-17\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":90,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"\\u201CN\\xe3o imite Elifaz quando for consolar algu\\xe9m\\u201D\"},\"bible_reading\":{\"reader\":\"Robert Downey Jr.\",\"assignment\":\"J\\xf3 17:1-16\"},\"initial_call\":{\"label\":\"V\\xeddeo da revisita\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Elizabeth Olsen\"},\"middle_song\":96,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"closing_song\":118,\"closing_prayer\":\"Denzel Washington\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 8\",\"student\":\"Marlon Brando\",\"assistant\":\"Hugh Jackman\"}},{\"week\":\"2023-46\",\"label\":\"21 November\",\"theme\":\"J\\xd3 18-19\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":44,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"\\u201CNunca abandone seus irm\\xe3os\\u201D\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"J\\xf3 18:1-21\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 12\",\"student\":\"Amy Adams\",\"assistant\":\"Anne Hathaway\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 3\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Keira Knightley\"},\"middle_song\":90,\"living_as_christians\":[{\"theme\":\"Torne-se Amigo de Jeov\\xe1 \\u2014 Ajude os Outros\",\"time\":5,\"speaker\":\"Matt Damon\"},{\"theme\":\"\\u201CUm programa de pastoreio para consolar os que servem em Betel\\u201D\",\"time\":10,\"speaker\":\"Denzel Washington\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":63,\"closing_prayer\":\"Johnny Depp\",\"talk\":{\"theme\":\"Incentive seu estudante a fazer amigos na congrega\\xe7\\xe3o.\",\"student\":\"Johnny Depp\"}},{\"week\":\"2023-47\",\"label\":\"28 November\",\"message\":\"N\\xe3o h\\xe1 reuni\\xe3o devido a <p>Assembleia de Circuito de 2023</p> \\u2018Espere Ansiosamente por Jeov\\xe1\\u2019!\"},{\"week\":\"2023-48\",\"label\":\"5 December\",\"theme\":\"J\\xd3 22-24\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":49,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"\\u201C\\u2018Pode um homem ser \\xfatil para Deus?\\u2019\\u201D\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"J\\xf3 22:1-22\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 11\",\"student\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 2\",\"student\":\"Emma Stone\",\"assistant\":\"Margot Robbie\"},\"middle_song\":134,\"living_as_christians\":[{\"theme\":\"\\u201CPais, ensinem seus filhos a alegrar o cora\\xe7\\xe3o de Deus\\u201D\",\"time\":10,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":25,\"closing_prayer\":\"Brad Pitt\",\"talk\":{\"theme\":\"Uma atitude positiva nos ajuda a continuar \\xfateis para Jeov\\xe1.\",\"student\":\"Marlon Brando\"}},{\"week\":\"2023-49\",\"label\":\"12 December\",\"theme\":\"J\\xd3 25-27\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":34,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"\\u201CA integridade n\\xe3o exige perfei\\xe7\\xe3o\\u201D\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"J\\xf3 25:1\\u201326:14\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Julianne Moore\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 17\",\"student\":\"Julia Roberts\",\"assistant\":\"Scarlett Johansson\"},\"middle_song\":45,\"living_as_christians\":[{\"theme\":\"\\u201CA integridade e os nossos pensamentos\\u201D\",\"time\":5,\"speaker\":\"Tom Hanks\"},{\"theme\":\"Realiza\\xe7\\xf5es da organiza\\xe7\\xe3o\",\"time\":10,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":57,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 15\",\"student\":\"Emma Watson\",\"assistant\":\"Jennifer Aniston\"}},{\"week\":\"2023-50\",\"label\":\"19 December\",\"theme\":\"J\\xd3 28-29\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Christian Bale\",\"opening_song\":39,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"\\u201CVoc\\xea tem uma boa reputa\\xe7\\xe3o assim como J\\xf3?\\u201D\"},\"bible_reading\":{\"reader\":\"George Clooney|Robert Downey Jr.\",\"assignment\":\"J\\xf3 28:1-28\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 3\",\"student\":\"Jessica Alba|Jennifer Aniston\",\"assistant\":\"Jennifer Lawrence\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 17\",\"student\":\"Meryl Streep\",\"assistant\":\"Viola Davis\"},\"middle_song\":121,\"living_as_christians\":[{\"theme\":\"\\u201CComo posso contribuir para nossa boa reputa\\xe7\\xe3o?\\u201D\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":50,\"closing_prayer\":\"Dwayne Johnson\",\"bible_study\":{\"label\":\"Estudo b\\xedblico\",\"advice\":\"th 6\",\"student\":\"Keira Knightley|Amy Adams\",\"assistant\":\"Elizabeth Olsen\"}},{\"week\":\"2023-51\",\"label\":\"26 December\",\"theme\":\"J\\xd3 30-31\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":28,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"\\u201CComo J\\xf3 manteve a castidade\\u201D\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"J\\xf3 31:15-40\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Nicole Kidman\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Robert Downey Jr.\",\"assistant\":\"Brad Pitt\"},\"middle_song\":36,\"living_as_christians\":[{\"theme\":\"\\u201CPor que a pornografia \\xe9 ruim?\\u201D\",\"time\":7,\"speaker\":\"Matt Damon\"},{\"theme\":\"Necessidades locais\",\"time\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Denzel Washington\"},\"closing_song\":74,\"closing_prayer\":\"Tom Cruise\",\"talk\":{\"theme\":\"Como eu posso explicar o que a B\\xedblia diz sobre o homossexualismo?\",\"student\":\"Tom Cruise\"}},{\"week\":\"2024-01\",\"chairman\":\"Christian Bale\",\"label\":\"8 January\",\"theme\":\"J\\xd3 32-33\",\"opening_song\":102,\"opening_talk\":{\"time\":10,\"title\":\"Console os que est\\xe3o ansiosos\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa012\",\"assignment\":\"J\\xf3 32:1-22\",\"reader\":\"Brad Pitt\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Interesse pelas pessoas \\u2014 O que Jesus fez\",\"number\":4,\"assigned\":\"Denzel Washington\"},{\"time\":8,\"title\":\"Interesse pelas pessoas \\u2014 Imite Jesus\",\"number\":5,\"assigned\":\"Will Smith\"}],\"middle_song\":116,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":7,\"conductor\":\"Tom Hanks\",\"reader\":\"Will Smith\"},\"closing_song\":54,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024-02\",\"chairman\":\"Will Smith\",\"label\":\"9 January\",\"theme\":\"J\\xd3 34-35\",\"opening_song\":30,\"opening_talk\":{\"time\":10,\"title\":\"Quando injusti\\xe7as acontecem\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa010\",\"assignment\":\"J\\xf3 35:1-16\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 10 ponto 3\",\"assigned\":\"Anne Hathaway\",\"assistant\":\"Saoirse Ronan\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 1 ponto 4\",\"assigned\":\"Amy Adams\",\"assistant\":\"Reese Witherspoon\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 11 ponto 3\",\"assigned\":\"Emma Stone\",\"assistant\":\"Jessica Chastain\"}],\"middle_song\":58,\"living_as_christians\":[{\"time\":15,\"title\":\"Voc\\xea gosta de pregar a Palavra de modo informal?\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":138,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024-03\",\"chairman\":\"Tom Hanks\",\"label\":\"16 January\",\"theme\":\"J\\xd3 36-37\",\"opening_song\":147,\"opening_talk\":{\"time\":10,\"title\":\"Por que voc\\xea pode confiar na promessa de Deus de nos dar vida eterna?\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assignment\":\"J\\xf3 36:1-21\",\"reader\":\"George Clooney\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 3\",\"assigned\":\"Scarlett Johansson\",\"assistant\":\"Halle Berry\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 5\",\"assigned\":\"Emma Watson\",\"assistant\":\"Julia Roberts\"},{\"time\":5,\"title\":\"Explicando suas cren\\xe7as\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa018\",\"theme\":\"Por que as Testemunhas de Jeov\\xe1 foram perseguidas durante o Holocausto?\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":49,\"living_as_christians\":[{\"time\":15,\"title\":\"Prepare-se para situa\\xe7\\xf5es que envolvem cuidados m\\xe9dicos ou cir\\xfargicos\",\"number\":7,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Johnny Depp\"},\"closing_song\":67,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024-04\",\"chairman\":\"Matt Damon\",\"label\":\"23 January\",\"theme\":\"J\\xd3 38-39\",\"opening_song\":11,\"opening_talk\":{\"time\":10,\"title\":\"Voc\\xea tira tempo para observar a cria\\xe7\\xe3o?\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 5\",\"assignment\":\"J\\xf3 39:1-22\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 3\",\"assigned\":\"Margot Robbie\",\"assistant\":\"Jennifer Aniston\"},{\"time\":5,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 9 ponto 3\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Keira Knightley\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa016\",\"theme\":\"Os acontecimentos mundiais e a atitude das pessoas indicam que uma mudan\\xe7a est\\xe1 pr\\xf3xima.\",\"assigned\":\"Johnny Depp\"}],\"middle_song\":111,\"living_as_christians\":[{\"time\":15,\"title\":\"Observar a cria\\xe7\\xe3o nos ajuda a n\\xe3o nos concentrar em n\\xf3s mesmos\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Will Smith\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":54,\"closing_prayer\":\"Christian Bale\"},{\"week\":\"2024-05\",\"chairman\":\"Christian Bale\",\"label\":\"30 January\",\"theme\":\"J\\xd3 40-42\",\"opening_song\":124,\"opening_talk\":{\"time\":10,\"title\":\"O que aprendemos do que J\\xf3 passou?\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assignment\":\"J\\xf3 42:1-17\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 5 ponto 3\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Meryl Streep\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 11 ponto 4\",\"assigned\":\"Viola Davis\",\"assistant\":\"Elizabeth Olsen\"},{\"time\":4,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa013\",\"theme\":\"A Terra nunca ser\\xe1 destru\\xedda.\",\"assigned\":\"Marlon Brando\"}],\"middle_song\":108,\"living_as_christians\":[{\"time\":15,\"title\":\"Ajude outros a sentir o amor de Jeov\\xe1\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":126,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/06\",\"label\":\"6 February\",\"theme\":\"SALMOS 1-4\",\"chairman\":\"Tom Hanks\",\"opening_song\":150,\"opening_talk\":{\"time\":10,\"title\":\"Apoie o Reino de Deus\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 12\",\"assignment\":\"Sal. 3:1\\u20134:8\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Naturalidade \\u2014 O que Filipe fez\",\"number\":4,\"assigned\":\"Dwayne Johnson\"},{\"time\":8,\"title\":\"Naturalidade \\u2014 Imite Filipe\",\"number\":5,\"assigned\":\"Christian Bale\"}],\"middle_song\":32,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":7,\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":61,\"closing_prayer\":\"Tom Cruise\"},{\"week\":\"2024/07\",\"label\":\"13 February\",\"theme\":\"SALMOS 5-7\",\"chairman\":\"Matt Damon\",\"opening_song\":118,\"opening_talk\":{\"time\":10,\"title\":\"Continue leal apesar dos erros de outros\",\"number\":1,\"speaker\":\"Tom Hanks\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 10\",\"assignment\":\"Sal. 7:1-11\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 1 ponto 3\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Anne Hathaway\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 4\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},{\"time\":2,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 4 ponto 5\",\"assigned\":\"Amy Adams\",\"assistant\":\"Emma Stone\"},{\"time\":4,\"title\":\"Explicando suas cren\\xe7as\",\"number\":7,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 4\",\"theme\":\"Por que as Testemunhas de Jeov\\xe1 decidem n\\xe3o participar em cerim\\xf4nias nacionalistas?\",\"assigned\":\"Dwayne Johnson\",\"assistant\":\"Jennifer Lawrence\"}],\"middle_song\":99,\"living_as_christians\":[{\"time\":15,\"title\":\"Relat\\xf3rio anual de servi\\xe7o\",\"number\":8,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Christian Bale\",\"reader\":\"Brad Pitt\"},\"closing_song\":83,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/08\",\"label\":\"20 February\",\"theme\":\"SALMOS 8-10\",\"chairman\":\"Christian Bale\",\"opening_song\":2,\"opening_talk\":{\"time\":10,\"title\":\"\\u2018Vou louvar-te, \\xf3 Jeov\\xe1\\u2019\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 11\",\"assignment\":\"Sal. 10:1-18\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 5 ponto 4\",\"assigned\":\"Elizabeth Olsen\",\"assistant\":\"Marlon Brando\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"th li\\xe7\\xe3o 7\",\"assigned\":\"Reese Witherspoon\",\"assistant\":\"Emma Watson\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 10\",\"theme\":\"Ajude seu estudante a louvar a Jeov\\xe1.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":10,\"living_as_christians\":[{\"time\":10,\"title\":\"Como dar testemunho informal de modo natural\",\"number\":7,\"speaker\":\"Denzel Washington\"},{\"time\":5,\"title\":\"Necessidades locais\",\"number\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":65,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/09\",\"label\":\"27 February\",\"theme\":\"SALMOS 11-15\",\"chairman\":\"Will Smith\",\"opening_song\":139,\"opening_talk\":{\"time\":10,\"title\":\"Imagine-se no novo mundo de paz\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assignment\":\"Sal. 13:1\\u201314:7\",\"reader\":\"George Clooney\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 5 ponto 3\",\"assigned\":\"Saoirse Ronan\",\"assistant\":\"Chris Hemsworth\"},{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 4\",\"assigned\":\"Michelle Pfeiffer\",\"assistant\":\"Halle Berry\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 7 ponto 4\",\"assigned\":\"Scarlett Johansson\",\"assistant\":\"Nicole Kidman\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":7,\"lesson\":\"th li\\xe7\\xe3o 12\",\"assigned\":\"Julia Roberts\",\"assistant\":\"Meryl Streep\"}],\"middle_song\":8,\"living_as_christians\":[{\"time\":10,\"title\":\"\\u201CA sabedoria \\xe9 melhor do que armas de guerra\\u201D\",\"number\":8,\"speaker\":\"Leonardo DiCaprio\"},{\"time\":5,\"title\":\"Campanha da Celebra\\xe7\\xe3o \\u2014 In\\xedcio no s\\xe1bado, 2 March\",\"number\":9,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":10,\"conductor\":\"Matt Damon\",\"reader\":\"Denzel Washington\"},\"closing_song\":40,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/10\",\"label\":\"4 March\",\"theme\":\"SALMOS 16-17\",\"chairman\":\"Tom Hanks\",\"opening_song\":111,\"opening_talk\":{\"time\":10,\"title\":\"\\u201CJeov\\xe1, minha Fonte de coisas boas\\u201D\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 5\",\"assignment\":\"Sal. 17:1-15\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assigned\":\"Amy Adams\",\"assistant\":\"Viola Davis\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"th li\\xe7\\xe3o 9\",\"assigned\":\"Jennifer Aniston\",\"assistant\":\"Jessica Alba\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":7,\"lesson\":\"th li\\xe7\\xe3o 6\",\"assigned\":\"Reese Witherspoon\",\"assistant\":\"Anne Hathaway\"}],\"middle_song\":20,\"living_as_christians\":[{\"time\":15,\"title\":\"Como podemos nos preparar para a Celebra\\xe7\\xe3o?\",\"number\":8,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Will Smith\",\"reader\":\"Tom Cruise\"},\"closing_song\":73,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/11\",\"label\":\"12 March\",\"theme\":\"SALMO 18\",\"chairman\":\"Matt Damon\",\"opening_song\":148,\"opening_talk\":{\"time\":10,\"title\":\"\\u2018Jeov\\xe1 \\xe9 meu libertador\\u2019\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa010\",\"assignment\":\"Sal. 18:20-39\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Bondade \\u2014 O que Jesus fez\",\"number\":4,\"assigned\":\"Dwayne Johnson\"},{\"time\":8,\"title\":\"Bondade \\u2014 Imite Jesus\",\"number\":5,\"assigned\":\"Tom Hanks\"}],\"middle_song\":60,\"living_as_christians\":[{\"time\":5,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Leonardo DiCaprio\"},{\"time\":10,\"title\":\"Realiza\\xe7\\xf5es da Organiza\\xe7\\xe3o March\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":69,\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/12\",\"label\":\"19 March\",\"theme\":\"SALMOS 19-21\",\"chairman\":\"Will Smith\",\"opening_song\":6,\"opening_talk\":{\"time\":10,\"title\":\"\\u201COs c\\xe9us declaram a gl\\xf3ria de Deus\\u201D\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assignment\":\"Sal. 19:1-14\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 3\",\"assigned\":\"Meryl Streep\",\"assistant\":\"Michelle Pfeiffer\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 4\",\"assigned\":\"Johnny Depp\",\"assistant\":\"Chris Hemsworth\"},{\"time\":5,\"title\":\"Explicando suas cren\\xe7as\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 6\",\"theme\":\"A Ceia do Senhor \\u2014 Por que as Testemunhas de Jeov\\xe1 celebram de modo diferente?\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":141,\"living_as_christians\":[{\"time\":15,\"title\":\"A Cria\\xe7\\xe3o Aumenta Nossa F\\xe9\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Christian Bale\"},\"closing_song\":127,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/13\",\"label\":\"26 March\",\"theme\":\"SALMO 22\",\"chairman\":\"Christian Bale\",\"opening_song\":19,\"opening_talk\":{\"time\":10,\"title\":\"A B\\xedblia predisse detalhes sobre a morte de Jesus\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assignment\":\"Sal. 22:1-19\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 4 ponto 4\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Jennifer Lawrence\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 4 ponto 3\",\"assigned\":\"Emma Stone\",\"assistant\":\"Julianne Moore\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa020\",\"theme\":\"Como as profecias da B\\xedblia fortalecem a nossa f\\xe9?\",\"assigned\":\"Robert Downey Jr.\"}],\"middle_song\":95,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Tom Hanks\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":53,\"closing_prayer\":\"Tom Cruise\"},{\"week\":\"2024/14\",\"label\":\"2 April\",\"theme\":\"SALMOS 23-25\",\"chairman\":\"Tom Hanks\",\"opening_song\":4,\"opening_talk\":{\"time\":10,\"title\":\"\\u201CJeov\\xe1 \\xe9 o meu Pastor\\u201D\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Christian Bale\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 5\",\"assignment\":\"Sal. 23:1\\u201324:10\",\"reader\":\"Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 5\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Harrison Ford\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 9 ponto 3\",\"assigned\":\"Saoirse Ronan\",\"assistant\":\"Nicole Kidman\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 11 ponto 3\",\"assigned\":\"Jennifer Aniston\",\"assistant\":\"Jessica Alba\"}],\"middle_song\":54,\"living_as_christians\":[{\"time\":15,\"title\":\"N\\xf3s rejeitamos a voz de estranhos\",\"number\":7,\"speaker\":\"Tom Hanks\"}],\"service_talk\":{\"time\":30,\"speaker\":\"Morgan Freeman\",\"theme\":\"Imite os profetas \\u2014 sua perseveran\\xe7a, lealdade e paci\\xeancia\"},\"closing_song\":129,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/15\",\"label\":\"9 April\",\"theme\":\"SALMOS 26-28\",\"chairman\":\"Matt Damon\",\"opening_song\":34,\"opening_talk\":{\"time\":10,\"title\":\"Como Davi fortaleceu sua decis\\xe3o de fazer o que \\xe9 certo\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assignment\":\"Sal. 27:1-14\",\"reader\":\"Brad Pitt\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th li\\xe7\\xe3o 3\",\"assigned\":\"Robert Downey Jr.\",\"assistant\":\"Helen Mirren\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 9 ponto 3\",\"assigned\":\"Viola Davis\",\"assistant\":\"Julia Roberts\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa013\",\"theme\":\"O meio ambiente ser\\xe1 restaurado.\",\"assigned\":\"Johnny Depp\"}],\"middle_song\":128,\"living_as_christians\":[{\"time\":15,\"title\":\"Adolescentes que mant\\xeam a integridade\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Will Smith\"},\"closing_song\":38,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/16\",\"label\":\"16 April\",\"theme\":\"SALMOS 29-31\",\"chairman\":\"Christian Bale\",\"opening_song\":108,\"opening_talk\":{\"time\":10,\"title\":\"A disciplina \\xe9 uma express\\xe3o do amor de Deus\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa010\",\"assignment\":\"Sal. 31:1-24\",\"reader\":\"Tom Cruise\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 5 ponto 3\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Viola Davis\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 3\",\"assigned\":\"Amy Adams\",\"assistant\":\"Anne Hathaway\"},{\"time\":3,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 8 ponto 3\",\"assigned\":\"Meryl Streep\",\"assistant\":\"Halle Berry\"},{\"time\":4,\"title\":\"Fazendo disc\\xedpulos\",\"number\":7,\"lesson\":\"th li\\xe7\\xe3o 6\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Michelle Pfeiffer\"}],\"middle_song\":45,\"living_as_christians\":[{\"time\":7,\"title\":\"Por Que Temos F\\xe9 .\\xa0.\\xa0. no Amor de Deus\",\"number\":8,\"speaker\":\"Denzel Washington\"},{\"time\":8,\"title\":\"Atualiza\\xe7\\xf5es do Departamento Local de Projeto/Constru\\xe7\\xe3o \\u2014 2024\",\"number\":9,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":10,\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"closing_song\":99,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/17\",\"label\":\"23 April\",\"theme\":\"SALMOS 32-33\",\"chairman\":\"Will Smith\",\"opening_song\":103,\"opening_talk\":{\"time\":10,\"title\":\"Por que devemos confessar pecados s\\xe9rios?\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assignment\":\"Sal. 33:1-22\",\"reader\":\"Robert Downey Jr.\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Humildade \\u2014 O que Paulo fez\",\"number\":4,\"assigned\":\"Leonardo DiCaprio\"},{\"time\":8,\"title\":\"Humildade \\u2014 Imite Paulo\",\"number\":5,\"assigned\":\"Denzel Washington\"}],\"middle_song\":74,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":7,\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":39,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/18\",\"label\":\"30 April\",\"theme\":\"SALMOS 34-35\",\"chairman\":\"Tom Hanks|Christian Bale\",\"opening_song\":10,\"opening_talk\":{\"time\":10,\"title\":\"\\u201CVou louvar a Jeov\\xe1 todo o tempo\\u201D\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 5\",\"assignment\":\"Sal. 34:1-22\",\"reader\":\"Al Pacino|Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 1 ponto 4\",\"assigned\":\"Hugh Jackman\",\"assistant\":\"Emma Stone\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 4\",\"assigned\":\"Reese Witherspoon|Jennifer Aniston\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Explicando suas cren\\xe7as\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o\\xa017\",\"assigned\":\"Brad Pitt|Amy Adams\",\"assistant\":\"Chris Hemsworth|Jessica Chastain\"}],\"middle_song\":59,\"living_as_christians\":[{\"time\":15,\"title\":\"Tr\\xeas formas de louvar a Jeov\\xe1 nas reuni\\xf5es\",\"number\":7,\"speaker\":\"Tom Hanks|Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/19\",\"label\":\"7 May\",\"theme\":\"SALMOS 36-37\",\"message\":\"N\\xe3o h\\xe1 reuni\\xe3o devido a <p>Assembleia de Circuito de 2024</p> Entre no Descanso de Deus!\"},{\"week\":\"2024/20\",\"label\":\"14 May\",\"theme\":\"SALMOS 38-39\",\"chairman\":\"Matt Damon\",\"opening_song\":125,\"opening_talk\":{\"time\":10,\"title\":\"Livre-se do peso da culpa excessiva\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Brad Pitt\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 2\",\"assignment\":\"Sal. 38:1-22\",\"reader\":\"Harrison Ford|Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Tato \\u2014 O que Paulo fez\",\"number\":4,\"assigned\":\"Will Smith\"},{\"time\":8,\"title\":\"Tato \\u2014 Imite Paulo\",\"number\":5,\"assigned\":\"Dwayne Johnson\"}],\"middle_song\":44,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Leonardo DiCaprio|Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":7,\"conductor\":\"Tom Hanks\",\"reader\":\"Christian Bale|Leonardo DiCaprio\"},\"closing_song\":84,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/21\",\"label\":\"21 May\",\"theme\":\"SALMOS 40-41\",\"chairman\":\"Christian Bale\",\"opening_song\":102,\"opening_talk\":{\"time\":10,\"title\":\"Por que ajudar outros?\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 12\",\"assignment\":\"Sal. 40:1-17\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 2 ponto 3\",\"assigned\":\"Margot Robbie\",\"assistant\":\"Saoirse Ronan\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 3 ponto 5\",\"assigned\":\"Michelle Pfeiffer|Julia Roberts\",\"assistant\":\"Jennifer Lawrence\"},{\"time\":5,\"title\":\"Fazendo disc\\xedpulos\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 19\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Nicole Kidman\"}],\"middle_song\":138,\"living_as_christians\":[{\"time\":15,\"title\":\"Fa\\xe7a o bem aos idosos\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":8,\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/22\",\"label\":\"28 May\",\"theme\":\"SALMOS 42-44\",\"chairman\":\"Will Smith\",\"opening_song\":86,\"opening_talk\":{\"time\":10,\"title\":\"Aproveite bem as instru\\xe7\\xf5es que v\\xeam de Jeov\\xe1\",\"number\":1,\"speaker\":\"Tom Hanks\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Johnny Depp\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 11\",\"assignment\":\"Sal. 44:1-26\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 5 ponto 5\",\"assigned\":\"Anne Hathaway\",\"assistant\":\"Jennifer Aniston\"},{\"time\":5,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 7 ponto 5\",\"assigned\":\"Julia Roberts|Michelle Pfeiffer\",\"assistant\":\"Amy Adams\"},{\"time\":3,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 2\",\"theme\":\"Todos ter\\xe3o sa\\xfade perfeita.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":21,\"living_as_christians\":[{\"time\":15,\"title\":\"Tome decis\\xf5es s\\xe1bias sobre trabalho e educa\\xe7\\xe3o\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":47,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/23\",\"label\":\"4 June\",\"theme\":\"SALMOS 45-47\",\"chairman\":\"Tom Hanks\",\"opening_song\":27,\"opening_talk\":{\"time\":10,\"title\":\"Um c\\xe2ntico sobre o casamento de um Rei\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o 5\",\"assignment\":\"Sal. 45:1-17\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 1 ponto 3\",\"assigned\":\"Viola Davis\",\"assistant\":\"Halle Berry\"},{\"time\":5,\"title\":\"Discurso\",\"number\":5,\"lesson\":\"th li\\xe7\\xe3o\\xa018\",\"theme\":\"Qual \\xe9 a explica\\xe7\\xe3o do Salmo 46:10?\",\"assigned\":\"Robert Downey Jr.\"},{\"time\":4,\"title\":\"Explicando suas cren\\xe7as\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 6 ponto 5\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Jennifer Lawrence\"}],\"middle_song\":131,\"living_as_christians\":[{\"time\":10,\"title\":\"Continue a mostrar amor no seu casamento\",\"number\":7,\"speaker\":\"Tom Hanks\"},{\"time\":5,\"title\":\"Necessidades locais\",\"number\":8,\"speaker\":\"Leonardo DiCaprio\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":111,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/24\",\"label\":\"11 June\",\"theme\":\"SALMOS 48-50\",\"chairman\":\"Matt Damon\",\"opening_song\":126,\"opening_talk\":{\"time\":10,\"title\":\"Pais \\u2014 Fortale\\xe7am a confian\\xe7a da sua fam\\xedlia na organiza\\xe7\\xe3o de Jeov\\xe1\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assignment\":\"Sal. 50:1-23\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Coragem \\u2014 O que Jesus fez\",\"number\":4,\"assigned\":\"Tom Hanks\"},{\"time\":8,\"title\":\"Coragem \\u2014 Imite Jesus\",\"number\":5,\"assigned\":\"Denzel Washington\"}],\"middle_song\":73,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":7,\"conductor\":\"Leonardo DiCaprio\",\"reader\":\"Brad Pitt\"},\"closing_song\":103,\"closing_prayer\":\"Christian Bale\"},{\"week\":\"2024/25\",\"label\":\"18 June\",\"theme\":\"SALMOS 51-53\",\"chairman\":\"Christian Bale\",\"opening_song\":89,\"opening_talk\":{\"time\":10,\"title\":\"O que fazer para n\\xe3o cometer erros graves\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Brad Pitt\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa012\",\"assignment\":\"Sal. 51:1-19\",\"reader\":\"Robert Downey Jr.\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd li\\xe7\\xe3o 7 ponto 3\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Meryl Streep\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 4 ponto 4\",\"assigned\":\"Emma Stone\",\"assistant\":\"Reese Witherspoon\"},{\"time\":3,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd li\\xe7\\xe3o 9 ponto 5\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Amy Adams\"},{\"time\":4,\"title\":\"Fazendo disc\\xedpulos\",\"number\":7,\"lesson\":\"lmd li\\xe7\\xe3o 11 ponto 5\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Saoirse Ronan\"}],\"middle_song\":115,\"living_as_christians\":[{\"time\":15,\"title\":\"O que fazer para corrigir seus erros\",\"number\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Tom Hanks\",\"reader\":\"Will Smith\"},\"closing_song\":129,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/26\",\"label\":\"25 June\",\"theme\":\"SALMOS 54-56\",\"chairman\":\"Will Smith\",\"opening_song\":48,\"opening_talk\":{\"time\":10,\"title\":\"Jeov\\xe1 est\\xe1 do seu lado!\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da B\\xedblia\",\"number\":3,\"lesson\":\"th li\\xe7\\xe3o\\xa010\",\"assignment\":\"Sal. 55:1-23\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th li\\xe7\\xe3o\\xa011\",\"assigned\":\"Michelle Pfeiffer\",\"assistant\":\"Anne Hathaway\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd li\\xe7\\xe3o 7 ponto 4\",\"assigned\":\"Nicole Kidman\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th li\\xe7\\xe3o 9\",\"theme\":\"Nosso amor por Jesus nos motiva a ser corajosos.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":\"\\u201CJeov\\xe1, me d\\xe1 coragem\\u201D\",\"living_as_christians\":[{\"time\":5,\"title\":\"Podemos Ter Alegria Apesar de .\\xa0.\\xa0. Espada\",\"number\":7,\"speaker\":\"Will Smith\"},{\"time\":10,\"title\":\"Realiza\\xe7\\xf5es da Organiza\\xe7\\xe3o June\",\"number\":8,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo b\\xedblico de congrega\\xe7\\xe3o\",\"number\":9,\"conductor\":\"Christian Bale\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":70,\"closing_prayer\":\"Tom Hanks\"}],\"exceptions\":{\"Matt Damon\":[\"2024/26\",\"2024/27\"]},\"congregation\":\"Congregation XYZ\",\"time\":\"19:15\"}');\n\n});\n\nfunction $816683f8c32a91e9$var$_slicedToArray(arr, i) {\n    return $816683f8c32a91e9$var$_arrayWithHoles(arr) || $816683f8c32a91e9$var$_iterableToArrayLimit(arr, i) || $816683f8c32a91e9$var$_unsupportedIterableToArray(arr, i) || $816683f8c32a91e9$var$_nonIterableRest();\n}\nfunction $816683f8c32a91e9$var$_nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction $816683f8c32a91e9$var$_unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return $816683f8c32a91e9$var$_arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $816683f8c32a91e9$var$_arrayLikeToArray(o, minLen);\n}\nfunction $816683f8c32a91e9$var$_arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction $816683f8c32a91e9$var$_iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction $816683f8c32a91e9$var$_arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction $816683f8c32a91e9$export$b327150396135fe7(request) {\n    return new Promise(function(resolve, reject) {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = function() {\n            return resolve(request.result);\n        }; // @ts-ignore - file size hacks\n        request.onabort = request.onerror = function() {\n            return reject(request.error);\n        };\n    });\n}\nfunction $816683f8c32a91e9$export$f51a9068ac82ea43(dbName, storeName) {\n    var request = indexedDB.open(dbName);\n    request.onupgradeneeded = function() {\n        return request.result.createObjectStore(storeName);\n    };\n    var dbp = $816683f8c32a91e9$export$b327150396135fe7(request);\n    return function(txMode, callback) {\n        return dbp.then(function(db) {\n            return callback(db.transaction(storeName, txMode).objectStore(storeName));\n        });\n    };\n}\nvar $816683f8c32a91e9$var$defaultGetStoreFunc;\nfunction $816683f8c32a91e9$var$defaultGetStore() {\n    if (!$816683f8c32a91e9$var$defaultGetStoreFunc) $816683f8c32a91e9$var$defaultGetStoreFunc = $816683f8c32a91e9$export$f51a9068ac82ea43(\"keyval-store\", \"keyval\");\n    return $816683f8c32a91e9$var$defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$3988ae62b71be9a3(key) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        return $816683f8c32a91e9$export$b327150396135fe7(store.get(key));\n    });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$adaa4cf7ef1b65be(key, value) {\n    var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.put(value, key);\n        return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$daa0a5170277c7a8(entries) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        entries.forEach(function(entry) {\n            return store.put(entry[1], entry[0]);\n        });\n        return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$5df405cccea42673(keys) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        return Promise.all(keys.map(function(key) {\n            return $816683f8c32a91e9$export$b327150396135fe7(store.get(key));\n        }));\n    });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$722fbec263ad908a(key, updater) {\n    var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        return(// If I try to chain promises, the transaction closes in browsers\n        // that use a promise polyfill (IE10/11).\n        new Promise(function(resolve, reject) {\n            store.get(key).onsuccess = function() {\n                try {\n                    store.put(updater(this.result), key);\n                    resolve($816683f8c32a91e9$export$b327150396135fe7(store.transaction));\n                } catch (err) {\n                    reject(err);\n                }\n            };\n        }));\n    });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$1d2f21e549771e67(key) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.delete(key);\n        return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$c8aa84257229cac8(keys) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        keys.forEach(function(key) {\n            return store.delete(key);\n        });\n        return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$42ffd38884aecdac() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.clear();\n        return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n    });\n}\nfunction $816683f8c32a91e9$var$eachCursor(store, callback) {\n    store.openCursor().onsuccess = function() {\n        if (!this.result) return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return $816683f8c32a91e9$export$b327150396135fe7(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$ed97f33186d4b816() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        if (store.getAllKeys) return $816683f8c32a91e9$export$b327150396135fe7(store.getAllKeys());\n        var items = [];\n        return $816683f8c32a91e9$var$eachCursor(store, function(cursor) {\n            return items.push(cursor.key);\n        }).then(function() {\n            return items;\n        });\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$68c286be0e7e55b7() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        if (store.getAll) return $816683f8c32a91e9$export$b327150396135fe7(store.getAll());\n        var items = [];\n        return $816683f8c32a91e9$var$eachCursor(store, function(cursor) {\n            return items.push(cursor.value);\n        }).then(function() {\n            return items;\n        });\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function $816683f8c32a91e9$export$3e9f948b41964866() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $816683f8c32a91e9$var$defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) return Promise.all([\n            $816683f8c32a91e9$export$b327150396135fe7(store.getAllKeys()),\n            $816683f8c32a91e9$export$b327150396135fe7(store.getAll())\n        ]).then(function(_ref) {\n            var _ref2 = $816683f8c32a91e9$var$_slicedToArray(_ref, 2), keys = _ref2[0], values = _ref2[1];\n            return keys.map(function(key, i) {\n                return [\n                    key,\n                    values[i]\n                ];\n            });\n        });\n        var items = [];\n        return customStore(\"readonly\", function(store) {\n            return $816683f8c32a91e9$var$eachCursor(store, function(cursor) {\n                return items.push([\n                    cursor.key,\n                    cursor.value\n                ]);\n            }).then(function() {\n                return items;\n            });\n        });\n    });\n}\n\n\nvar $373a7b56970c90d1$export$860a3ce6efe86b24;\n$373a7b56970c90d1$export$860a3ce6efe86b24 = {\n    S: {\n        color: \"IndianRed\",\n        S89: false\n    },\n    CH: {\n        color: \"Pink\",\n        S89: false\n    },\n    SG: {\n        color: \"Violet\",\n        S89: false\n    },\n    CP: {\n        color: \"Salmon\",\n        S89: false\n    },\n    OT: {\n        color: \"Aquamarine\",\n        S89: false\n    },\n    BR: {\n        color: \"Tomato\",\n        S89: true\n    },\n    CSC: {\n        color: \"Orange\",\n        S89: false\n    },\n    CSR: {\n        color: \"Gold\",\n        S89: false\n    },\n    SA: {\n        color: \"SkyBlue\",\n        S89: true\n    },\n    AA: {\n        color: \"LightGreen\",\n        S89: false\n    },\n    TA: {\n        color: \"CadetBlue\",\n        S89: true\n    },\n    DIS: {\n        color: \"RosyBrown\",\n        S89: false\n    },\n    LAC: {\n        color: \"MistyRose\",\n        S89: false\n    }\n};\n\n\nvar $0509828d5a985d17$export$1e1c9db6a3f1bad8;\n$0509828d5a985d17$export$1e1c9db6a3f1bad8 = [\n    [\n        \"c13d94a8148dbeb4e0dee06f1844234a\",\n        \"30adb6e10994a04c581f8f05689681fb\"\n    ],\n    [\n        \"a1d39d1a9dde564f60f0d79f6f723cfc\",\n        \"fc8ec86bdc56847d9361c7226942175f\"\n    ],\n    [\n        \"aacd852415010fed91252a89b62afbf5\",\n        \"e26e6acd0b08074704c91488c21e4cde\"\n    ],\n    [\n        \"1c3f79bea49cd098749574956c1a1ac0\",\n        \"fbe3f2cf5f151042a3c57e0bf01b615f\"\n    ],\n    [\n        \"868f7e114f20dc64542befbd4e4cc9a2\",\n        \"5a5555a14d460cc37901a978f40c8693\"\n    ],\n    [\n        \"0c5898655ceb602dc33de27476c8f3ca\",\n        \"7416fd668b473aa9c5c05f6724d59e08\"\n    ],\n    [\n        \"5e6ea361c5c3b3628fff9cef287792a8\",\n        \"b633d5e2e47845f73e11cd6b3e3e0d56\"\n    ],\n    [\n        \"df11fb5e7c61cbe05fd819fe53485ad1\",\n        \"1c50d2ab39bb26633a537063dacc6a77\"\n    ],\n    [\n        \"2360d0c5a8370e3dba62cdbbaf2c1fa4\",\n        \"36b2b7b6106b7b4bb7193d1d45a12b6c\"\n    ],\n    [\n        \"6f56ffe5952946cded97ee17282652ff\",\n        \"b3d27d8ffab807942ef764240186987d\"\n    ],\n    [\n        \"d0ec2f9e3dc2632f3303372f9fa2b99b\",\n        \"3ef4d480cec90943295fddbae9ed3c47\"\n    ],\n    [\n        \"c58700290c03e8289fa0ffd1b0f74a66\",\n        \"034648aeb02f8bd3ced52076b0c2ebf7\"\n    ],\n    // Pidgin (West Africa)\n    [\n        \"b9bc16eb3f5bb90b8c3f77b6ddb8b9a7\",\n        \"1399c4627a61137d31314c07db2e468b\"\n    ],\n    [\n        \"3d28d86db52314fb788a0082658f4bc0\",\n        \"a961062e236951caa0a4aef36d52f58d\"\n    ],\n    [\n        \"d716a99f61efb08f8ed1008ebf2e866d\",\n        \"af8aea8d52dea2838da440248e686951\"\n    ],\n    [\n        \"45130ca2c426cfccce546f1b73daaa0c\",\n        \"fa3c69ccb8a72e83d498138f4bbafca6\"\n    ],\n    [\n        \"07f8df6c5a31a3fd95cbca5472db9ef9\",\n        \"8dea773036e312f9bd1db9dcd2cd8a55\"\n    ],\n    [\n        \"e23614e53cc93e8b882e733ad7e26f57\",\n        \"6d312561ddc1105fc4499c9ad24c922f\"\n    ],\n    [\n        \"a0c25d3ee03cc61de9e3f24a6e56f4ef\",\n        \"da8dc23d8de846af96d44d4ae53d5baa\"\n    ],\n    [\n        \"55ec3e24d7a6fcc85df25265d0c4fb3a\",\n        \"af1df685760ba6b08a8adc629ef88271\"\n    ],\n    [\n        \"ae7c31219c687e3a14e8f4bbce907a9d\",\n        \"6575de530864ba199a75d1a67c86bab6\"\n    ]\n];\n\n\n\nvar $aNCw4 = parcelRequire(\"aNCw4\");\n\nvar $fs37Y = parcelRequire(\"fs37Y\");\n\nvar $n3TJI = parcelRequire(\"n3TJI\");\nconst $c0ba74aa19152d66$var$getCellValue = (tr, idx)=>tr.children[idx].innerText || tr.children[idx].textContent;\nconst $c0ba74aa19152d66$var$comparer = (idx, asc)=>(a, b)=>{\n        const valueA = $c0ba74aa19152d66$var$getCellValue(asc ? a : b, idx);\n        const valueB = $c0ba74aa19152d66$var$getCellValue(asc ? b : a, idx);\n        // Handle empty values or non-numeric values\n        if (valueA === \"\" || valueB === \"\" || isNaN(valueA) || isNaN(valueB)) return valueA.toString().localeCompare(valueB);\n        // Numeric comparison\n        return valueA - valueB;\n    };\nfunction $c0ba74aa19152d66$export$2e2bcd8739ae039(idx, asc) {\n    return $c0ba74aa19152d66$var$comparer(idx, asc);\n}\n\n\n\nvar $eQgFz = parcelRequire(\"eQgFz\");\nvar $1d2538027fc10fe0$export$787bbd770b7ea722;\n$1d2538027fc10fe0$export$787bbd770b7ea722 = {\n    IC: \"initial_call\",\n    RV: \"return_visit\",\n    BS: \"bible_study\",\n    TA: \"talk\",\n    CH: \"chairman\",\n    BR: \"bible_reading\",\n    CP: \"closing_prayer\",\n    OT: \"opening_talk\",\n    SG: \"spiritual_gems\",\n    LAC: \"living_as_christians\",\n    CBS: \"congregation_bible_study\",\n    AYF: \"apply_yourself_to_the_field_ministry\"\n};\n\n\nclass $89b002d01c4b60dc$export$2e2bcd8739ae039 {\n    constructor(){\n        const self = this;\n        const database = {\n            info: [\n                \"label\",\n                \"value\"\n            ],\n            meetings: [\n                \"label\",\n                \"date\",\n                \"data\"\n            ],\n            publishers: [\n                \"name\"\n            ],\n            assignments: [\n                \"meeting\",\n                \"assignment\",\n                \"type\",\n                \"number\",\n                \"assigned\",\n                \"partner\",\n                \"_assigned\",\n                \"_partner\"\n            ]\n        };\n        self.lib = new (0, (/*@__PURE__*/$parcel$interopDefault($eQgFz)))(\"library\", localStorage);\n        Object.keys(database).forEach((key)=>{\n            if (!self.lib.tableExists(key)) self.lib.createTable(key, database[key]);\n        });\n    }\n    getPublisher(ID) {\n        const publisher = this.lib.queryAll(\"publishers\", {\n            query: {\n                ID: ID\n            }\n        }).find(Boolean);\n        return publisher;\n    }\n    getMeeting(ID) {\n        const meeting = this.lib.queryAll(\"meetings\", {\n            query: {\n                ID: ID\n            }\n        }).find(Boolean);\n        return meeting;\n    }\n    getAssignment(ID) {\n        const assignment = this.lib.queryAll(\"assignments\", {\n            query: {\n                ID: ID\n            }\n        }).find(Boolean);\n        assignment.assigned = this.getPublisher(assignment.assigned);\n        assignment.partner = this.getPublisher(assignment.partner);\n        assignment.meeting = this.getMeeting(assignment.meeting);\n        return assignment;\n    }\n    parseBoard(meetings) {\n        const self = this;\n        meetings.forEach((m)=>{\n            const date = m.week.replace(/\\D/g, \"\");\n            const meeting = self.lib.insertOrUpdate(\"meetings\", {\n                date: date\n            }, {\n                date: date,\n                data: m,\n                label: m.label\n            });\n            if (m.message) return;\n            const meetingId = meeting[meeting.length - 1] || meeting;\n            self.lib.deleteRows(\"assignments\", {\n                meeting: meetingId\n            });\n            const data = {\n                SA: [],\n                AA: [],\n                DIS: [],\n                CH: {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).CH]\n                },\n                CP: {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).CP]\n                },\n                BR: {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).BR].reader\n                },\n                OT: {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).OT].speaker\n                },\n                SG: {\n                    name: Object.prototype.hasOwnProperty.call(m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).SG], \"conductor\") ? m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).SG].conductor : m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).SG]\n                },\n                LAC: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).LAC].map((p)=>({\n                        name: p.speaker\n                    }))\n            };\n            if (Object.prototype.hasOwnProperty.call(m, (0, $1d2538027fc10fe0$export$787bbd770b7ea722).CBS)) {\n                data.CSC = {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).CBS].conductor\n                };\n                if (Object.prototype.hasOwnProperty.call(m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).CBS], \"reader\")) data.CSR = {\n                    name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).CBS].reader\n                };\n            }\n            if (Object.prototype.hasOwnProperty.call(m, (0, $1d2538027fc10fe0$export$787bbd770b7ea722).TA)) data.TA = {\n                name: m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).TA].student\n            };\n            [\n                (0, $1d2538027fc10fe0$export$787bbd770b7ea722).IC,\n                (0, $1d2538027fc10fe0$export$787bbd770b7ea722).RV,\n                (0, $1d2538027fc10fe0$export$787bbd770b7ea722).BS\n            ].forEach((t)=>{\n                if (Object.prototype.hasOwnProperty.call(m, t) && Object.prototype.hasOwnProperty.call(m[t], \"student\")) data.SA.push({\n                    name: m[t].student,\n                    partner: Object.prototype.hasOwnProperty.call(m[t], \"assistant\") && m[t].assistant,\n                    type: t\n                });\n                if (Object.prototype.hasOwnProperty.call(m, t) && Object.prototype.hasOwnProperty.call(m[t], \"assistant\")) data.AA.push({\n                    name: m[t].assistant,\n                    partner: Object.prototype.hasOwnProperty.call(m[t], \"student\") && m[t].student,\n                    type: t\n                });\n            });\n            if (m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).AYF]) m[(0, $1d2538027fc10fe0$export$787bbd770b7ea722).AYF].forEach((v)=>{\n                if (Object.prototype.hasOwnProperty.call(v, \"theme\")) data.TA = {\n                    name: v.assigned,\n                    number: v.number\n                };\n                else if (Object.prototype.hasOwnProperty.call(v, \"assistant\")) {\n                    data.SA.push({\n                        name: v.assigned,\n                        partner: v.assistant,\n                        type: v.title,\n                        number: v.number\n                    });\n                    data.AA.push({\n                        name: v.assistant,\n                        partner: v.assigned,\n                        type: v.title\n                    });\n                } else data.DIS.push({\n                    name: v.assigned\n                });\n            });\n            Object.keys(data).forEach((key)=>{\n                if (Array.isArray(data[key])) data[key].forEach((info)=>{\n                    this.setAssignment(key, meetingId, info);\n                });\n                else this.setAssignment(key, meetingId, data[key]);\n            });\n        });\n        self.lib.commit();\n    }\n    setAssignment(assignment, meetingId, info) {\n        const assigned = this.setPublisher(info.name);\n        const partner = this.setPublisher(info.partner);\n        this.lib.insert(\"assignments\", {\n            meeting: meetingId,\n            assignment: assignment,\n            type: info.type,\n            number: info.number,\n            assigned: assigned[0],\n            _assigned: assigned[1],\n            partner: partner[0],\n            _partner: partner[1]\n        });\n    }\n    setInfo(label, value) {\n        this.lib.insert(\"info\", {\n            label: label,\n            value: value\n        });\n        this.lib.commit();\n    }\n    setPublisher(name) {\n        const self = this;\n        const publishers = [];\n        if (name) String(name).split(\"|\").forEach((name)=>{\n            const publisher = self.lib.insertOrUpdate(\"publishers\", {\n                name: name\n            }, {\n                name: name\n            });\n            publishers.push(publisher[publisher.length - 1] || publisher);\n        });\n        return publishers;\n    }\n}\n\n\n\nvar $n3TJI = parcelRequire(\"n3TJI\");\nvar $3ac92057f5c0347d$export$4dbdc8f16fed8a34;\nconst $3ac92057f5c0347d$var$TEXT_TYPE = \"Text_SanSerif\";\nconst $3ac92057f5c0347d$var$CHECKBOX_TYPE = \"CheckBox\";\nconst $3ac92057f5c0347d$var$fieldDefinitions = [\n    {\n        name: \"name\",\n        type: $3ac92057f5c0347d$var$TEXT_TYPE\n    },\n    {\n        name: \"assistant\",\n        type: $3ac92057f5c0347d$var$TEXT_TYPE\n    },\n    {\n        name: \"date\",\n        type: $3ac92057f5c0347d$var$TEXT_TYPE\n    },\n    {\n        name: \"part_number\",\n        type: $3ac92057f5c0347d$var$TEXT_TYPE\n    },\n    {\n        name: \"main_hall\",\n        type: $3ac92057f5c0347d$var$CHECKBOX_TYPE\n    },\n    {\n        name: \"auxiliary_classroom_1\",\n        type: $3ac92057f5c0347d$var$CHECKBOX_TYPE\n    },\n    {\n        name: \"auxiliary_classroom_2\",\n        type: $3ac92057f5c0347d$var$CHECKBOX_TYPE\n    }\n];\n$3ac92057f5c0347d$export$4dbdc8f16fed8a34 = $3ac92057f5c0347d$var$fieldDefinitions.reduce((acc, { name: name, type: type }, i)=>{\n    acc[name] = {\n        id: i + 1,\n        type: type\n    };\n    return acc;\n}, {});\n\n\n\n\nclass $6e7379fc1ed49ac8$export$2e2bcd8739ae039 {\n    constructor(doc){\n        this.id = 900;\n        this.name = \"\";\n        this.assistant = \"\";\n        this.date = \"\";\n        this.part_number = \"\";\n        this.main_hall = false;\n        this.auxiliary_classroom_1 = false;\n        this.auxiliary_classroom_2 = false;\n        this.annotations = {};\n        doc.getPage(1).then((content)=>content.getAnnotations()).then((annotations)=>{\n            annotations.forEach((annotation)=>{\n                this.annotations[annotation.fieldName] = annotation.id;\n            });\n        });\n        this.doc = doc;\n    }\n    save() {\n        Object.entries((0, $3ac92057f5c0347d$export$4dbdc8f16fed8a34)).forEach(([name, info])=>{\n            const id = this.annotations[`${this.id}_${info.id}_${info.type}`];\n            this.doc.annotationStorage.setValue(id, {\n                value: this[name]\n            });\n        });\n        return this.doc.saveDocument();\n    }\n    savePDF() {\n        const self = this;\n        // Fix for PDF readers lacking the appearance dictionary (NeedAppearances)\n        this.save().then((byteArray)=>PDFLib.PDFDocument.load(byteArray).then((pdf)=>{\n                pdf.save().then((file)=>(parcelRequire(\"cjFze\"))(file, `${self.date} - ${self.name}.pdf`, \"application/pdf\"));\n            }));\n    }\n    saveImage() {\n        const self = this;\n        self.save().then((data)=>{\n            $n3TJI.getDocument({\n                data: data,\n                standardFontDataUrl: \"https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/standard_fonts/\"\n            }).promise.then((doc)=>{\n                doc.getPage(1).then((page)=>{\n                    const viewport = page.getViewport({\n                        scale: 1.5\n                    });\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = viewport.width;\n                    canvas.height = viewport.height;\n                    page.render({\n                        viewport: viewport,\n                        canvasContext: canvas.getContext(\"2d\")\n                    }).promise.then(()=>(parcelRequire(\"cjFze\"))(canvas.toDataURL(), `${self.date} - ${self.name}.png`, \"image/png\"));\n                });\n            });\n        });\n    }\n}\n\n\n\nvar $8RAYl = parcelRequire(\"8RAYl\");\n\nvar $8fx7t = parcelRequire(\"8fx7t\");\n\nvar $gLe41 = parcelRequire(\"gLe41\");\n(0, (/*@__PURE__*/$parcel$interopDefault($gLe41)))($fs37Y, (0, $8RAYl.default));\n(0, $8RAYl.default).use((0, $8fx7t.default)).init((0, $aNCw4.translation));\nconst $35da740d59af89ba$var$engine = new (0, $89b002d01c4b60dc$export$2e2bcd8739ae039)();\n$fs37Y.registerHelper(\"lowercase\", (str)=>str && typeof str === \"string\" && str.toLowerCase() || \"\");\n$fs37Y.registerHelper(\"publisher\", (id)=>$35da740d59af89ba$var$engine.getPublisher(id).name);\ndocument.getS89 = (id)=>{\n    if (!document.S89) {\n        bootstrap.showToast({\n            body: (0, $8RAYl.default).t(\"S_89_UNLOADED\"),\n            toastClass: \"text-bg-danger\"\n        });\n        return;\n    }\n    const assingment = $35da740d59af89ba$var$engine.getAssignment(id);\n    if (!(0, $373a7b56970c90d1$export$860a3ce6efe86b24)[assingment.assignment].S89) {\n        bootstrap.showToast({\n            body: (0, $8RAYl.default).t(\"S_89_UNNEEDED\"),\n            toastClass: \"text-bg-danger\"\n        });\n        return;\n    }\n    document.S89.name = assingment.assigned.name;\n    document.S89.assistant = assingment.partner?.name;\n    document.S89.date = assingment.meeting.label;\n    document.S89.part_number = assingment.number && String(assingment.number);\n    document.S89.main_hall = true;\n    switch(document.querySelector(\"select#output\").value){\n        case \"pdf\":\n            document.S89.savePDF();\n            break;\n        case \"png\":\n            document.S89.saveImage();\n            break;\n    }\n};\nconst $35da740d59af89ba$var$filter = ()=>{\n    const main = document.getElementById(\"main\"); // main table\n    const form = document.getElementById(\"filters\");\n    const selectedOnes = Array.from(form.querySelectorAll(\"input[type='checkbox']:checked\")).map((e)=>e.value);\n    const url = new URL(window.location);\n    url.searchParams.set(\"filters\", btoa(selectedOnes));\n    // Set filters as a param on the URL\n    window.history.pushState({}, \"\", url.toString());\n    // Hide rows according to the threshold range\n    const threshold = +form.querySelector(\"#threshold\").value;\n    main.querySelectorAll(\"tbody tr\").forEach((row)=>{\n        // Get all td elements and reverse the array\n        const columns = Array.from(row.querySelectorAll(\"td\")).reverse();\n        // Get the value of unassigned weeks from the first column\n        const unassignedWeeks = +columns[0]?.innerText || 0;\n        // Check if any of the badges match the selected ones\n        const badges = row.querySelectorAll(\"span\");\n        const hasSelectedBadge = Array.from(badges).some((badge)=>selectedOnes.includes(badge.innerText.trim()));\n        // Determine whether to show or hide the row based on the conditions\n        const shouldShow = unassignedWeeks <= threshold && hasSelectedBadge;\n        row.style.display = shouldShow ? \"table-row\" : \"none\";\n    });\n    // Shows empty tablem message\n    main.querySelector(\"tfoot tr\").style.display = document.querySelectorAll(\"tr[style*='display: table-row']\").length ? \"none\" : \"table-row\";\n};\nconst $35da740d59af89ba$var$loadFiles = (files)=>{\n    Array.from(files).forEach((file)=>{\n        if (![\n            \"application/json\"\n        ].includes(file.type)) return;\n        const r = new FileReader();\n        r.onload = (e)=>{\n            const file = e.target.result;\n            const json = new TextDecoder().decode(file);\n            $35da740d59af89ba$var$engine.parseBoard(JSON.parse(json).meetings);\n        };\n        r.readAsArrayBuffer(file);\n    });\n    location.reload();\n};\ndocument.addEventListener(\"dragstart\", ()=>{\n    console.log(\"dragstart\");\n});\ndocument.addEventListener(\"dragover\", (e)=>{\n    e.preventDefault();\n});\ndocument.addEventListener(\"drop\", (e)=>{\n    e.preventDefault();\n    $35da740d59af89ba$var$loadFiles(e.dataTransfer.files);\n});\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    const data = [];\n    $35da740d59af89ba$var$engine.lib.queryAll(\"publishers\", {\n        sort: [\n            [\n                \"name\",\n                \"ASC\"\n            ]\n        ]\n    }).forEach((publisher)=>{\n        publisher.meetings = $35da740d59af89ba$var$engine.lib.queryAll(\"meetings\", {\n            sort: [\n                [\n                    \"date\",\n                    \"ASC\"\n                ]\n            ]\n        });\n        const partners = [];\n        publisher.meetings.forEach((meeting, i)=>{\n            const assignments = $35da740d59af89ba$var$engine.lib.queryAll(\"assignments\", {\n                query: {\n                    meeting: meeting.ID,\n                    assigned: publisher.ID\n                }\n            });\n            if (assignments.length) {\n                assignments.forEach((assingment, ii)=>{\n                    if (assingment._assigned) assignments[ii].assignment = \"S\";\n                    else if (assingment.partner) partners.push({\n                        publisher: $35da740d59af89ba$var$engine.getPublisher(assingment.partner).name,\n                        meeting: $35da740d59af89ba$var$engine.getMeeting(assingment.meeting)\n                    });\n                });\n                partners.sort((a, b)=>a.date - b.date);\n            }\n            $35da740d59af89ba$var$engine.lib.queryAll(\"assignments\", {\n                query: {\n                    meeting: meeting.ID,\n                    _assigned: publisher.ID\n                }\n            }).forEach((substitution)=>{\n                delete substitution._assigned;\n                assignments.push(substitution);\n            });\n            publisher.meetings[i].assignments = assignments;\n        });\n        publisher.partners = partners.reverse().flatMap((i)=>`<tr><td>${i.publisher}</td><td>${i.meeting.data.week.replace(\"-\", \"/\")}</td></tr>`).join(\"\");\n        data.push(publisher);\n    });\n    $35da740d59af89ba$var$DOMContentLoaded(data);\n});\n\nconst $35da740d59af89ba$var$DOMContentLoaded = async (data)=>{\n    await fetch(\"table.hbs.html\").then((response)=>response.text().then((html)=>{\n            boot.innerHTML = $fs37Y.compile(html)({\n                data: data,\n                subtitles: $373a7b56970c90d1$export$860a3ce6efe86b24,\n                meetings: $35da740d59af89ba$var$engine.lib.queryAll(\"meetings\", {\n                    sort: [\n                        [\n                            \"date\",\n                            \"ASC\"\n                        ]\n                    ]\n                })\n            });\n        }));\n    if (data.length === 0) {\n        const dropArea = document.querySelector(\".drag-area\");\n        const dragText = document.querySelector(\".header\");\n        const input = dropArea.querySelector(\"input\");\n        dropArea.querySelector(\".button\").onclick = async ()=>{\n            if (\"showDirectoryPicker\" in window) {\n                window.showDirectoryPicker().then(async (dirHandle)=>{\n                    for await (const entry of dirHandle.values())entry.getFile().then(async (file)=>{\n                        if (![\n                            \"application/json\"\n                        ].includes(file.type)) return;\n                        file.text().then((json)=>{\n                            const parsed = JSON.parse(json);\n                            if (parsed.meetings) $35da740d59af89ba$var$engine.parseBoard(parsed.meetings);\n                            [\n                                \"congregation\",\n                                \"time\"\n                            ].forEach((entry)=>{\n                                if (parsed[entry]) $35da740d59af89ba$var$engine.setInfo(entry, parsed[entry]);\n                            });\n                        });\n                    });\n                    (0, $816683f8c32a91e9$export$adaa4cf7ef1b65be)(\"dir\", dirHandle).then(()=>location.reload());\n                });\n                return;\n            }\n            input.click();\n        };\n        input.addEventListener(\"change\", function() {\n            dropArea.classList.add(\"active\");\n            $35da740d59af89ba$var$loadFiles(this.files);\n        });\n        dropArea.addEventListener(\"dragover\", (e)=>{\n            e.preventDefault();\n            dropArea.classList.add(\"active\");\n            dragText.textContent = \"Release to Upload\";\n        });\n        dropArea.addEventListener(\"dragleave\", ()=>{\n            dropArea.classList.remove(\"active\");\n            dragText.textContent = \"Drag & Drop\";\n        });\n        dropArea.addEventListener(\"drop\", (e)=>{\n            e.preventDefault();\n            $35da740d59af89ba$var$loadFiles(e.dataTransfer.files);\n        });\n        dropArea.querySelector(\"span#sample\").addEventListener(\"click\", ()=>{\n            const samples = (parcelRequire(\"grh1p\"));\n            $35da740d59af89ba$var$engine.parseBoard(samples.meetings);\n            [\n                \"congregation\",\n                \"time\"\n            ].forEach((entry)=>$35da740d59af89ba$var$engine.setInfo(entry, samples[entry]));\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\", {\n                bubbles: true,\n                cancelable: true\n            }));\n        });\n        return;\n    }\n    boot.scrollTo(document.body.getElementsByTagName(\"table\").item(0).scrollWidth, 0);\n    await fetch(\"filter.hbs.html\").then((response)=>response.text().then((html)=>{\n            boot.insertAdjacentHTML(\"beforeend\", $fs37Y.compile(html)({\n                subtitles: $373a7b56970c90d1$export$860a3ce6efe86b24\n            }));\n        }));\n    document.querySelector(\"i.fa-print\").addEventListener(\"click\", ()=>{\n        const ids = Array.from(document.querySelectorAll(\"table input:checked\")).map((input)=>input.value);\n        const params = new URLSearchParams(ids.map((d)=>[\n                \"date\",\n                d\n            ]));\n        window.open(`board.html?${params.toString()}`, \"_blank\");\n    });\n    // table\n    document.querySelectorAll(\"label.sort, i.fa-sort\").forEach((label)=>label.addEventListener(\"click\", ()=>{\n            const table = label.closest(\"table\");\n            const tbody = table.querySelector(\"tbody\");\n            const columnHeader = label.closest(\"th\");\n            const columnIndex = Array.from(label.closest(\"tr\").children).indexOf(columnHeader);\n            Array.from(tbody.querySelectorAll(\"tr\")).sort((0, $c0ba74aa19152d66$export$2e2bcd8739ae039)(columnIndex, columnHeader.asc = !columnHeader.asc)).forEach((tr)=>tbody.appendChild(tr));\n        }));\n    document.querySelectorAll(\"#main tbody tr\").forEach((row)=>{\n        let columns = Array.from(row.querySelectorAll(\"td\")).reverse();\n        let count = 0;\n        columns.every((column)=>{\n            if (column.querySelector(\"span\")) return false;\n            column.innerText = \"-\";\n            count++;\n            return true;\n        });\n        columns[0].innerText = count - 1;\n        row.querySelector(\"i.hide\").addEventListener(\"click\", ()=>row.style.display = \"none\");\n        row.querySelector(\"i.copy\").addEventListener(\"click\", ()=>{\n            navigator.clipboard.writeText(row.querySelector(\"th\").innerText.trim()).then(()=>bootstrap.showToast({\n                    body: (0, $8RAYl.default).t(\"COPIED\"),\n                    toastClass: \"text-bg-info\"\n                }));\n        });\n    });\n    // clear data\n    document.querySelector(\"button#clear\").addEventListener(\"click\", ()=>{\n        if (confirm((0, $8RAYl.default).t(\"SURE\"))) {\n            localStorage.clear();\n            location.reload();\n        }\n    });\n    // filter\n    const filters = new URL(window.location).searchParams.get(\"filters\");\n    const checkboxes = document.querySelectorAll(\"#filters input[type='checkbox']\");\n    checkboxes.forEach((checkboxInput)=>{\n        if (typeof filters === \"string\") checkboxInput.checked = atob(filters).split(\",\").includes(checkboxInput.value);\n        checkboxInput.addEventListener(\"change\", $35da740d59af89ba$var$filter);\n    });\n    document.getElementById(\"threshold\").addEventListener(\"input\", $35da740d59af89ba$var$filter);\n    const language = document.getElementById(\"language\");\n    language.addEventListener(\"change\", (e)=>{\n        const modal = document.getElementById(\"filters\");\n        modal.addEventListener(\"hidden.bs.modal\", ()=>{\n            $35da740d59af89ba$var$DOMContentLoaded(data);\n        });\n        (0, $8RAYl.default).changeLanguage(e.target.value).then(()=>bootstrap.Modal.getInstance(modal).hide());\n    });\n    language.value = (0, $8RAYl.default).language;\n    for (const button of document.querySelectorAll(\"button#none, button#all\"))button.addEventListener(\"click\", (e)=>{\n        for (const checkbox of checkboxes)checkbox.checked = (e.target.id || e.target.parentElement.id) === \"all\";\n        $35da740d59af89ba$var$filter();\n    });\n    $35da740d59af89ba$var$filter();\n    // draggable\n    let ignore = false;\n    window.addEventListener(\"click\", (event)=>{\n        if (ignore) event.stopPropagation();\n        ignore = false;\n    }, true);\n    document.getElementById(\"draggable\").addEventListener(\"mousedown\", function(e) {\n        let offsetX = e.clientX - parseInt(window.getComputedStyle(this).left);\n        let offsetY = e.clientY - parseInt(window.getComputedStyle(this).top);\n        function mouseMoveHandler(e) {\n            Object.assign(document.getElementById(\"draggable\").style, {\n                top: e.clientY - offsetY + \"px\",\n                left: e.clientX - offsetX + \"px\",\n                right: \"unset\",\n                bottom: \"unset\"\n            });\n            ignore = true;\n        }\n        const reset = ()=>{\n            window.removeEventListener(\"mousemove\", mouseMoveHandler);\n            window.removeEventListener(\"mouseup\", reset);\n        };\n        window.addEventListener(\"mousemove\", mouseMoveHandler);\n        window.addEventListener(\"mouseup\", reset);\n    });\n    // tooltip\n    [].slice.call(document.querySelectorAll(\"[data-bs-toggle='tooltip']\")).map((tooltipTriggerEl)=>{\n        const { allowList: allowList } = bootstrap.Tooltip.Default;\n        allowList.table = [];\n        allowList.thead = [];\n        allowList.tbody = [];\n        allowList.tr = [];\n        allowList.td = [];\n        return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n    // hover\n    document.querySelectorAll(\"span[helper]\").forEach((data)=>{\n        data.addEventListener(\"mouseover\", ()=>{\n            const helper = data.getAttribute(\"helper\");\n            document.querySelectorAll(\"tbody th\").forEach((row)=>{\n                if (row.innerText == helper) {\n                    const index = Array.from(data.closest(\"tr\").childNodes).indexOf(data.parentNode);\n                    const cols = Array.from(row.parentNode.childNodes);\n                    cols[index].id = \"red\";\n                }\n            });\n            undefined.addEventListener(\"mouseout\", ()=>{\n                document.getElementById(\"red\")?.removeAttribute(\"id\");\n            });\n        });\n    });\n    // printing\n    document.querySelectorAll(\"#main thead input[type='checkbox']\").forEach((checkbox)=>{\n        checkbox.addEventListener(\"change\", ()=>{\n            const selected = Array.from(document.querySelectorAll(\"#main thead input[type='checkbox']:checked\")).map((element)=>element.value);\n            document.querySelector(\"i.fa-print\").style.display = selected.length > 0 ? \"inline\" : \"none\";\n        });\n    });\n    document.querySelector(\"input#S89[type=file]\").addEventListener(\"change\", function() {\n        const self = this;\n        const reader = new FileReader();\n        reader.onload = function() {\n            $n3TJI.GlobalWorkerOptions.workerSrc = \"//cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.worker.min.js\";\n            $n3TJI.getDocument({\n                data: new Uint8Array(this.result)\n            }).promise.then((doc)=>{\n                if (!(0, $0509828d5a985d17$export$1e1c9db6a3f1bad8).some((r)=>r.every((value, index)=>doc.fingerprints[index] == value))) {\n                    bootstrap.showToast({\n                        body: (0, $8RAYl.default).t(\"S_89_CHECK\"),\n                        toastClass: \"text-bg-danger\"\n                    });\n                    self.value = \"\";\n                    return;\n                }\n                document.S89 = new (0, $6e7379fc1ed49ac8$export$2e2bcd8739ae039)(doc);\n            });\n        };\n        reader.readAsArrayBuffer(this.files[0]);\n    }, false);\n    document.getElementById(\"permissions\").addEventListener(\"click\", ()=>{\n        (0, $816683f8c32a91e9$export$3988ae62b71be9a3)(\"dir\").then(async (handle)=>{\n            if (await handle.requestPermission({\n                mode: \"read\"\n            }) === \"granted\") location.reload();\n        });\n    });\n    (0, $816683f8c32a91e9$export$3988ae62b71be9a3)(\"dir\").then((dirHandle)=>{\n        if (!dirHandle) return;\n        // https://github.com/whatwg/fs/blob/main/proposals/FileSystemObserver.md\n        $35da740d59af89ba$var$hasPermission(dirHandle).then((hasPermission)=>{\n            if (!hasPermission) {\n                document.getElementById(\"permissions\").setAttribute(\"style\", \"display: block;\");\n                return;\n            }\n            const observer = new FileSystemObserver((records)=>{\n                for (const record of records){\n                    if (record.type !== \"modified\") return;\n                    record.changedHandle.getFile().then(async (file)=>{\n                        if (![\n                            \"application/json\"\n                        ].includes(file.type)) return;\n                        file.text().then((json)=>{\n                            const parsed = JSON.parse(json);\n                            if (parsed.meetings) $35da740d59af89ba$var$engine.parseBoard(parsed.meetings);\n                            [\n                                \"congregation\",\n                                \"time\"\n                            ].forEach((entry)=>{\n                                if (parsed[entry]) $35da740d59af89ba$var$engine.setInfo(entry, parsed[entry]);\n                            });\n                        }).then(()=>(0, $816683f8c32a91e9$export$adaa4cf7ef1b65be)(\"dir\", dirHandle).then(()=>location.reload()));\n                    });\n                }\n            });\n            observer.observe(dirHandle, {\n                recursive: false\n            });\n            console.log(observer);\n        });\n    });\n};\nconst $35da740d59af89ba$var$hasPermission = async (handle)=>{\n    if (await handle.queryPermission() === \"granted\") return true; // Permission already granted\n    return false; // Permission denied\n};\n\n\n//# sourceMappingURL=index.cca7613c.js.map\n","/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], () => { return (root.pdfjsLib = factory()); });\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.getModificationDate = getModificationDate;\nexports.getUuid = getUuid;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isArrayEqual = isArrayEqual;\nexports.isNodeJS = void 0;\nexports.normalizeUnicode = normalizeUnicode;\nexports.objectFromMap = objectFromMap;\nexports.objectSize = objectSize;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.unreachable = unreachable;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\nexports.isNodeJS = isNodeJS;\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6;\nexports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\nconst LINE_FACTOR = 1.35;\nexports.LINE_FACTOR = LINE_FACTOR;\nconst LINE_DESCENT_FACTOR = 0.35;\nexports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\nexports.BASELINE_FACTOR = BASELINE_FACTOR;\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100\n};\nexports.RenderingIntentFlag = RenderingIntentFlag;\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3\n};\nexports.AnnotationMode = AnnotationMode;\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\nexports.AnnotationEditorPrefix = AnnotationEditorPrefix;\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15\n};\nexports.AnnotationEditorType = AnnotationEditorType;\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23\n};\nexports.AnnotationEditorParamsType = AnnotationEditorParamsType;\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nexports.PermissionFlag = PermissionFlag;\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nexports.TextRenderingMode = TextRenderingMode;\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nexports.ImageKind = ImageKind;\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nexports.AnnotationType = AnnotationType;\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nexports.AnnotationReplyType = AnnotationReplyType;\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nexports.AnnotationFlag = AnnotationFlag;\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\"\n};\nexports.AnnotationActionEventType = AnnotationActionEventType;\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\"\n};\nexports.DocumentActionEventType = DocumentActionEventType;\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\"\n};\nexports.PageActionEventType = PageActionEventType;\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nexports.VerbosityLevel = VerbosityLevel;\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1\n};\nexports.CMapCompressionType = CMapCompressionType;\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nexports.OPS = OPS;\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nexports.PasswordResponses = PasswordResponses;\nlet verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {}\n  return null;\n}\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\nexports.BaseException = BaseException;\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\nexports.PasswordException = PasswordException;\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\nexports.UnknownErrorException = UnknownErrorException;\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\nexports.InvalidPDFException = InvalidPDFException;\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\nexports.MissingPDFException = MissingPDFException;\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\nexports.UnexpectedResponseException = UnexpectedResponseException;\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\nexports.FormatError = FormatError;\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\nexports.AbortException = AbortException;\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch {\n    return false;\n  }\n}\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n  static get isOffscreenCanvasSupported() {\n    return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n  }\n  static get platform() {\n    if (typeof navigator === \"undefined\") {\n      return shadow(this, \"platform\", {\n        isWin: false,\n        isMac: false\n      });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\")\n    });\n  }\n  static get isCSSRoundSupported() {\n    return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n  }\n}\nexports.FeatureTest = FeatureTest;\nconst hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  }\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n    const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n    const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n    if (yLow > yHigh) {\n      return null;\n    }\n    return [xLow, yLow, xHigh, yHigh];\n  }\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n  }\n}\nexports.Util = Util;\nconst PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getModificationDate(date = new Date()) {\n  const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n  return buffer.join(\"\");\n}\nclass PromiseCapability {\n  #settled = false;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n      this.reject = reason => {\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n  get settled() {\n    return this.#settled;\n  }\n}\nexports.PromiseCapability = PromiseCapability;\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\nfunction getUuid() {\n  if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\nexports.AnnotationPrefix = AnnotationPrefix;\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\nObject.defineProperty(exports, \"SVGGraphics\", ({\n  enumerable: true,\n  get: function () {\n    return _displaySvg.SVGGraphics;\n  }\n}));\nexports.build = void 0;\nexports.getDocument = getDocument;\nexports.version = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _annotation_storage = __w_pdfjs_require__(3);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _font_loader = __w_pdfjs_require__(9);\nvar _displayNode_utils = __w_pdfjs_require__(10);\nvar _canvas = __w_pdfjs_require__(11);\nvar _worker_options = __w_pdfjs_require__(14);\nvar _message_handler = __w_pdfjs_require__(15);\nvar _metadata = __w_pdfjs_require__(16);\nvar _optional_content_config = __w_pdfjs_require__(17);\nvar _transport_stream = __w_pdfjs_require__(18);\nvar _displayFetch_stream = __w_pdfjs_require__(19);\nvar _displayNetwork = __w_pdfjs_require__(22);\nvar _displayNode_stream = __w_pdfjs_require__(23);\nvar _displaySvg = __w_pdfjs_require__(24);\nvar _xfa_text = __w_pdfjs_require__(25);\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536;\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nconst DELAYED_CLEANUP_TIMEOUT = 5000;\nconst DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\nexports.DefaultCanvasFactory = DefaultCanvasFactory;\nconst DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\nexports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\nconst DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\nexports.DefaultFilterFactory = DefaultFilterFactory;\nconst DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\nexports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\nfunction getDocument(src) {\n  if (typeof src === \"string\" || src instanceof URL) {\n    src = {\n      url: src\n    };\n  } else if ((0, _util.isArrayBuffer)(src)) {\n    src = {\n      data: src\n    };\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n  }\n  const task = new PDFDocumentLoadingTask();\n  const {\n    docId\n  } = task;\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n  const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n  const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n  const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n  const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n    ownerDocument\n  });\n  const filterFactory = src.filterFactory || new DefaultFilterFactory({\n    docId,\n    ownerDocument\n  });\n  const styleElement = null;\n  (0, _util.setVerbosityLevel)(verbosity);\n  const transportFactory = {\n    canvasFactory,\n    filterFactory\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl\n    });\n  }\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: _worker_options.GlobalWorkerOptions.workerPort\n    };\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const fetchDocParams = {\n    docId,\n    apiVersion: '3.11.174',\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n    }\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement\n  };\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n    const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n    const networkStreamPromise = new Promise(function (resolve) {\n      let networkStream;\n      if (rangeTransport) {\n        networkStream = new _transport_stream.PDFDataTransportStream({\n          length,\n          initialData: rangeTransport.initialData,\n          progressiveDone: rangeTransport.progressiveDone,\n          contentDispositionFilename: rangeTransport.contentDispositionFilename,\n          disableRange,\n          disableStream\n        }, rangeTransport);\n      } else if (!data) {\n        const createPDFNetworkStream = params => {\n          if (_util.isNodeJS) {\n            return new _displayNode_stream.PDFNodeStream(params);\n          }\n          return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n        };\n        networkStream = createPDFNetworkStream({\n          url,\n          length,\n          httpHeaders,\n          withCredentials,\n          rangeChunkSize,\n          disableRange,\n          disableStream\n        });\n      }\n      resolve(networkStream);\n    });\n    return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n      const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [source.data.buffer] : null);\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\nfunction getUrlProp(val) {\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    return new URL(val, window.location).href;\n  } catch {\n    if (_util.isNodeJS && typeof val === \"string\") {\n      return val;\n    }\n  }\n  throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n}\nfunction getDataProp(val) {\n  if (_util.isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n    throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return (0, _util.stringToBytes)(val);\n  }\n  if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n}\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n  constructor() {\n    this._capability = new _util.PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n    this.destroyed = false;\n    this.onPassword = null;\n    this.onProgress = null;\n  }\n  get promise() {\n    return this._capability.promise;\n  }\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\nexports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new _util.PromiseCapability();\n  }\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n  requestDataRange(begin, end) {\n    (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n  abort() {}\n}\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n    Object.defineProperty(this, \"getJavaScript\", {\n      value: () => {\n        (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, \" + \"please use `PDFDocumentProxy.getJSActions` instead.\");\n        return this.getJSActions().then(js => {\n          if (!js) {\n            return js;\n          }\n          const jsArr = [];\n          for (const name in js) {\n            jsArr.push(...js[name]);\n          }\n          return jsArr;\n        });\n      }\n    });\n  }\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n  get isPureXfa() {\n    return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n  getOutline() {\n    return this._transport.getOutline();\n  }\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n  getData() {\n    return this._transport.getData();\n  }\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\nexports.PDFDocumentProxy = PDFDocumentProxy;\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n  #pendingCleanup = false;\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n  get ref() {\n    return this._pageInfo.ref;\n  }\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n  get view() {\n    return this._pageInfo.view;\n  }\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    return new _display_utils.PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  getAnnotations({\n    intent = \"display\"\n  } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n    return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n  }\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get isPureXfa() {\n    return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null\n  }) {\n    this._stats?.time(\"Overall\");\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new _util.PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(!intentPrint);\n      if (error) {\n        internalRenderTask.capability.reject(error);\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error)\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors\n    });\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n      if (this.destroyed) {\n        complete();\n        return;\n      }\n      this._stats?.time(\"Rendering\");\n      internalRenderTask.initializeGraphics({\n        transparency,\n        optionalContentConfig\n      });\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE,\n    printAnnotationStorage = null\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new _util.PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      includeMarkedContent: includeMarkedContent === true,\n      disableNormalization: disableNormalization === true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n      size(textContent) {\n        return textContent.items.length;\n      }\n    });\n  }\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      return this.getXfa().then(xfa => {\n        return _xfa_text.XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      pump();\n    });\n  }\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n  _destroy() {\n    this.destroyed = true;\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n      if (intentState.opListReadCapability) {\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n    return Promise.all(waitOn);\n  }\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(false);\n    if (resetStats && success) {\n      this._stats &&= new _display_utils.StatTimer();\n    }\n    return success;\n  }\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n      return false;\n    }\n    for (const {\n      renderTasks,\n      operatorList\n    } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return;\n    }\n    this._stats?.timeEnd(\"Page Request\");\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(true);\n    }\n  }\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable\n  }) {\n    const {\n      map,\n      transfers\n    } = annotationStorageSerializable;\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n      pageIndex: this._pageIndex,\n      intent: renderingIntent,\n      cacheKey,\n      annotationStorage: map\n    }, transfers);\n    const reader = readableStream.getReader();\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n        if (this._transport.destroyed) {\n          return;\n        }\n        this._renderPageChunk(value, intentState);\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n        if (this._transport.destroyed) {\n          return;\n        }\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n          for (const internalRenderTask of intentState.renderTasks) {\n            internalRenderTask.operatorListChanged();\n          }\n          this.#tryCleanup(true);\n        }\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n    pump();\n  }\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    if (!force) {\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      if (reason instanceof _display_utils.RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n          delay += reason.extraDelay;\n        }\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n    intentState.streamReader = null;\n    if (this._transport.destroyed) {\n      return;\n    }\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    this.cleanup();\n  }\n  get stats() {\n    return this._stats;\n  }\n}\nexports.PDFPageProxy = PDFPageProxy;\nclass LoopbackPort {\n  #listeners = new Set();\n  #deferred = Promise.resolve();\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(obj, transfer ? {\n        transfer\n      } : null)\n    };\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n  terminate() {\n    this.#listeners.clear();\n  }\n}\nexports.LoopbackPort = LoopbackPort;\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0\n};\nexports.PDFWorkerUtil = PDFWorkerUtil;\n{\n  if (_util.isNodeJS && typeof require === \"function\") {\n    PDFWorkerUtil.isWorkerDisabled = true;\n    PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n    }\n  }\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch {\n      return false;\n    }\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\nclass PDFWorker {\n  static #workerPorts;\n  constructor({\n    name = null,\n    port = null,\n    verbosity = (0, _util.getVerbosityLevel)()\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n    this._readyCapability = new _util.PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n    if (port) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n  get promise() {\n    return this._readyCapability.promise;\n  }\n  get port() {\n    return this._port;\n  }\n  get messageHandler() {\n    return this._messageHandler;\n  }\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {});\n    this._readyCapability.resolve();\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity\n    });\n  }\n  _initialize() {\n    if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n      let {\n        workerSrc\n      } = PDFWorker;\n      try {\n        if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n        }\n        const worker = new Worker(workerSrc);\n        const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            this._setupFakeWorker();\n          }\n        };\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            this._readyCapability.resolve();\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n          try {\n            sendTest();\n          } catch {\n            this._setupFakeWorker();\n          }\n        });\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n        sendTest();\n        return;\n      } catch {\n        (0, _util.info)(\"The worker has been disabled.\");\n      }\n    }\n    this._setupFakeWorker();\n  }\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      (0, _util.warn)(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n    PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n      if (this.destroyed) {\n        this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      const port = new LoopbackPort();\n      this._port = port;\n      const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n      const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n      WorkerMessageHandler.setup(workerHandler, port);\n      const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n      this._messageHandler = messageHandler;\n      this._readyCapability.resolve();\n      messageHandler.send(\"configure\", {\n        verbosity: this.verbosity\n      });\n    }).catch(reason => {\n      this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n    });\n  }\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n  static get workerSrc() {\n    if (_worker_options.GlobalWorkerOptions.workerSrc) {\n      return _worker_options.GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!_util.isNodeJS) {\n        (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n      if (mainWorkerMessageHandler) {\n        return mainWorkerMessageHandler;\n      }\n      if (_util.isNodeJS && typeof require === \"function\") {\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await (0, _display_utils.loadScript)(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nexports.PDFWorker = PDFWorker;\nclass WorkerTransport {\n  #methodPromises = new Map();\n  #pageCache = new Map();\n  #pagePromises = new Map();\n  #passwordCapability = null;\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new _font_loader.FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement\n    });\n    this._params = params;\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new _util.PromiseCapability();\n    this.setupMessageHandler();\n  }\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  get annotationStorage() {\n    return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n  }\n  getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, printAnnotationStorage = null, isOpList = false) {\n    let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n    let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n    switch (intent) {\n      case \"any\":\n        renderingIntent = _util.RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = _util.RenderingIntentFlag.PRINT;\n        break;\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n    switch (annotationMode) {\n      case _util.AnnotationMode.DISABLE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case _util.AnnotationMode.ENABLE:\n        break;\n      case _util.AnnotationMode.ENABLE_FORMS:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case _util.AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n        const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n    if (isOpList) {\n      renderingIntent += _util.RenderingIntentFlag.OPLIST;\n    }\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable\n    };\n  }\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n    this.destroyed = true;\n    this.destroyCapability = new _util.PromiseCapability();\n    this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    const waitOn = [];\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n      this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new _util.PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total\n            });\n          };\n        }\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength\n        });\n      }, headersCapability.reject);\n      return headersCapability.promise;\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new _util.PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new _util.InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new _util.MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new _util.UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new _util.PromiseCapability();\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({\n              password\n            });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n      }\n      return this.#passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length\n      });\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return;\n      }\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            (0, _util.warn)(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n          const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n          const font = new _font_loader.FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont\n          });\n          this.fontLoader.bind(font).catch(reason => {\n            return messageHandler.sendWithPromise(\"FontFallback\", {\n              id\n            });\n          }).finally(() => {\n            if (!params.fontExtraProperties && font.data) {\n              font.data = null;\n            }\n            this.commonObjs.resolve(id, font);\n          });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        return;\n      }\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const {\n                width,\n                height\n              } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n            if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total\n      });\n    });\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n    }\n    const {\n      map,\n      transfers\n    } = this.annotationStorage.serializable;\n    return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n      isPureXfa: !!this._htmlForXfa,\n      numPages: this._numPages,\n      annotationStorage: map,\n      filename: this._fullReader?.filename ?? null\n    }, transfers).finally(() => {\n      this.annotationStorage.resetModified();\n    });\n  }\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n      this.#pageCache.set(pageIndex, page);\n      return page;\n    });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n  getPageIndex(ref) {\n    if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen\n    });\n  }\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex\n    });\n  }\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex\n    });\n  }\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n  getOptionalContentConfig() {\n    return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n      return new _optional_content_config.OptionalContentConfig(results);\n    });\n  }\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, null).then(results => {\n      return {\n        info: results[0],\n        metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n        contentDispositionFilename: this._fullReader?.filename ?? null,\n        contentLength: this._fullReader?.contentLength ?? null\n      };\n    });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return;\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(true);\n  }\n  get loadingParams() {\n    const {\n      disableAutoFetch,\n      enableXfa\n    } = this._params;\n    return (0, _util.shadow)(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa\n    });\n  }\n}\nclass PDFObjects {\n  #objs = Object.create(null);\n  #ensureObj(objId) {\n    return this.#objs[objId] ||= {\n      capability: new _util.PromiseCapability(),\n      data: null\n    };\n  }\n  get(objId, callback = null) {\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    const obj = this.#objs[objId];\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n  clear() {\n    for (const objId in this.#objs) {\n      const {\n        data\n      } = this.#objs[objId];\n      data?.bitmap?.close();\n    }\n    this.#objs = Object.create(null);\n  }\n}\nclass RenderTask {\n  #internalRenderTask = null;\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n    this.onContinue = null;\n  }\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(null, extraDelay);\n  }\n  get separateAnnots() {\n    const {\n      separateAnnots\n    } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const {\n      annotationCanvasMap\n    } = this.#internalRenderTask;\n    return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n  }\n}\nexports.RenderTask = RenderTask;\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new _util.PromiseCapability();\n    this.task = new RenderTask(this);\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n  get completed() {\n    return this.capability.promise.catch(function () {});\n  }\n  initializeGraphics({\n    transparency = false,\n    optionalContentConfig\n  }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const {\n      canvasContext,\n      viewport,\n      transform,\n      background\n    } = this.params;\n    this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n      optionalContentConfig\n    }, this.annotationCanvasMap, this.pageColors);\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n    this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n  }\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n        this.callback();\n      }\n    }\n  }\n}\nconst version = '3.11.174';\nexports.version = version;\nconst build = 'ce8716743';\nexports.build = build;\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _murmurhash = __w_pdfjs_require__(8);\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined\n});\nexports.SerializableEmpty = SerializableEmpty;\nclass AnnotationStorage {\n  #modified = false;\n  #storage = new Map();\n  constructor() {\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, value);\n  }\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n  remove(key) {\n    this.#storage.delete(key);\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof _editor.AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n    if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n  has(key) {\n    return this.#storage.has(key);\n  }\n  getAll() {\n    return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n  }\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n  get size() {\n    return this.#storage.size;\n  }\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new _murmurhash.MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n    for (const [key, val] of this.#storage) {\n      const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n      if (serialized) {\n        map.set(key, serialized);\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n    if (hasBitmap) {\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n    return map.size > 0 ? {\n      map,\n      hash: hash.hexdigest(),\n      transfers\n    } : SerializableEmpty;\n  }\n}\nexports.AnnotationStorage = AnnotationStorage;\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n  constructor(parent) {\n    super();\n    const {\n      map,\n      hash,\n      transfers\n    } = parent.serializable;\n    const clone = structuredClone(map, transfers ? {\n      transfer: transfers\n    } : null);\n    this.#serializable = {\n      map: clone,\n      hash,\n      transfers\n    };\n  }\n  get print() {\n    (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n  }\n  get serializable() {\n    return this.#serializable;\n  }\n}\nexports.PrintAnnotationStorage = PrintAnnotationStorage;\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationEditor = void 0;\nvar _tools = __w_pdfjs_require__(5);\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nclass AnnotationEditor {\n  #altText = \"\";\n  #altTextDecorative = false;\n  #altTextButton = null;\n  #altTextTooltip = null;\n  #altTextTooltipTimeout = null;\n  #keepAspectRatio = false;\n  #resizersDiv = null;\n  #boundFocusin = this.focusin.bind(this);\n  #boundFocusout = this.focusout.bind(this);\n  #hasBeenClicked = false;\n  #isEditing = false;\n  #isInEditMode = false;\n  _initialOptions = Object.create(null);\n  _uiManager = null;\n  _focusEventsAllowed = true;\n  _l10nPromise = null;\n  #isDraggable = false;\n  #zIndex = AnnotationEditor._zIndex++;\n  static _borderLineWidth = -1;\n  static _colorManager = new _tools.ColorManager();\n  static _zIndex = 1;\n  static SMALL_EDITOR_SIZE = 0;\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n    }\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n    const {\n      rotation,\n      rawDims: {\n        pageWidth,\n        pageHeight,\n        pageX,\n        pageY\n      }\n    } = this.parent.viewport;\n    this.rotation = rotation;\n    this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n  static get _defaultLineColor() {\n    return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n  }\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map([\"editor_alt_text_button_label\", \"editor_alt_text_edit_button_label\", \"editor_alt_text_decorative_tooltip\"].map(str => [str, l10n.get(str)]));\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n  static updateDefaultParams(_type, _value) {}\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n  static paste(item, parent) {\n    (0, _util.unreachable)(\"Not implemented\");\n  }\n  get propertiesToUpdate() {\n    return [];\n  }\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= this.height * pageHeight / (pageWidth * 2);\n        this.y += this.width * pageWidth / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += this.height * pageHeight / (pageWidth * 2);\n        this.y -= this.width * pageWidth / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n    event.preventDefault();\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n  commit() {\n    this.addToAnnotationStorage();\n  }\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n    this.fixAndSetPosition();\n  }\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n    this.x += x / width;\n    this.y += y / height;\n    this.fixAndSetPosition();\n  }\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      const {\n        x,\n        y\n      } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n    let {\n      x,\n      y\n    } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const {\n      _borderLineWidth\n    } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n    const {\n      style\n    } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n    this.moveInDOM();\n  }\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n        }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n        }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight]\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return _util.FeatureTest.isCSSRoundSupported ? [Math.round(scaledWidth), Math.round(scaledHeight)] : [scaledWidth, scaledHeight];\n  }\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n  }\n  fixDims() {\n    const {\n      style\n    } = this.div;\n    const {\n      height,\n      width\n    } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n    }\n  }\n  getInitialTranslation() {\n    return [0, 0];\n  }\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n      div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = {\n      passive: true,\n      capture: true\n    };\n    window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n        return;\n      }\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n    let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n    } else if (isHorizontal) {\n      ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n    } else {\n      ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n    }\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = this.#altTextButton = document.createElement(\"button\");\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\"click\", event => {\n      event.preventDefault();\n      this._uiManager.editAltText(this);\n    }, {\n      capture: true\n    });\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n    }\n  }\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then(msg => {\n      button.setAttribute(\"aria-label\", msg);\n    });\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n      button.setAttribute(\"aria-describedby\", id);\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\"\n              }\n            }\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative\n    };\n  }\n  set altTextData({\n    altText,\n    decorative\n  }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n    this.setInForeground();\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n      this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n    }\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n    (0, _tools.bindEvents)(this, this.div, [\"pointerdown\"]);\n    return this.div;\n  }\n  pointerdown(event) {\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      event.preventDefault();\n      return;\n    }\n    this.#hasBeenClicked = true;\n    this.#setUpDragSession(event);\n  }\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = {\n        passive: true,\n        capture: true\n      };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n    }\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n      }\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const {\n          isMac\n        } = _util.FeatureTest.platform;\n        if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n    switch (this.rotation) {\n      case 0:\n        return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n      case 90:\n        return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n      case 180:\n        return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n      case 270:\n        return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  onceAdded() {}\n  isEmpty() {\n    return false;\n  }\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n  serialize(isForCopying = false, context = null) {\n    (0, _util.unreachable)(\"An editor must be serializable\");\n  }\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager\n    });\n    editor.rotation = data.rotation;\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n    return editor;\n  }\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n  get isResizable() {\n    return false;\n  }\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n  updateParams(type, value) {}\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n  enterInEditMode() {}\n  get contentDiv() {\n    return this.div;\n  }\n  get isEditing() {\n    return this.#isEditing;\n  }\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const {\n      style\n    } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\nexports.AnnotationEditor = AnnotationEditor;\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex\n    };\n  }\n}\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\nexports.bindEvents = bindEvents;\nexports.opacityToHex = opacityToHex;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n}\nclass IdManager {\n  #id = 0;\n  getId() {\n    return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\nclass ImageManager {\n  #baseId = (0, _util.getUuid)();\n  #id = 0;\n  #cache = null;\n  static get _isSVGFittingCanvas() {\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n    return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n  }\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n      if (image.type === \"image/svg+xml\") {\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = data.svgUrl = fileReader.result;\n            imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n  async getFromFile(file) {\n    const {\n      lastModified,\n      name,\n      size,\n      type\n    } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\nclass CommandManager {\n  #commands = [];\n  #locked = false;\n  #maxSize;\n  #position = -1;\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n    if (this.#locked) {\n      return;\n    }\n    const save = {\n      cmd,\n      undo,\n      type\n    };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n    this.#commands.push(save);\n  }\n  undo() {\n    if (this.#position === -1) {\n      return;\n    }\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n    this.#position -= 1;\n  }\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n  destroy() {\n    this.#commands = null;\n  }\n}\nexports.CommandManager = CommandManager;\nclass KeyboardManager {\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n    return str;\n  }\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: {\n        bubbles = false,\n        args = [],\n        checker = null\n      }\n    } = info;\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\nexports.KeyboardManager = KeyboardManager;\nclass ColorManager {\n  static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n  get _colors() {\n    const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n    (0, _display_utils.getColorValues)(colors);\n    return (0, _util.shadow)(this, \"_colors\", colors);\n  }\n  convert(color) {\n    const rgb = (0, _display_utils.getRGB)(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return _util.Util.makeHexColor(...rgb);\n  }\n}\nexports.ColorManager = ColorManager;\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n  #allEditors = new Map();\n  #allLayers = new Map();\n  #altTextManager = null;\n  #annotationStorage = null;\n  #commandManager = new CommandManager();\n  #currentPageIndex = 0;\n  #deletedAnnotationsElementIds = new Set();\n  #draggingEditors = null;\n  #editorTypes = null;\n  #editorsToRescale = new Set();\n  #filterFactory = null;\n  #idManager = new IdManager();\n  #isEnabled = false;\n  #isWaiting = false;\n  #lastActiveElement = null;\n  #mode = _util.AnnotationEditorType.NONE;\n  #selectedEditors = new Set();\n  #pageColors = null;\n  #boundBlur = this.blur.bind(this);\n  #boundFocus = this.focus.bind(this);\n  #boundCopy = this.copy.bind(this);\n  #boundCut = this.cut.bind(this);\n  #boundPaste = this.paste.bind(this);\n  #boundKeydown = this.keydown.bind(this);\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false\n  };\n  #translation = [0, 0];\n  #translationTimeoutId = null;\n  #container = null;\n  #viewer = null;\n  static TRANSLATE_SMALL = 1;\n  static TRANSLATE_BIG = 10;\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n    const arrowChecker = self => {\n      const {\n        activeElement\n      } = document;\n      return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n    };\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n    return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0\n    };\n  }\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n  get hcmFilter() {\n    return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n  }\n  get direction() {\n    return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n  }\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n  onPageChanging({\n    pageNumber\n  }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n  focusMainContainer() {\n    this.#container.focus();\n  }\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height\n      } = layer.div.getBoundingClientRect();\n      if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n        return layer;\n      }\n    }\n    return null;\n  }\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n  onScaleChanging({\n    scale\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n  onRotationChanging({\n    pagesRotation\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n  addToAnnotationStorage(editor) {\n    if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\"focusin\", () => {\n      lastEditor._focusEventsAllowed = true;\n    }, {\n      once: true\n    });\n    lastActiveElement.focus();\n  }\n  #addKeyboardManager() {\n    window.addEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true\n    });\n  }\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true\n    });\n  }\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n  copy(event) {\n    event.preventDefault();\n    this.#activeEditor?.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n  paste(event) {\n    event.preventDefault();\n    const {\n      clipboardData\n    } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      (0, _util.warn)(`paste: \"${ex.message}\".`);\n      return;\n    }\n    if (!Array.isArray(data)) {\n      return;\n    }\n    this.unselectAll();\n    const layer = this.currentLayer;\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({\n        cmd,\n        undo,\n        mustExec: true\n      });\n    } catch (ex) {\n      (0, _util.warn)(`paste: \"${ex.message}\".`);\n    }\n  }\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(([key, value]) => this.#previousStates[key] !== value);\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details)\n      });\n    }\n  }\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details\n    });\n  }\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false\n      });\n      this.disableUserSelect(false);\n    }\n  }\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n  getId() {\n    return this.#idManager.getId();\n  }\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === _util.AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode\n    });\n  }\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === _util.AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection\n    });\n  }\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty()\n    });\n  }\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty()\n    });\n  }\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty()\n    });\n  }\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n    return false;\n  }\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: true\n    });\n  }\n  commitOrRemove() {\n    this.#activeEditor?.commitOrRemove();\n  }\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n  unselectAll() {\n    if (this.#activeEditor) {\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false\n    });\n  }\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n    const TIME_TO_WAIT = 1000;\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false\n      });\n    }, TIME_TO_WAIT);\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n  setUpDragSession() {\n    if (!this.hasSelection) {\n      return;\n    }\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1\n      });\n    }\n  }\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n    for (const [{\n      x,\n      y,\n      pageIndex\n    }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n    }\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, {\n          newX,\n          newY,\n          newPageIndex\n        }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, {\n          savedX,\n          savedY,\n          savedPageIndex\n        }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true\n    });\n    return true;\n  }\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n  getActive() {\n    return this.#activeEditor;\n  }\n  getMode() {\n    return this.#mode;\n  }\n  get imageManager() {\n    return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n  }\n}\nexports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\nexports.deprecated = deprecated;\nexports.getColorValues = getColorValues;\nexports.getCurrentTransform = getCurrentTransform;\nexports.getCurrentTransformInverse = getCurrentTransformInverse;\nexports.getFilenameFromUrl = getFilenameFromUrl;\nexports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\nexports.getRGB = getRGB;\nexports.getXfaPageViewport = getXfaPageViewport;\nexports.isDataScheme = isDataScheme;\nexports.isPdfFile = isPdfFile;\nexports.isValidFetchUrl = isValidFetchUrl;\nexports.loadScript = loadScript;\nexports.noContextMenu = noContextMenu;\nexports.setLayerDimensions = setLayerDimensions;\nvar _base_factory = __w_pdfjs_require__(7);\nvar _util = __w_pdfjs_require__(1);\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\nclass PixelsPerInch {\n  static CSS = 96.0;\n  static PDF = 72.0;\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\nexports.PixelsPerInch = PixelsPerInch;\nclass DOMFilterFactory extends _base_factory.BaseFilterFactory {\n  #_cache;\n  #_defs;\n  #docId;\n  #document;\n  #hcmFilter;\n  #hcmKey;\n  #hcmUrl;\n  #hcmHighlightFilter;\n  #hcmHighlightKey;\n  #hcmHighlightUrl;\n  #id = 0;\n  constructor({\n    docId,\n    ownerDocument = globalThis.document\n  } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n  get #cache() {\n    return this.#_cache ||= new Map();\n  }\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const {\n        style\n      } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n    return url;\n  }\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = _util.Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = _util.Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n    if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n      return this.#hcmUrl;\n    }\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + i / n * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n    let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n    }\n    this.#defs.style.color = \"\";\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n    filter.append(feColorMatrix);\n  }\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n    return filter;\n  }\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\nexports.DOMFilterFactory = DOMFilterFactory;\nclass DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n  constructor({\n    ownerDocument = globalThis.document\n  } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\nexports.DOMCanvasFactory = DOMCanvasFactory;\nasync function fetchData(url, asTypedArray = false) {\n  if (isValidFetchUrl(url, document.baseURI)) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n  }\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = (0, _util.stringToBytes)(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n    request.send(null);\n  });\n}\nclass DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, this.isCompressed).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n}\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\nclass DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, true);\n  }\n}\nexports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\nclass DOMSVGFactory extends _base_factory.BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\nexports.DOMSVGFactory = DOMSVGFactory;\nclass PageViewport {\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n  get rawDims() {\n    const {\n      viewBox\n    } = this;\n    return (0, _util.shadow)(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1]\n    });\n  }\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  convertToViewportPoint(x, y) {\n    return _util.Util.applyTransform([x, y], this.transform);\n  }\n  convertToViewportRectangle(rect) {\n    const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n  convertToPdfPoint(x, y) {\n    return _util.Util.applyInverseTransform([x, y], this.transform);\n  }\n}\nexports.PageViewport = PageViewport;\nclass RenderingCancelledException extends _util.BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\nexports.RenderingCancelledException = RenderingCancelledException;\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch {}\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\nclass StatTimer {\n  started = Object.create(null);\n  times = [];\n  time(name) {\n    if (name in this.started) {\n      (0, _util.warn)(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      (0, _util.warn)(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n    for (const {\n      name\n    } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const {\n      name,\n      start,\n      end\n    } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\nexports.StatTimer = StatTimer;\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const {\n      protocol\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false;\n  }\n}\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\nlet pdfDateStringRegex;\nclass PDFDateString {\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n    pdfDateStringRegex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\nexports.PDFDateString = PDFDateString;\nfunction getXfaPageViewport(xfaPage, {\n  scale = 1,\n  rotation = 0\n}) {\n  const {\n    width,\n    height\n  } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation\n  });\n}\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n  }\n  if (color.startsWith(\"rgb(\")) {\n    return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n  }\n  if (color.startsWith(\"rgba(\")) {\n    return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n  }\n  (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\nfunction getCurrentTransform(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\nfunction getCurrentTransformInverse(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\nfunction setLayerDimensions(div, viewport, mustFlip = false, mustRotate = true) {\n  if (viewport instanceof PageViewport) {\n    const {\n      pageWidth,\n      pageHeight\n    } = viewport.rawDims;\n    const {\n      style\n    } = div;\n    const useRound = _util.FeatureTest.isCSSRoundSupported;\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n  addFilter(maps) {\n    return \"none\";\n  }\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n  destroy(keepHCM = false) {}\n}\nexports.BaseFilterFactory = BaseFilterFactory;\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\")\n    };\n  }\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n  _createCanvas(width, height) {\n    (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n  }\n}\nexports.BaseCanvasFactory = BaseCanvasFactory;\nclass BaseCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = true\n  }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n    });\n  }\n  _fetchData(url, compressionType) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n}\nexports.BaseCMapReaderFactory = BaseCMapReaderFactory;\nclass BaseStandardFontDataFactory {\n  constructor({\n    baseUrl = null\n  }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n  async fetch({\n    filename\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n  _fetchData(url) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n}\nexports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    return svg;\n  }\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n  _createSVG(type) {\n    (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n  }\n}\nexports.BaseSVGFactory = BaseSVGFactory;\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MurmurHash3_64 = void 0;\nvar _util = __w_pdfjs_require__(1);\nconst SEED = 0xc3d2e1f0;\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if ((0, _util.isArrayBuffer)(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n    }\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        h1 ^= k1;\n        h1 = h1 << 13 | h1 >>> 19;\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n        k2 = k2 << 15 | k2 >>> 17;\n        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n        h2 ^= k2;\n        h2 = h2 << 13 | h2 >>> 19;\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n    k1 = 0;\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n    h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n    h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n  }\n}\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FontLoader = exports.FontFaceObject = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass FontLoader {\n  #systemFonts = new Set();\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null\n  }) {\n    this._document = ownerDocument;\n    this.nativeFontFaces = new Set();\n    this.styleElement = null;\n    this.loadingRequests = [];\n    this.loadTestFontId = 0;\n  }\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n    if (this.isFontLoadingAPISupported) {\n      const {\n        loadedName,\n        src,\n        style\n      } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n    (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n  }\n  async bind(font) {\n    if (font.attached || font.missingFile && !font.systemFontInfo) {\n      return;\n    }\n    font.attached = true;\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return;\n    }\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n    }\n  }\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n  get isSyncFontLoadingSupported() {\n    let supported = false;\n    if (_util.isNodeJS) {\n      supported = true;\n    } else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) {\n      supported = true;\n    }\n    return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n  }\n  _queueLoadingCallback(callback) {\n    function completeRequest() {\n      (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n    const {\n      loadingRequests\n    } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n  get _loadTestFont() {\n    const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n    return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n  }\n  _prepareFontLoadEvent(font, request) {\n    function int32(data, offset) {\n      return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    let called = 0;\n    function isFontReady(name, callback) {\n      if (++called > 30) {\n        (0, _util.warn)(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976;\n    data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858;\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n  }\n}\nexports.FontLoader = FontLoader;\nclass FontFaceObject {\n  constructor(translatedData, {\n    isEvalSupported = true,\n    disableFontFace = false,\n    ignoreErrors = false,\n    inspectFont = null\n  }) {\n    this.compiledGlyphs = Object.create(null);\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n    }\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = (0, _util.bytesToString)(this.data);\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n      return this.compiledGlyphs[character] = function (c, size) {};\n    }\n    if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n    }\n    return this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    };\n  }\n}\nexports.FontFaceObject = FontFaceObject;\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\nvar _base_factory = __w_pdfjs_require__(7);\nvar _util = __w_pdfjs_require__(1);\n;\n;\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = require(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\nclass NodeFilterFactory extends _base_factory.BaseFilterFactory {}\nexports.NodeFilterFactory = NodeFilterFactory;\nclass NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n  _createCanvas(width, height) {\n    const Canvas = require(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\nexports.NodeCanvasFactory = NodeCanvasFactory;\nclass NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n}\nexports.NodeCMapReaderFactory = NodeCMapReaderFactory;\nclass NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\nexports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CanvasGraphics = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _pattern_helper = __w_pdfjs_require__(12);\nvar _image_utils = __w_pdfjs_require__(13);\nconst MIN_FONT_SIZE = 16;\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\nconst EXECUTION_TIME = 15;\nconst EXECUTION_STEPS = 10;\nconst MAX_SIZE_TO_COMPILE = 1000;\nconst FULL_CHUNK_HEIGHT = 16;\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n  delete(id) {\n    delete this.cache[id];\n  }\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\nfunction drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n  const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n  if (b === 0 && c === 0) {\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rWidth, rHeight];\n  }\n  if (a === 0 && d === 0) {\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rHeight, rWidth];\n  }\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\nfunction compileType3Glyph(imgData) {\n  const {\n    width,\n    height\n  } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n  const lineSize = width + 7 & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        type = pp;\n        points[p] = 0;\n      } else {\n        type = pp & 0x33 * type >> 4;\n        points[p] &= type >> 2 | type << 2;\n      }\n      path.lineTo(p % width1, p / width1 | 0);\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n  data = null;\n  points = null;\n  const drawOutline = function (c) {\n    c.save();\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n  return drawOutline;\n}\nclass CanvasExtraState {\n  constructor(width, height) {\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textRise = 0;\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  updatePathMinMax(transform, x, y) {\n    [x, y] = _util.Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n  updateRectMinMax(transform, rect) {\n    const p1 = _util.Util.applyTransform(rect, transform);\n    const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n  updateScalingPathMinMax(transform, minMax) {\n    _util.Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n  getPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === _pattern_helper.PathType.STROKE) {\n      if (!transform) {\n        (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n      }\n      const scale = _util.Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = scale[0] * this.lineWidth / 2;\n      const yStrokePad = scale[1] * this.lineWidth / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n  updateClipFromPath() {\n    const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n  getClippedPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n  }\n}\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n  if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = width + 7 >> 3;\n    const white = 0xffffffff;\n    const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n      destPos = 0;\n      for (j = elemsInThisChunk; j--;) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n    ({\n      srcPos\n    } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0\n    }));\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (!_util.isNodeJS) {\n    const {\n      filter\n    } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n      bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n      bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n    }\n  }\n}\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = layerData[i] * alpha * scale | 0;\n  }\n}\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n    layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n  }\n}\nfunction genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n  const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n    const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = _util.Util.singularValueDecompose2dScale(transform);\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n  if (interpolate !== undefined) {\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    return true;\n  }\n  return false;\n}\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\nclass CanvasGraphics {\n  constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, {\n    optionalContentConfig,\n    markedContentStack = null\n  }, annotationCanvasMap, pageColors) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n    return fallback;\n  }\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null\n  }) {\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n    }\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n    this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n  }\n  executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n    if (argsArrayLen === i) {\n      return i;\n    }\n    const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n      fnId = fnArray[i];\n      if (fnId !== _util.OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n      i++;\n      if (i === argsArrayLen) {\n        return i;\n      }\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n    }\n  }\n  #restoreInitialState() {\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n    this.ctx.restore();\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n  endDrawing() {\n    this.#restoreInitialState();\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n  _scaleImage(img, inverseTransform) {\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n    let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight\n    };\n  }\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const {\n      width,\n      height\n    } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n        const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY\n        };\n      }\n      scaled = cachedImage;\n    }\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n    let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n    maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n    const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n    const fillCtx = fillCanvas.context;\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n    if (!scaled) {\n      scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n    drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n    fillCtx.globalCompositeOperation = \"source-in\";\n    const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n    fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n    fillCtx.fillRect(0, 0, width, height);\n    if (cache && !isPatternFill) {\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY)\n    };\n  }\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n  setRenderingIntent(intent) {}\n  setFlatness(flatness) {}\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n  }\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n  }\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n    this.suspendedCtx = null;\n  }\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n  save() {\n    if (this.inSMaskMode) {\n      copyCtxState(this.ctx, this.suspendedCtx);\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n      this.pendingClip = null;\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case _util.OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case _util.OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case _util.OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case _util.OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n          j += 6;\n          break;\n        case _util.OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case _util.OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n          j += 4;\n          break;\n        case _util.OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n    current.setCurrentPoint(x, y);\n  }\n  closePath() {\n    this.ctx.closePath();\n  }\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n        this.rescaleAndStroke(false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n      needRestore = true;\n    }\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n    this.consumePath();\n  }\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n  endPath() {\n    this.consumePath();\n  }\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n  beginText() {\n    this.current.textMatrix = _util.IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n    }\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n    if (fontObj.isType3Font) {\n      return;\n    }\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n    const patternFill = current.patternFill && !font.missingFile;\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fill();\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fillText(character, x, y);\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths ||= [];\n      paths.push({\n        transform: (0, _display_utils.getCurrentTransform)(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath\n      });\n    }\n  }\n  get isFontSubpixelAAEnabled() {\n    const {\n      context: ctx\n    } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n      patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n    ctx.lineWidth = lineWidth;\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n      return undefined;\n    }\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n      if (font.remeasure && width > 0) {\n        const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n        }\n      }\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n            const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n            this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n          }\n        }\n      }\n      const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n  showType3Text(glyphs) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n    ctx.scale(textHScale, fontDirection);\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = spacingDir * glyph * fontSize / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n      const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n  setCharWidth(xWidth, yWidth) {}\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n            optionalContentConfig: this.optionalContentConfig,\n            markedContentStack: this.markedContentStack\n          });\n        }\n      };\n      pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n  setStrokeRGBColor(r, g, b) {\n    const color = _util.Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n  setFillRGBColor(r, g, b) {\n    const color = _util.Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n    const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n    if (inv) {\n      const {\n        width,\n        height\n      } = ctx.canvas;\n      const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n  beginInlineImage() {\n    (0, _util.unreachable)(\"Should not call beginInlineImage\");\n  }\n  beginImageData() {\n    (0, _util.unreachable)(\"Should not call beginImageData\");\n  }\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n    this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n    const currentCtx = this.ctx;\n    if (!group.isolated) {\n      (0, _util.info)(\"TODO: Support non-isolated groups.\");\n    }\n    if (group.knockout) {\n      (0, _util.warn)(\"Knockout groups not supported.\");\n    }\n    const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n    let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n    const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n    bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n    if (group.smask) {\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null\n      });\n    } else {\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    this.ctx.imageSmoothingEnabled = false;\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n    this.ctx.save();\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n        const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n        const {\n          viewportScale\n        } = this;\n        const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n        const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n        this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n        const {\n          canvas,\n          context\n        } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n  paintImageMaskXObjectRepeat(img, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    img = this.getObject(img.data, img);\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n    ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n      const [x, y] = _util.Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (const image of images) {\n      const {\n        data,\n        width,\n        height,\n        transform\n      } = image;\n      const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const {\n      bitmap,\n      width,\n      height\n    } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n    return tmpCanvas.canvas;\n  }\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n    this.save();\n    if (!_util.isNodeJS) {\n      const {\n        filter\n      } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n    ctx.scale(1 / width, -1 / height);\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n    drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n    this.compose();\n    this.restore();\n  }\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n  markPoint(tag) {}\n  markPointProps(tag, properties) {}\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true\n    });\n  }\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties)\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n  beginCompat() {}\n  endCompat() {}\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n  getScaleForStroking() {\n    if (this._cachedScaleForStroking[0] === -1) {\n      const {\n        lineWidth\n      } = this.current;\n      const {\n        a,\n        b,\n        c,\n        d\n      } = this.ctx.getTransform();\n      let scaleX, scaleY;\n      if (b === 0 && c === 0) {\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n  rescaleAndStroke(saveRestore) {\n    const {\n      ctx\n    } = this;\n    const {\n      lineWidth\n    } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n    ctx.lineWidth = lineWidth || 1;\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n    ctx.scale(scaleX, scaleY);\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n    ctx.stroke();\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nexports.CanvasGraphics = CanvasGraphics;\nfor (const op in _util.OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TilingPattern = exports.PathType = void 0;\nexports.getShadingPattern = getShadingPattern;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\"\n};\nexports.PathType = PathType;\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n  getPattern() {\n    (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n  }\n}\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n    }\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = car - (car - cbr) * k | 0;\n      bytes[j++] = cag - (cag - cbg) * k | 0;\n      bytes[j++] = cab - (cab - cbb) * k | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n          drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    const EXPECTED_SCALE = 1.1;\n    const MAX_PATTERN_SIZE = 3000;\n    const BORDER_SIZE = 2;\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n    const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n    const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n    const tmpCtx = tmpCanvas.context;\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n    } else {\n      scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n    const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n    ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2\n};\nclass TilingPattern {\n  static MAX_PATTERN_SIZE = 3000;\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n    (0, _util.info)(\"TilingType: \" + tilingType);\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n    const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n    const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n    const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n    const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n    tmpCtx.save();\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n    graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n    graphics.executeOperatorList(operatorList);\n    graphics.endDrawing();\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0\n    };\n  }\n  getSizeAndScale(step, realOutputSize, scale) {\n    step = Math.abs(step);\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return {\n      scale,\n      size\n    };\n  }\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n    graphics.clip();\n    graphics.endPath();\n  }\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = _util.Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = _util.Util.transform(matrix, this.matrix);\n      }\n    }\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n    let domMatrix = new DOMMatrix(matrix);\n    domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n    return pattern;\n  }\n}\nexports.TilingPattern = TilingPattern;\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\nexports.convertToRGBA = convertToRGBA;\nexports.grayToRGBA = grayToRGBA;\nvar _util = __w_pdfjs_require__(1);\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case _util.ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case _util.ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n  return null;\n}\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false\n}) {\n  const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n    }\n  }\n  return {\n    srcPos,\n    destPos\n  };\n}\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n  if (_util.FeatureTest.isLittleEndian) {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n      dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n      dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n    }\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n      dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n      dest[destPos + 3] = s3 << 8 | 0xff;\n    }\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n    }\n  }\n  return {\n    srcPos,\n    destPos\n  };\n}\nfunction grayToRGBA(src, dest) {\n  if (_util.FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x10101 | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x1010100 | 0x000000ff;\n    }\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GlobalWorkerOptions = void 0;\nconst GlobalWorkerOptions = Object.create(null);\nexports.GlobalWorkerOptions = GlobalWorkerOptions;\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MessageHandler = void 0;\nvar _util = __w_pdfjs_require__(1);\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\nfunction wrapReason(reason) {\n  if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n    (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new _util.AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new _util.MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new _util.PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new _util.UnknownErrorException(reason.message, reason.details);\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.toString());\n  }\n}\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.DATA,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.ERROR,\n            callbackId: data.callbackId,\n            reason: wrapReason(reason)\n          });\n        });\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n  send(actionName, data, transfers) {\n    this.comObj.postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new _util.PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new _util.PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n      error(reason) {\n        (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n      sinkCapability: new _util.PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        streamSink.desiredSize = data.desiredSize;\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n      case StreamKind.ENQUEUE:\n        (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        (0, _util.assert)(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        (0, _util.assert)(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n  async #deleteStreamController(streamController, streamId) {\n    await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n    delete this.streamControllers[streamId];\n  }\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\nexports.MessageHandler = MessageHandler;\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Metadata = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass Metadata {\n  #metadataMap;\n  #data;\n  constructor({\n    parsedData,\n    rawData\n  }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n  getRaw() {\n    return this.#data;\n  }\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n  getAll() {\n    return (0, _util.objectFromMap)(this.#metadataMap);\n  }\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\nexports.Metadata = Metadata;\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OptionalContentConfig = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _murmurhash = __w_pdfjs_require__(8);\nconst INTERNAL = Symbol(\"INTERNAL\");\nclass OptionalContentGroup {\n  #visible = true;\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n  get visible() {\n    return this.#visible;\n  }\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n  #groups = new Map();\n  #initialHash = null;\n  #order = null;\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n    }\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n    this.#initialHash = this.getHash();\n  }\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        (0, _util.warn)(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      (0, _util.warn)(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        (0, _util.warn)(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    (0, _util.warn)(`Unknown group type ${group.type}.`);\n    return true;\n  }\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      (0, _util.warn)(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n    this.#cachedGetHash = null;\n  }\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n  getGroups() {\n    return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n  }\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new _murmurhash.MurmurHash3_64();\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return this.#cachedGetHash = hash.hexdigest();\n  }\n}\nexports.OptionalContentConfig = OptionalContentConfig;\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFDataTransportStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nclass PDFDataTransportStream {\n  constructor({\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null,\n    disableRange = false,\n    disableStream = false\n  }, pdfDataRangeTransport) {\n    (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n    if (initialData?.length > 0) {\n      const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n    this._pdfDataRangeTransport.transportReady();\n  }\n  _onReceiveData({\n    begin,\n    chunk\n  }) {\n    const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n    }\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      this._rangeReaders[0]?.onProgress?.({\n        loaded: evt.loaded\n      });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total\n      });\n    }\n  }\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\nexports.PDFDataTransportStream = PDFDataTransportStream;\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n  get headersReady() {\n    return this._headersReady;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFetchStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFFetchStream = PDFFetchStream;\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new _util.PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._headers = createHeaders(this._stream.httpHeaders);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n      this._reader = response.body.getReader();\n      this._headersCapability.resolve();\n      const getResponseHeader = name => {\n        return response.headers.get(name);\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new _util.PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    }).catch(this._readCapability.reject);\n    this.onProgress = null;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createResponseStatusError = createResponseStatusError;\nexports.extractFilenameFromHeader = extractFilenameFromHeader;\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\nexports.validateResponseStatus = validateResponseStatus;\nvar _util = __w_pdfjs_require__(1);\nvar _content_disposition = __w_pdfjs_require__(21);\nvar _display_utils = __w_pdfjs_require__(6);\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n  returnValues.suggestedLength = length;\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if ((0, _display_utils.isPdfFile)(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n    return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n}\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\nvar _util = __w_pdfjs_require__(1);\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = (0, _util.stringToBytes)(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {}\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replaceAll(\"_\", \" \");\n        text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n      try {\n        text = atob(text);\n      } catch {}\n      return textdecode(charset, text);\n    });\n  }\n  return \"\";\n}\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNetworkStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return (0, _util.stringToBytes)(data).buffer;\n}\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n    if (xhr.readyState !== 4) {\n      return;\n    }\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n    delete this.pendingRequests[xhrId];\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFNetworkStream = PDFNetworkStream;\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new _util.PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = (0, _network_utils.validateRangeRequestCapabilities)({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n    this._headersReceivedCapability.resolve();\n  }\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({\n          value: data.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength\n    });\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n  _close() {\n    this.onClosed?.(this);\n  }\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({\n        loaded: evt.loaded\n      });\n    }\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNodeStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\nfunction parseUrl(sourceUrl) {\n  const url = require(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFNodeStream = PDFNodeStream;\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = new _util.PromiseCapability();\n    this._headersCapability = new _util.PromiseCapability();\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new _util.PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new _util.AbortException(\"streaming is disabled\"));\n    }\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new _util.PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new _util.PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers\n  };\n}\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n      const getResponseHeader = name => {\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    };\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = require(\"http\");\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    } else {\n      const https = require(\"https\");\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    }\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    this._request.end();\n  }\n}\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = require(\"http\");\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    } else {\n      const https = require(\"https\");\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    }\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n    const fs = require(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._contentLength = stat.size;\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n    const fs = require(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, {\n      start,\n      end: end - 1\n    }));\n  }\n}\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SVGGraphics = void 0;\nvar _display_utils = __w_pdfjs_require__(6);\nvar _util = __w_pdfjs_require__(1);\n;\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\"\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst createObjectURL = function (data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], {\n      type: contentType\n    }));\n  }\n  const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = (b1 & 3) << 4 | b2 >> 4;\n    const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\nconst convertImgDataToPng = function () {\n  const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n  const CHUNK_WRAPPER_SIZE = 12;\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = crc >>> 8 ^ b;\n    }\n    return crc ^ -1;\n  }\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n    data[p] = len >> 24 & 0xff;\n    data[p + 1] = len >> 16 & 0xff;\n    data[p + 2] = len >> 8 & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n    data.set(body, p);\n    p += body.length;\n    const crc = crc32(data, offset + 4, p);\n    data[p] = crc >> 24 & 0xff;\n    data[p + 1] = crc >> 16 & 0xff;\n    data[p + 2] = crc >> 8 & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return b << 16 | a;\n  }\n  function deflateSync(literals) {\n    if (!_util.isNodeJS) {\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      const input = parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = require(\"zlib\").deflateSync(input, {\n        level: 9\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n    return deflateSyncUncompressed(literals);\n  }\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78;\n    idat[pi++] = 0x9c;\n    let pos = 0;\n    while (len > maxBlockLength) {\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = len >> 8 & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n    const adler = adler32(literals, 0, literals.length);\n    idat[pi++] = adler >> 24 & 0xff;\n    idat[pi++] = adler >> 16 & 0xff;\n    idat[pi++] = adler >> 8 & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n    switch (kind) {\n      case _util.ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = width + 7 >> 3;\n        break;\n      case _util.ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case _util.ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0;\n      literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n    if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++;\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n    const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n    const idat = deflateSync(literals);\n    const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n}();\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n    this.dashArray = [];\n    this.dashPhase = 0;\n    this.dependencies = [];\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n    this.maskId = \"\";\n  }\n  clone() {\n    return Object.create(this);\n  }\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({\n        fnId: 92,\n        fn: \"group\",\n        items: []\n      });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = Math.acos(m[0]) * 180 / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n}\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n    this.svgFactory = new _display_utils.DOMSVGFactory();\n    this.current = new SVGExtraState();\n    this.transformMatrix = _util.IDENTITY_MATRIX;\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n    this._operatorIdMapping = [];\n    for (const op in _util.OPS) {\n      this._operatorIdMapping[_util.OPS[op]] = op;\n    }\n  }\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n    return fallback;\n  }\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== _util.OPS.dependency) {\n        continue;\n      }\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n    this.tgrp = null;\n  }\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = _util.IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i]\n      });\n    }\n    return opListToTree(opList);\n  }\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n      switch (fnId | 0) {\n        case _util.OPS.beginText:\n          this.beginText();\n          break;\n        case _util.OPS.dependency:\n          break;\n        case _util.OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case _util.OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case _util.OPS.setFont:\n          this.setFont(args);\n          break;\n        case _util.OPS.showText:\n          this.showText(args[0]);\n          break;\n        case _util.OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case _util.OPS.endText:\n          this.endText();\n          break;\n        case _util.OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case _util.OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case _util.OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case _util.OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case _util.OPS.setTextMatrix:\n          this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case _util.OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case _util.OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case _util.OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case _util.OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case _util.OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case _util.OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case _util.OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case _util.OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case _util.OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case _util.OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case _util.OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case _util.OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case _util.OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case _util.OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case _util.OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case _util.OPS.fill:\n          this.fill();\n          break;\n        case _util.OPS.eoFill:\n          this.eoFill();\n          break;\n        case _util.OPS.stroke:\n          this.stroke();\n          break;\n        case _util.OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case _util.OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case _util.OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case _util.OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case _util.OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case _util.OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case _util.OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case _util.OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case _util.OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case _util.OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case _util.OPS.closePath:\n          this.closePath();\n          break;\n        case _util.OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case _util.OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case _util.OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case _util.OPS.nextLine:\n          this.nextLine();\n          break;\n        case _util.OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case _util.OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case _util.OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          (0, _util.warn)(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = _util.IDENTITY_MATRIX;\n    current.lineMatrix = _util.IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {}\n      const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n    const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n    if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n    if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n    current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n    const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n    this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n  }\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n    if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n  endText() {\n    const current = this.current;\n    if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n  }\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n  shadingFill(args) {\n    const {\n      width,\n      height\n    } = this.viewport;\n    const inv = _util.Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || _util.IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n    const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = _util.Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        (0, _util.warn)(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n    for (const op of ops) {\n      switch (op | 0) {\n        case _util.OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n          break;\n        case _util.OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case _util.OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case _util.OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n          j += 6;\n          break;\n        case _util.OPS.curveTo2:\n          d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case _util.OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case _util.OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n    d = d.join(\" \");\n    if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n  endPath() {\n    const current = this.current;\n    current.path = null;\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n    if (current.activeClipUrl) {\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n    this.tgrp = null;\n  }\n  clip(type) {\n    this.pendingClip = type;\n  }\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n  setRenderingIntent(intent) {}\n  setFlatness(flatness) {}\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n    element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n    element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n  }\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n  fillStroke() {\n    this.stroke();\n    this.fill();\n  }\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n    this._ensureTransformGroup().append(rect);\n  }\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, \" + \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n    this.paintInlineImageXObject(imgData, mask);\n  }\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n    }\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n  paintFormXObjectEnd() {}\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n    this.svg = rootGroup;\n    return svg;\n  }\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\nexports.SVGGraphics = SVGGraphics;\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaText = void 0;\nclass XfaText {\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null)\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n  static shouldBuildText(name) {\n    return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n  }\n}\nexports.XfaText = XfaText;\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TextLayerRenderTask = void 0;\nexports.renderTextLayer = renderTextLayer;\nexports.updateTextLayer = updateTextLayer;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n      alpha: false\n    });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n  }\n  return ctx;\n}\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n  ctx.canvas.width = ctx.canvas.height = 0;\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\nfunction appendText(task, geom, styles) {\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0\n  };\n  task._textDivs.push(textDiv);\n  const tx = _util.Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n  } else {\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n  textDivProperties.fontSize = fontHeight;\n  textDiv.setAttribute(\"role\", \"presentation\");\n  textDiv.textContent = geom.str;\n  textDiv.dir = geom.dir;\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\nfunction layout(params) {\n  const {\n    div,\n    scale,\n    properties,\n    ctx,\n    prevFontSize,\n    prevFontFamily\n  } = params;\n  const {\n    style\n  } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const {\n      fontFamily\n    } = style;\n    const {\n      canvasWidth,\n      fontSize\n    } = properties;\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n    const {\n      width\n    } = ctx.measureText(div.textContent);\n    if (width > 0) {\n      transform = `scaleX(${canvasWidth * scale / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new _util.PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported)\n    };\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n    (0, _display_utils.setLayerDimensions)(container, viewport);\n    this._capability.promise.finally(() => {\n      this._layoutTextParams = null;\n    }).catch(() => {});\n  }\n  get promise() {\n    return this._capability.promise;\n  }\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n      this._reader = null;\n    }\n    this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n  }\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n  _layoutText(textDiv) {\n    const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n  _render() {\n    const capability = new _util.PromiseCapability();\n    let styleCache = Object.create(null);\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const {\n        items,\n        styles\n      } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\nexports.TextLayerRenderTask = TextLayerRenderTask;\nfunction renderTextLayer(params) {\n  if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n    (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters \" + \"will be removed in the future, please use `textContentSource` instead.\");\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  const {\n    container,\n    viewport\n  } = params;\n  const style = getComputedStyle(container);\n  const visibility = style.getPropertyValue(\"visibility\");\n  const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n  if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) {\n    console.error(\"The `--scale-factor` CSS-variable must be set, \" + \"to the same value as `viewport.scale`, \" + \"either on the `container`-element itself or higher up in the DOM.\");\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true\n}) {\n  if (mustRotate) {\n    (0, _display_utils.setLayerDimensions)(container, {\n      rotation: viewport.rotation\n    });\n  }\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationEditorLayer = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _freetext = __w_pdfjs_require__(28);\nvar _ink = __w_pdfjs_require__(33);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _stamp = __w_pdfjs_require__(34);\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n  #allowClick = false;\n  #annotationLayer = null;\n  #boundPointerup = this.pointerup.bind(this);\n  #boundPointerdown = this.pointerdown.bind(this);\n  #editors = new Map();\n  #hadPointerDown = false;\n  #isCleaningUp = false;\n  #isDisabling = false;\n  #uiManager;\n  static _initialized = false;\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n\n  }) {\n    const editorTypes = [_freetext.FreeTextEditor, _ink.InkEditor, _stamp.StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n    this.#uiManager.addLayer(this);\n  }\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === _util.AnnotationEditorType.INK) {\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n    if (mode !== _util.AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n      this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n      this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n      this.div.hidden = false;\n    }\n  }\n  addInkEditorIfNeeded(isCommitting) {\n    if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) {\n      return;\n    }\n    if (!isCommitting) {\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n    const editor = this.#createAndAddNewEditor({\n      offsetX: 0,\n      offsetY: 0\n    }, false);\n    editor.setInBackground();\n  }\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n    if (!this.#annotationLayer) {\n      return;\n    }\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n    if (this.#annotationLayer) {\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const {\n          id\n        } = editable.data;\n        if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n    this.#uiManager.setActiveEditor(editor);\n  }\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const {\n      annotationElementId\n    } = editor;\n    if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n  remove(editor) {\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(false);\n    }\n  }\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      _editor.AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    if (editor.div.contains(activeElement)) {\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\"focusin\", () => {\n            editor._focusEventsAllowed = true;\n          }, {\n            once: true\n          });\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n  }\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: false\n    });\n  }\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case _util.AnnotationEditorType.FREETEXT:\n        return new _freetext.FreeTextEditor(params);\n      case _util.AnnotationEditorType.INK:\n        return new _ink.InkEditor(params);\n      case _util.AnnotationEditorType.STAMP:\n        return new _stamp.StampEditor(params);\n    }\n    return null;\n  }\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n    const {\n      offsetX,\n      offsetY\n    } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case _util.AnnotationEditorType.FREETEXT:\n        return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case _util.AnnotationEditorType.INK:\n        return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n      case _util.AnnotationEditorType.STAMP:\n        return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered\n    });\n    if (editor) {\n      this.add(editor);\n    }\n    return editor;\n  }\n  #getCenterPoint() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n    return {\n      offsetX,\n      offsetY\n    };\n  }\n  addNewEditor() {\n    this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n  }\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n  pointerup(event) {\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    if (!this.#hadPointerDown) {\n      return;\n    }\n    this.#hadPointerDown = false;\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n    if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n    this.#createAndAddNewEditor(event, false);\n  }\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      this.#hadPointerDown = false;\n      return;\n    }\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    this.#hadPointerDown = true;\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n  #cleanup() {\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n  render({\n    viewport\n  }) {\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n  update({\n    viewport\n  }) {\n    this.#uiManager.commitOrRemove();\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(this.div, {\n      rotation: viewport.rotation\n    });\n    this.updateMode();\n  }\n  get pageDimensions() {\n    const {\n      pageWidth,\n      pageHeight\n    } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\nexports.AnnotationEditorLayer = AnnotationEditorLayer;\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FreeTextEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _tools = __w_pdfjs_require__(5);\nvar _editor = __w_pdfjs_require__(4);\nvar _annotation_layer = __w_pdfjs_require__(29);\nclass FreeTextEditor extends _editor.AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n  #color;\n  #content = \"\";\n  #editorDivId = `${this.id}-editor`;\n  #fontSize;\n  #initialData = null;\n  static _freeTextDefaultContent = \"\";\n  static _internalPadding = 0;\n  static _defaultColor = null;\n  static _defaultFontSize = 10;\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n    const arrowChecker = self => self.isEmpty();\n    const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n    return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n      bubbles: true\n    }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  static _type = \"freetext\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"freeTextEditor\"\n    });\n    this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"]\n    });\n    const style = getComputedStyle(document.documentElement);\n    this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n  }\n  get propertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, this.#color]];\n  }\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, true);\n  }\n  getInitialTranslation() {\n    const scale = this.parentScale;\n    return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n    this.div.focus({\n      preventScroll: true\n    });\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      const {\n        currentLayer,\n        div\n      } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = this.#content = this.#extractText().trimEnd();\n    if (savedText === newText) {\n      return;\n    }\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false\n    });\n    this.#setEditorDimensions();\n  }\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      event.preventDefault();\n    }\n  }\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n    _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n    const {\n      style\n    } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n    this.div.append(this.editorDiv);\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n    (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        const {\n          position\n        } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n      }\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n    return this.div;\n  }\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n      this.editorDiv.append(div);\n    }\n  }\n  get contentDiv() {\n    return this.editorDiv;\n  }\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: {\n            fontSize,\n            fontColor\n          },\n          rect,\n          rotation,\n          id\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      if (!textContent || textContent.length === 0) {\n        return null;\n      }\n      initialData = data = {\n        annotationType: _util.AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    editor.#fontSize = data.fontSize;\n    editor.#color = _util.Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n    return editor;\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true\n      };\n    }\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n    const serialized = {\n      annotationType: _util.AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId\n    };\n    if (isForCopying) {\n      return serialized;\n    }\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n    serialized.id = this.annotationElementId;\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      value,\n      fontSize,\n      color,\n      rect,\n      pageIndex\n    } = this.#initialData;\n    return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n  }\n  #cheatInitialRect(delayed = false) {\n    if (!this.annotationElementId) {\n      return;\n    }\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(true), 0);\n      return;\n    }\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\nexports.FreeTextEditor = FreeTextEditor;\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _annotation_storage = __w_pdfjs_require__(3);\nvar _scripting_utils = __w_pdfjs_require__(30);\nvar _displayL10n_utils = __w_pdfjs_require__(31);\nvar _xfa_layer = __w_pdfjs_require__(32);\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1]\n  };\n}\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n    switch (subtype) {\n      case _util.AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n      case _util.AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n      case _util.AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n      case _util.AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n      case _util.AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n      case _util.AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n      case _util.AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n      case _util.AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n      case _util.AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n      case _util.AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n      case _util.AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n      case _util.AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n      case _util.AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n      case _util.AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n      case _util.AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n      case _util.AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n      case _util.AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n      case _util.AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\nclass AnnotationElement {\n  #hasBorder = false;\n  constructor(parameters, {\n    isRenderable = false,\n    ignoreBorder = false,\n    createQuadrilaterals = false\n  } = {}) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n  static _hasPopupData({\n    titleObj,\n    contentsObj,\n    richText\n  }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: {\n        page,\n        viewport\n      }\n    } = this;\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n    container.style.zIndex = this.parent.zIndex++;\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const {\n        rotation\n      } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n      switch (data.borderStyle.style) {\n        case _util.AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n        case _util.AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n        case _util.AnnotationBorderStyleType.BEVELED:\n          (0, _util.warn)(\"Unimplemented border style: beveled\");\n          break;\n        case _util.AnnotationBorderStyleType.INSET:\n          (0, _util.warn)(\"Unimplemented border style: inset\");\n          break;\n        case _util.AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n        default:\n          break;\n      }\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n      } else {\n        container.style.borderWidth = 0;\n      }\n    }\n    container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n    container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n    const {\n      rotation\n    } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${100 * width / pageWidth}%`;\n      container.style.height = `${100 * height / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n    return container;\n  }\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const {\n      pageWidth,\n      pageHeight\n    } = this.parent.viewport.rawDims;\n    const {\n      width,\n      height\n    } = getRectDims(this.data.rect);\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = 100 * width / pageWidth;\n      elementHeight = 100 * height / pageHeight;\n    } else {\n      elementWidth = 100 * height / pageWidth;\n      elementHeight = 100 * width / pageHeight;\n    }\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n      });\n    };\n    return (0, _util.shadow)(this, \"_commonActions\", {\n      display: event => {\n        const {\n          display\n        } = event.detail;\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print\n        });\n      },\n      hidden: event => {\n        const {\n          hidden\n        } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({\n          preventScroll: false\n        }), 0);\n      },\n      userName: event => {\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle\n        });\n      }\n    });\n  }\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail\n          },\n          target: element\n        };\n        action(eventProxy);\n        delete storedData[actionName];\n      }\n    }\n  }\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const {\n      quadPoints\n    } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n    if (quadPoints.length === 1) {\n      const [, {\n        x: trX,\n        y: trY\n      }, {\n        x: blX,\n        y: blY\n      }] = quadPoints[0];\n      if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n        return;\n      }\n    }\n    const {\n      style\n    } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const {\n        borderColor,\n        borderWidth\n      } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n      this.container.classList.add(\"hasBorder\");\n    }\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n    const {\n      svgFactory\n    } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n    for (const [, {\n      x: trX,\n      y: trY\n    }, {\n      x: blX,\n      y: blY\n    }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n    }\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n  _createPopup() {\n    const {\n      container,\n      data\n    } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation\n      },\n      parent: this.parent,\n      elements: [this]\n    });\n    this.parent.div.append(popup.render());\n  }\n  render() {\n    (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n  }\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const {\n          page,\n          id,\n          exportValues\n        } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n          const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({\n            id,\n            exportValue,\n            domElement\n          });\n        }\n      }\n      return fields;\n    }\n    for (const domElement of document.getElementsByName(name)) {\n      const {\n        exportValue\n      } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({\n        id,\n        exportValue,\n        domElement\n      });\n    }\n    return fields;\n  }\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: {\n        id: editId\n      }\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId\n      });\n    });\n  }\n}\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n  render() {\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n    return this.container;\n  }\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === \"\") {\n      this.#setInternalLink();\n    }\n  }\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name\n          }\n        });\n        return false;\n      };\n    }\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n    if (!this._fieldObjects) {\n      (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n    link.onclick = () => {\n      otherClickAction?.();\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include\n      } = resetForm;\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const {\n            id\n          } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const {\n          id\n        } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"checkbox\":\n          case \"radiobutton\":\n            {\n              const value = field.defaultValue === field.exportValues;\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"combobox\":\n          case \"listbox\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          default:\n            continue;\n        }\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n      if (this.enableScripting) {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\"\n          }\n        });\n      }\n      return false;\n    };\n  }\n}\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n    const image = document.createElement(\"img\");\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({\n      type: this.data.name\n    });\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.append(image);\n    return this.container;\n  }\n}\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n    return this.container;\n  }\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n  _getKeyModifier(event) {\n    const {\n      isWin,\n      isMac\n    } = _util.FeatureTest.platform;\n    return isWin && event.ctrlKey || isMac && event.metaKey;\n  }\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event)\n          }\n        });\n      });\n    } else {\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n        if (!valueGetter) {\n          return;\n        }\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event)\n          }\n        });\n      });\n    }\n  }\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= {\n            focused: false\n          };\n        }\n        this._setEventListener(element, elementData, baseName, eventName, getter);\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n  }\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const {\n      fontColor\n    } = this.data.defaultAppearanceData;\n    const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n    const style = element.style;\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n    } else {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n    style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, {\n      isRenderable\n    });\n  }\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(base.name, base.id)) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, {\n        [keyInStorage]: value\n      });\n    }\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    this.container.classList.add(\"textWidgetAnnotation\");\n    let element = null;\n    if (this.renderForms) {\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n      let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false\n      };\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n      this._setRequired(element, this.data.required);\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, {\n          value: event.target.value\n        });\n        this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n        elementData.formattedValue = null;\n      });\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n      let blurListener = event => {\n        const {\n          formattedValue\n        } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        event.target.scrollLeft = 0;\n      };\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const {\n            target\n          } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, {\n                value: elementData.userValue.toString()\n              });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const {\n                formattedValue\n              } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const {\n                charLimit\n              } = event.detail;\n              const {\n                target\n              } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, {\n                value\n              });\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd\n                }\n              });\n            }\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const {\n            value\n          } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd\n            }\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const {\n            value\n          } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd\n              }\n            });\n          }\n          _blurListener(event);\n        });\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const {\n              data,\n              target\n            } = event;\n            const {\n              value,\n              selectionStart,\n              selectionEnd\n            } = target;\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n            switch (event.inputType) {\n              case \"deleteWordBackward\":\n                {\n                  const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                  if (match) {\n                    selStart -= match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteWordForward\":\n                {\n                  const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                  if (match) {\n                    selEnd += match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd\n              }\n            });\n          });\n        }\n        this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n      }\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: !!parameters.data.hasOwnCanvas\n    });\n  }\n}\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== \"Off\";\n      storage.setValue(id, {\n        value\n      });\n    }\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const checkbox of this._getElementsByName(name, id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, {\n          value: curChecked\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, {\n              value: event.target.checked\n            });\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== data.buttonValue;\n      storage.setValue(id, {\n        value\n      });\n    }\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const radio of this._getElementsByName(name, id)) {\n        storage.setValue(radio.id, {\n          value: false\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, {\n                value: curChecked\n              });\n            }\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      ignoreBorder: parameters.data.hasAppearance\n    });\n  }\n  render() {\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n    return container;\n  }\n}\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue\n    });\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const {\n        options,\n        multiple\n      } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n    };\n    let selectedValues = getValue(false);\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return {\n          displayValue: option.textContent,\n          exportValue: option.value\n        };\n      });\n    };\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(options, option => option.selected);\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, {\n              value: null,\n              items: []\n            });\n            selectedValues = getValue(false);\n          },\n          insert(event) {\n            const {\n              index,\n              displayValue,\n              exportValue\n            } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          items(event) {\n            const {\n              items\n            } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const {\n                displayValue,\n                exportValue\n              } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(true);\n        storage.setValue(id, {\n          value: exportValue\n        });\n        event.preventDefault();\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false\n          }\n        });\n      });\n      this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, {\n          value: getValue(true)\n        });\n      });\n    }\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {}\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const {\n      data,\n      elements\n    } = parameters;\n    super(parameters, {\n      isRenderable: AnnotationElement._hasPopupData(data)\n    });\n    this.elements = elements;\n  }\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open\n    });\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n    this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${_util.AnnotationPrefix}${id}`).join(\",\"));\n    return this.container;\n  }\n}\nclass PopupElement {\n  #dateTimePromise = null;\n  #boundKeyDown = this.#keyDown.bind(this);\n  #boundHide = this.#hide.bind(this);\n  #boundShow = this.#show.bind(this);\n  #boundToggle = this.#toggle.bind(this);\n  #color = null;\n  #container = null;\n  #contentsObj = null;\n  #elements = null;\n  #parent = null;\n  #parentRect = null;\n  #pinned = false;\n  #popup = null;\n  #rect = null;\n  #richText = null;\n  #titleObj = null;\n  #wasVisible = false;\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n    const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString()\n      });\n    }\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n  }\n  render() {\n    if (this.#popup) {\n      return;\n    }\n    const {\n      page: {\n        view\n      },\n      viewport: {\n        rawDims: {\n          pageWidth,\n          pageHeight,\n          pageX,\n          pageY\n        }\n      }\n    } = this.#parent;\n    const popup = this.#popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    if (this.#color) {\n      const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n      if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n      }\n    }\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({\n      dir: title.dir,\n      str: title.textContent\n    } = this.#titleObj);\n    popup.append(header);\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n      _xfa_layer.XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n    const normalizedRect = _util.Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n    const {\n      style\n    } = this.#container;\n    style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n    style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n    this.#container.append(popup);\n  }\n  _formatContents({\n    str,\n    dir\n  }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n      this.#toggle();\n    }\n  }\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n  }\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n  }\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this._editOnDoubleClick();\n    return this.container;\n  }\n}\nexports.FreeTextAnnotationElement = FreeTextAnnotationElement;\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n    svg.append(line);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n    svg.append(square);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n    svg.append(circle);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n    const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n    svg.append(polyline);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = _util.AnnotationEditorType.INK;\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    for (const inkList of data.inkLists) {\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n      svg.append(polyline);\n    }\n    this.container.append(svg);\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nexports.InkAnnotationElement = InkAnnotationElement;\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\nexports.StampAnnotationElement = StampAnnotationElement;\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n    const {\n      filename,\n      content\n    } = this.data.file;\n    this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n    this.content = content;\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content\n    });\n  }\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n    const {\n      container,\n      data\n    } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n    container.append(trigger);\n    return container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n  #download() {\n    this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n  }\n}\nclass AnnotationLayer {\n  #accessibilityManager = null;\n  #annotationCanvasMap = null;\n  #editableAnnotations = new Map();\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n    this.l10n ||= _displayL10n_utils.NullL10n;\n  }\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${_util.AnnotationPrefix}${id}`;\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n  }\n  async render(params) {\n    const {\n      annotations\n    } = params;\n    const layer = this.div;\n    (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new _display_utils.DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null\n    };\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const {\n          width,\n          height\n        } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue;\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n      if (!element.isRenderable) {\n        continue;\n      }\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n    this.#setAnnotationCanvasMap();\n    await this.l10n.translate(layer);\n  }\n  update({\n    viewport\n  }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(layer, {\n      rotation: viewport.rotation\n    });\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n      const {\n        firstChild\n      } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\nexports.AnnotationLayer = AnnotationLayer;\n\n/***/ }),\n/* 30 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ColorConverters = void 0;\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n}\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n  static T_HTML() {\n    return \"#00000000\";\n  }\n  static T_rgb() {\n    return [null];\n  }\n  static CMYK_RGB([c, y, m, k]) {\n    return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n  static CMYK_rgb([c, y, m, k]) {\n    return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n  }\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\nexports.ColorConverters = ColorConverters;\n\n/***/ }),\n/* 31 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NullL10n = void 0;\nexports.getL10nFallback = getL10nFallback;\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n  annotation_date_string: \"{{date}}, {{time}}\",\n  printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n};\n{\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n  async getDirection() {\n    return \"ltr\";\n  },\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n  async translate(element) {}\n};\nexports.NullL10n = NullL10n;\n\n/***/ }),\n/* 32 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaLayer = void 0;\nvar _xfa_text = __w_pdfjs_require__(25);\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, {\n      value: null\n    });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n        break;\n      case \"input\":\n        if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, {\n              value: event.target.value\n            });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n          storage.setValue(id, {\n            value\n          });\n        });\n        break;\n    }\n  }\n  static setAttributes({\n    html,\n    element,\n    storage = null,\n    intent,\n    linkService\n  }) {\n    const {\n      attributes\n    } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n    if (attributes.type === \"radio\") {\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n    }\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n    const textDivs = [];\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n      const {\n        name\n      } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n      const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService\n        });\n      }\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (_xfa_text.XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n    for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n      el.setAttribute(\"readOnly\", true);\n    }\n    return {\n      textDivs\n    };\n  }\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\nexports.XfaLayer = XfaLayer;\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.InkEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _annotation_layer = __w_pdfjs_require__(29);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _tools = __w_pdfjs_require__(5);\nclass InkEditor extends _editor.AnnotationEditor {\n  #baseHeight = 0;\n  #baseWidth = 0;\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n  #currentPath2D = new Path2D();\n  #disableEditing = false;\n  #hasSomethingToDraw = false;\n  #isCanvasInitialized = false;\n  #observer = null;\n  #realWidth = 0;\n  #realHeight = 0;\n  #requestFrameCallback = null;\n  static _defaultColor = null;\n  static _defaultOpacity = 1;\n  static _defaultThickness = 1;\n  static _type = \"ink\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"inkEditor\"\n    });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"]\n    });\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case _util.AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case _util.AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case _util.AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case _util.AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n  }\n  get propertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))]];\n  }\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n    this.#observer.disconnect();\n    this.#observer = null;\n    super.remove();\n  }\n  setParent(parent) {\n    if (!this.parent && parent) {\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n    this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n  isEmpty() {\n    return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n  }\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height]\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n  #setStroke() {\n    const {\n      ctx,\n      color,\n      opacity,\n      thickness,\n      parentScale,\n      scaleFactor\n    } = this;\n    ctx.lineWidth = thickness * parentScale / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n  }\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n    this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n  }\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n    this.#draw(x, y);\n    this.#endPath();\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: true\n    });\n  }\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n    const {\n      ctx\n    } = this;\n    ctx.save();\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n    ctx.restore();\n  }\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n    path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n  }\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n      const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n      const control2 = [x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3];\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n      [x0, y0] = [x3, y3];\n    }\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n    const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n    const control2 = [x2 + 2 * (x1 - x2) / 3, y2 + 2 * (y1 - y2) / 3];\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n    const {\n      canvas,\n      ctx\n    } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n    super.commit();\n    this.isEditing = false;\n    this.disableEditMode();\n    this.setInForeground();\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n    this.#fitToContent(true);\n    this.makeResizable();\n    this.parent.addInkEditorIfNeeded(true);\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true\n    });\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n    this.setInForeground();\n    event.preventDefault();\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    }, 10);\n    this.#stopDrawing(event.offsetX, event.offsetY);\n    this.addToAnnotationStorage();\n    this.setInBackground();\n  }\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then(msg => this.div?.setAttribute(\"aria-label\", msg));\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n    this.#createCanvas();\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n    this.#createObserver();\n    return this.div;\n  }\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) {\n      return;\n    }\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n    this.canvas.style.visibility = \"hidden\";\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n    this.#setCanvasDims();\n    this.#redraw();\n    this.canvas.style.visibility = \"visible\";\n    this.fixDims();\n  }\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n  }\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n    }\n    return path2D;\n  }\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n      });\n    }\n    return paths;\n  }\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n    return [xMin, yMin, xMax, yMax];\n  }\n  #getPadding() {\n    return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n  }\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setAspectRatio(width, height);\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n    this.#realWidth = width;\n    this.#realHeight = height;\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n  }\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof _annotation_layer.InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    editor.thickness = data.thickness;\n    editor.color = _util.Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n    const {\n      paths,\n      rect,\n      rotation\n    } = data;\n    for (let {\n      bezier\n    } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n    return editor;\n  }\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const rect = this.getRect(0, 0);\n    const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n    return {\n      annotationType: _util.AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId\n    };\n  }\n}\nexports.InkEditor = InkEditor;\n\n/***/ }),\n/* 34 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StampEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _annotation_layer = __w_pdfjs_require__(29);\nclass StampEditor extends _editor.AnnotationEditor {\n  #bitmap = null;\n  #bitmapId = null;\n  #bitmapPromise = null;\n  #bitmapUrl = null;\n  #bitmapFile = null;\n  #canvas = null;\n  #observer = null;\n  #resizeTimeoutId = null;\n  #isSvg = false;\n  #hasBeenAddedInUndoStack = false;\n  static _type = \"stamp\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"stampEditor\"\n    });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n);\n  }\n  static get supportedTypes() {\n    const types = [\"apng\", \"avif\", \"bmp\", \"gif\", \"jpeg\", \"png\", \"svg+xml\", \"webp\", \"x-icon\"];\n    return (0, _util.shadow)(this, \"supportedTypes\", types.map(type => `image/${type}`));\n  }\n  static get supportedTypesStr() {\n    return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n  static paste(item, parent) {\n    parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile()\n    });\n  }\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n          this.#getBitmapFetched(data);\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    input.click();\n  }\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n  rebuild() {\n    if (!this.parent) {\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n  isEmpty() {\n    return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n  }\n  get isResizable() {\n    return true;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.div.hidden = true;\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n    }\n    return this.div;\n  }\n  #createCanvas() {\n    const {\n      div\n    } = this;\n    let {\n      width,\n      height\n    } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n      const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n    this._uiManager.enableWaiting(false);\n    const canvas = this.#canvas = document.createElement(\"canvas\");\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\"\n        }\n      }\n    });\n    this.addAltTextButton();\n  }\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n  #scaleBitmap(width, height) {\n    const {\n      width: bitmapWidth,\n      height: bitmapHeight\n    } = this.#bitmap;\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n      if (newWidth > 2 * width) {\n        newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n      }\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n      bitmap = offscreen.transferToImageBitmap();\n    }\n    return bitmap;\n  }\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || canvas.width === width && canvas.height === height) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n  }\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      const canvas = document.createElement(\"canvas\");\n      ({\n        width: canvas.width,\n        height: canvas.height\n      } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n      return canvas.toDataURL();\n    }\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n      const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n      return offscreen.transferToImageBitmap();\n    }\n    return structuredClone(this.#bitmap);\n  }\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof _annotation_layer.StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const {\n      rect,\n      bitmapUrl,\n      bitmapId,\n      isSvg,\n      accessibilityData\n    } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n    return editor;\n  }\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const serialized = {\n      annotationType: _util.AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId\n    };\n    if (isForCopying) {\n      serialized.bitmapUrl = this.#serializeBitmap(true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n    const {\n      decorative,\n      altText\n    } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = {\n        type: \"Figure\",\n        alt: altText\n      };\n    }\n    if (context === null) {\n      return serialized;\n    }\n    context.stamps ||= new Map();\n    const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      context.stamps.set(this.#bitmapId, {\n        area,\n        serialized\n      });\n      serialized.bitmap = this.#serializeBitmap(false);\n    } else if (this.#isSvg) {\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(false);\n      }\n    }\n    return serialized;\n  }\n}\nexports.StampEditor = StampEditor;\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\nvar exports = __webpack_exports__;\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"AbortException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AbortException;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _annotation_editor_layer.AnnotationEditorLayer;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorParamsType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationEditorParamsType;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationEditorType;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorUIManager\", ({\n  enumerable: true,\n  get: function () {\n    return _tools.AnnotationEditorUIManager;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _annotation_layer.AnnotationLayer;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationMode\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationMode;\n  }\n}));\nObject.defineProperty(exports, \"CMapCompressionType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.CMapCompressionType;\n  }\n}));\nObject.defineProperty(exports, \"DOMSVGFactory\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.DOMSVGFactory;\n  }\n}));\nObject.defineProperty(exports, \"FeatureTest\", ({\n  enumerable: true,\n  get: function () {\n    return _util.FeatureTest;\n  }\n}));\nObject.defineProperty(exports, \"GlobalWorkerOptions\", ({\n  enumerable: true,\n  get: function () {\n    return _worker_options.GlobalWorkerOptions;\n  }\n}));\nObject.defineProperty(exports, \"ImageKind\", ({\n  enumerable: true,\n  get: function () {\n    return _util.ImageKind;\n  }\n}));\nObject.defineProperty(exports, \"InvalidPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.InvalidPDFException;\n  }\n}));\nObject.defineProperty(exports, \"MissingPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.MissingPDFException;\n  }\n}));\nObject.defineProperty(exports, \"OPS\", ({\n  enumerable: true,\n  get: function () {\n    return _util.OPS;\n  }\n}));\nObject.defineProperty(exports, \"PDFDataRangeTransport\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFDataRangeTransport;\n  }\n}));\nObject.defineProperty(exports, \"PDFDateString\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PDFDateString;\n  }\n}));\nObject.defineProperty(exports, \"PDFWorker\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFWorker;\n  }\n}));\nObject.defineProperty(exports, \"PasswordResponses\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PasswordResponses;\n  }\n}));\nObject.defineProperty(exports, \"PermissionFlag\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PermissionFlag;\n  }\n}));\nObject.defineProperty(exports, \"PixelsPerInch\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PixelsPerInch;\n  }\n}));\nObject.defineProperty(exports, \"PromiseCapability\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PromiseCapability;\n  }\n}));\nObject.defineProperty(exports, \"RenderingCancelledException\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.RenderingCancelledException;\n  }\n}));\nObject.defineProperty(exports, \"SVGGraphics\", ({\n  enumerable: true,\n  get: function () {\n    return _api.SVGGraphics;\n  }\n}));\nObject.defineProperty(exports, \"UnexpectedResponseException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.UnexpectedResponseException;\n  }\n}));\nObject.defineProperty(exports, \"Util\", ({\n  enumerable: true,\n  get: function () {\n    return _util.Util;\n  }\n}));\nObject.defineProperty(exports, \"VerbosityLevel\", ({\n  enumerable: true,\n  get: function () {\n    return _util.VerbosityLevel;\n  }\n}));\nObject.defineProperty(exports, \"XfaLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _xfa_layer.XfaLayer;\n  }\n}));\nObject.defineProperty(exports, \"build\", ({\n  enumerable: true,\n  get: function () {\n    return _api.build;\n  }\n}));\nObject.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _util.createValidAbsoluteUrl;\n  }\n}));\nObject.defineProperty(exports, \"getDocument\", ({\n  enumerable: true,\n  get: function () {\n    return _api.getDocument;\n  }\n}));\nObject.defineProperty(exports, \"getFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getPdfFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getPdfFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getXfaPageViewport\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getXfaPageViewport;\n  }\n}));\nObject.defineProperty(exports, \"isDataScheme\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.isDataScheme;\n  }\n}));\nObject.defineProperty(exports, \"isPdfFile\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.isPdfFile;\n  }\n}));\nObject.defineProperty(exports, \"loadScript\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.loadScript;\n  }\n}));\nObject.defineProperty(exports, \"noContextMenu\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.noContextMenu;\n  }\n}));\nObject.defineProperty(exports, \"normalizeUnicode\", ({\n  enumerable: true,\n  get: function () {\n    return _util.normalizeUnicode;\n  }\n}));\nObject.defineProperty(exports, \"renderTextLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _text_layer.renderTextLayer;\n  }\n}));\nObject.defineProperty(exports, \"setLayerDimensions\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.setLayerDimensions;\n  }\n}));\nObject.defineProperty(exports, \"shadow\", ({\n  enumerable: true,\n  get: function () {\n    return _util.shadow;\n  }\n}));\nObject.defineProperty(exports, \"updateTextLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _text_layer.updateTextLayer;\n  }\n}));\nObject.defineProperty(exports, \"version\", ({\n  enumerable: true,\n  get: function () {\n    return _api.version;\n  }\n}));\nvar _util = __w_pdfjs_require__(1);\nvar _api = __w_pdfjs_require__(2);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _text_layer = __w_pdfjs_require__(26);\nvar _annotation_editor_layer = __w_pdfjs_require__(27);\nvar _tools = __w_pdfjs_require__(5);\nvar _annotation_layer = __w_pdfjs_require__(29);\nvar _worker_options = __w_pdfjs_require__(14);\nvar _xfa_layer = __w_pdfjs_require__(32);\nconst pdfjsVersion = '3.11.174';\nconst pdfjsBuild = 'ce8716743';\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=pdf.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(globalThis, () => {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      typeof navigator === \"undefined\"\n    ) {\n      return shadow(this, \"platform\", { isWin: false, isMac: false });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\"),\n    });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nclass PromiseCapability {\n  #settled = false;\n\n  constructor() {\n    /**\n     * @type {Promise<any>} The Promise object.\n     */\n    this.promise = new Promise((resolve, reject) => {\n      /**\n       * @type {function} Fulfills the Promise.\n       */\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n\n      /**\n       * @type {function} Rejects the Promise.\n       */\n      this.reject = reason => {\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          assert(reason instanceof Error, 'Expected valid \"reason\" argument.');\n        }\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n\n  /**\n   * @type {boolean} If the Promise has been fulfilled/rejected.\n   */\n  get settled() {\n    return this.#settled;\n  }\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\")\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (\n    typeof crypto !== \"undefined\" &&\n    typeof crypto?.getRandomValues === \"function\"\n  ) {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isNodeJS,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  AnnotationStorage,\n  PrintAnnotationStorage,\n  SerializableEmpty,\n} from \"./annotation_storage.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n} from \"display-node_utils\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { PDFFetchStream } from \"display-fetch_stream\";\nimport { PDFNetworkStream } from \"display-network\";\nimport { PDFNodeStream } from \"display-node_stream\";\nimport { SVGGraphics } from \"display-svg\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\nconst DELAYED_CLEANUP_TIMEOUT = 5000; // ms\n\nconst DefaultCanvasFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultFilterFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeFilterFactory\n    : DOMFilterFactory;\nconst DefaultStandardFontDataFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef { TypedArray | ArrayBuffer | Array<number> | string } BinaryData\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string | URL} [url] - The URL of the PDF.\n * @property {BinaryData} [data] - Binary PDF data.\n *   Use TypedArrays (Uint8Array) to improve the memory usage. If PDF data is\n *   BASE64-encoded, use `atob()` to convert it to a binary string first.\n *\n *   NOTE: If TypedArrays are used they will generally be transferred to the\n *   worker-thread. This will help reduce main-thread memory usage, however\n *   it will take ownership of the TypedArrays.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not. The default value is `true`.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [isOffscreenCanvasSupported] - Determines if we can use\n *   `OffscreenCanvas` in the worker. Primarily used to improve performance of\n *   image conversion/rendering.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {number} [canvasMaxAreaInBytes] - The integer value is used to\n *   know when an image must be resized (uses `OffscreenCanvas` in the worker).\n *   If it's -1 then a possibly slow algorithm is used to guess the max value.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object} [filterFactory] - A factory instance that will be used\n *   to create SVG filters when rendering some images on the main canvas.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string | URL | TypedArray | ArrayBuffer | DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (typeof src === \"string\" || src instanceof URL) {\n      src = { url: src };\n    } else if (isArrayBuffer(src)) {\n      src = { data: src };\n    }\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\n      \"Invalid parameter object: need either .data, .range or .url\"\n    );\n  }\n  const task = new PDFDocumentLoadingTask();\n  const { docId } = task;\n\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport =\n    src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize =\n    Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0\n      ? src.rangeChunkSize\n      : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n  // URLs anyway. We want to avoid sending them to the worker-thread, since\n  // they contain the *entire* PDF document and can thus be arbitrarily long.\n  const docBaseUrl =\n    typeof src.docBaseUrl === \"string\" && !isDataScheme(src.docBaseUrl)\n      ? src.docBaseUrl\n      : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl =\n    typeof src.standardFontDataUrl === \"string\"\n      ? src.standardFontDataUrl\n      : null;\n  const StandardFontDataFactory =\n    src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize =\n    Number.isInteger(src.maxImageSize) && src.maxImageSize > -1\n      ? src.maxImageSize\n      : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported =\n    typeof src.isOffscreenCanvasSupported === \"boolean\"\n      ? src.isOffscreenCanvasSupported\n      : !isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes)\n    ? src.canvasMaxAreaInBytes\n    : -1;\n  const disableFontFace =\n    typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n\n  // Parameters whose default values depend on other parameters.\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts =\n    typeof src.useSystemFonts === \"boolean\"\n      ? src.useSystemFonts\n      : !isNodeJS && !disableFontFace;\n  const useWorkerFetch =\n    typeof src.useWorkerFetch === \"boolean\"\n      ? src.useWorkerFetch\n      : (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        (CMapReaderFactory === DOMCMapReaderFactory &&\n          StandardFontDataFactory === DOMStandardFontDataFactory &&\n          cMapUrl &&\n          standardFontDataUrl &&\n          isValidFetchUrl(cMapUrl, document.baseURI) &&\n          isValidFetchUrl(standardFontDataUrl, document.baseURI));\n  const canvasFactory =\n    src.canvasFactory || new DefaultCanvasFactory({ ownerDocument });\n  const filterFactory =\n    src.filterFactory || new DefaultFilterFactory({ docId, ownerDocument });\n\n  // Parameters only intended for development/testing purposes.\n  const styleElement =\n    typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n      ? src.styleElement\n      : null;\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(verbosity);\n\n  // Ensure that the various factories can be initialized, when necessary,\n  // since the user may provide *custom* ones.\n  const transportFactory = {\n    canvasFactory,\n    filterFactory,\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked,\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl,\n    });\n  }\n\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const fetchDocParams = {\n    docId,\n    apiVersion:\n      typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n        ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n        : null,\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null,\n    },\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement,\n  };\n\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length,\n              initialData: rangeTransport.initialData,\n              progressiveDone: rangeTransport.progressiveDone,\n              contentDispositionFilename:\n                rangeTransport.contentDispositionFilename,\n              disableRange,\n              disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!data) {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            throw new Error(\"Not implemented: createPDFNetworkStream\");\n          }\n          const createPDFNetworkStream = params => {\n            if (\n              typeof PDFJSDev !== \"undefined\" &&\n              PDFJSDev.test(\"GENERIC\") &&\n              isNodeJS\n            ) {\n              return new PDFNodeStream(params);\n            }\n            return isValidFetchUrl(params.url)\n              ? new PDFFetchStream(params)\n              : new PDFNetworkStream(params);\n          };\n\n          networkStream = createPDFNetworkStream({\n            url,\n            length,\n            httpHeaders,\n            withCredentials,\n            rangeChunkSize,\n            disableRange,\n            disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            transportParams,\n            transportFactory\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    source,\n    source.data ? [source.data.buffer] : null\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\nfunction getUrlProp(val) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    return null; // The 'url' is unused with `PDFDataRangeTransport`.\n  }\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    // The full path is required in the 'url' field.\n    return new URL(val, window.location).href;\n  } catch {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      isNodeJS &&\n      typeof val === \"string\"\n    ) {\n      return val; // Use the url as-is in Node.js environments.\n    }\n  }\n  throw new Error(\n    \"Invalid PDF url data: \" +\n      \"either string or URL-object is expected in the url property.\"\n  );\n}\n\nfunction getDataProp(val) {\n  // Converting string or array-like data to Uint8Array.\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"GENERIC\") &&\n    isNodeJS &&\n    typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n    val instanceof Buffer // eslint-disable-line no-undef\n  ) {\n    throw new Error(\n      \"Please provide binary data as `Uint8Array`, rather than `Buffer`.\"\n    );\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    // Use the data as-is when it's already a Uint8Array that completely\n    // \"utilizes\" its underlying ArrayBuffer, to prevent any possible\n    // issues when transferring it to the worker-thread.\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return stringToBytes(val);\n  }\n  if ((typeof val === \"object\" && !isNaN(val?.length)) || isArrayBuffer(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\n    \"Invalid PDF binary data: either TypedArray, \" +\n      \"string, or array-like object is expected in the data property.\"\n  );\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = new PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n *\n * NOTE: The TypedArrays passed to the constructor and relevant methods below\n * will generally be transferred to the worker-thread. This will help reduce\n * main-thread memory usage, however it will take ownership of the TypedArrays.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array|null} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new PromiseCapability();\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  /**\n   * @param {number} begin\n   * @param {Uint8Array|null} chunk\n   */\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  /**\n   * @param {number} loaded\n   * @param {number|undefined} total\n   */\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  /**\n   * @param {Uint8Array|null} chunk\n   */\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  /**\n   * @param {number} begin\n   * @param {number} end\n   */\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"getJavaScript\", {\n        value: () => {\n          deprecated(\n            \"`PDFDocumentProxy.getJavaScript`, \" +\n              \"please use `PDFDocumentProxy.getJSActions` instead.\"\n          );\n          return this.getJSActions().then(js => {\n            if (!js) {\n              return js;\n            }\n            const jsArr = [];\n            for (const name in js) {\n              jsArr.push(...js[name]);\n            }\n            return jsArr;\n          });\n        },\n      });\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this._transport.getXFADatasets();\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this._transport.getXRefPrevValue();\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this._transport.getAnnotArray(pageIndex);\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree.\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the raw data of the PDF document.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n * @property {boolean} [disableNormalization] - When true the text is *not*\n *   normalized in the worker-thread. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {CanvasRenderingContext2D} canvasContext - A 2D context of a DOM\n *   Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {CanvasGradient | CanvasPattern | string} [background] - Background\n *   to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n\n  #pendingCleanup = false;\n\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    return this._transport.getAnnotations(\n      this._pageIndex,\n      intentArgs.renderingIntent\n    );\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null,\n  }) {\n    this._stats?.time(\"Overall\");\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render...\n    this.#pendingCleanup = false;\n    // ... and ensure that a delayed cleanup is always aborted.\n    this.#abortDelayedCleanup();\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup immediately once rendering has finished.\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(/* delayed = */ !intentPrint);\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.destroyed) {\n          complete();\n          return;\n        }\n        this._stats?.time(\"Rendering\");\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n  } = {}) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      throw new Error(\"Not implemented: getOperatorList\");\n    }\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        includeMarkedContent: includeMarkedContent === true,\n        disableNormalization: disableNormalization === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(/* delayed = */ false);\n\n    if (resetStats && success) {\n      this._stats &&= new StatTimer();\n    }\n    return success;\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @param {boolean} [delayed] - Delay the cleanup, to e.g. improve zooming\n   *   performance in documents with large images.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(/* delayed = */ false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    this._stats?.timeEnd(\"Page Request\");\n\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(/* delayed = */ true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n    const { map, transfers } = annotationStorageSerializable;\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage: map,\n      },\n      transfers\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this.#tryCleanup(/* delayed = */ true);\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < /* ms = */ 1000) {\n          // Above, we prevent the total delay from becoming arbitrarily large.\n          delay += reason.extraDelay;\n        }\n\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({ intentState, reason, force: true });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {StatTimer | null} Returns page stats, if enabled; returns `null`\n   *   otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  #listeners = new Set();\n\n  #deferred = Promise.resolve();\n\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(\n        obj,\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n          transfer\n          ? { transfer }\n          : null\n      ),\n    };\n\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n\n  terminate() {\n    this.#listeners.clear();\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Worker} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts;\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = new PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (\n      (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n      port\n    ) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _initializeFromPort\");\n    }\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n    // Send global setting, e.g. verbosity level.\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity,\n    });\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let { workerSrc } = PDFWorker;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        const worker =\n          typeof PDFJSDev === \"undefined\" &&\n          !workerSrc.endsWith(\"/build/pdf.worker.js\")\n            ? new Worker(workerSrc, { type: \"module\" })\n            : new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: fromPort\");\n    }\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\n          \"PDFWorker.fromPort - the worker is being destroyed.\\n\" +\n            \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\"\n        );\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      PDFWorkerUtil.fallbackWorkerSrc !== null\n    ) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\") {\n        const worker = await import(\"pdfjs/pdf.worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #methodPromises = new Map();\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #passwordCapability = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new PromiseCapability();\n\n    this.setupMessageHandler();\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXFADatasets\", null);\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXRefPrevValue\", null);\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this.messageHandler.sendWithPromise(\"GetAnnotArray\", {\n            pageIndex,\n          });\n        },\n      });\n    }\n  }\n\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationStorageSerializable = SerializableEmpty;\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        const annotationStorage =\n          renderingIntent & RenderingIntentFlag.PRINT &&\n          printAnnotationStorage instanceof PrintAnnotationStorage\n            ? printAnnotationStorage\n            : this.annotationStorage;\n\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = new PromiseCapability();\n\n    this.#passwordCapability?.reject(\n      new Error(\"Worker was destroyed during onPassword callback\")\n    );\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n\n      this._networkStream?.cancelAllRequests(\n        new AbortException(\"Worker was terminated.\")\n      );\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new PromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this.#passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          const inspectFont =\n            params.pdfBug && globalThis.FontInspector?.enabled\n              ? (font, url) => globalThis.FontInspector.fontAdded(font, url)\n              : null;\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { width, height } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      warn(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    const { map, transfers } = this.annotationStorage.serializable;\n\n    return this.messageHandler\n      .sendWithPromise(\n        \"SaveDocument\",\n        {\n          isPureXfa: !!this._htmlForXfa,\n          numPages: this._numPages,\n          annotationStorage: map,\n          filename: this._fullReader?.filename ?? null,\n        },\n        transfers\n      )\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(name, null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(/* keepHCM = */ true);\n  }\n\n  get loadingParams() {\n    const { disableAutoFetch, enableXfa } = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    return (this.#objs[objId] ||= {\n      capability: new PromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    for (const objId in this.#objs) {\n      const { data } = this.#objs[objId];\n      data?.bitmap?.close(); // Release any `ImageBitmap` data.\n    }\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  #internalRenderTask = null;\n\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   *\n   * @param {number} [extraDelay]\n   */\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(/* error = */ null, extraDelay);\n  }\n\n  /**\n   * Whether form fields are rendered separately from the main operatorList.\n   * @type {boolean}\n   */\n  get separateAnnots() {\n    const { separateAnnots } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const { annotationCanvasMap } = this.#internalRenderTask;\n    return (\n      separateAnnots.form ||\n      (separateAnnots.canvas && annotationCanvasMap?.size > 0)\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new PromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, background } = this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      this.filterFactory,\n      { optionalContentConfig },\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          extraDelay\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultFilterFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  SVGGraphics,\n  version,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable } from \"../shared/util.js\";\nimport { AnnotationEditor } from \"./editor/editor.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined,\n});\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  #modified = false;\n\n  #storage = new Map();\n\n  constructor() {\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n\n  /**\n   * Remove a value from the storage.\n   * @param {string} key\n   */\n  remove(key) {\n    this.#storage.delete(key);\n\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n\n  /**\n   * Set the value for a given key\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n\n    if (\n      value instanceof AnnotationEditor &&\n      typeof this.onAnnotationEditor === \"function\"\n    ) {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n\n  /**\n   * Check if the storage contains the given key.\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this.#storage.has(key);\n  }\n\n  /**\n   * @returns {Object | null}\n   */\n  getAll() {\n    return this.#storage.size > 0 ? objectFromMap(this.#storage) : null;\n  }\n\n  /**\n   * @param {Object} obj\n   */\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n\n  get size() {\n    return this.#storage.size;\n  }\n\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n\n    for (const [key, val] of this.#storage) {\n      const serialized =\n        val instanceof AnnotationEditor\n          ? val.serialize(/* isForCopying = */ false, context)\n          : val;\n      if (serialized) {\n        map.set(key, serialized);\n\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n\n    if (hasBitmap) {\n      // We must transfer the bitmap data separately, since it can be changed\n      // during serialization with SVG images.\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n\n    return map.size > 0\n      ? { map, hash: hash.hexdigest(), transfers }\n      : SerializableEmpty;\n  }\n}\n\n/**\n * A special `AnnotationStorage` for use during printing, where the serializable\n * data is *frozen* upon initialization, to prevent scripting from modifying its\n * contents. (Necessary since printing is triggered synchronously in browsers.)\n */\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n\n  constructor(parent) {\n    super();\n    const { map, hash, transfers } = parent.serializable;\n    // Create a *copy* of the data, since Objects are passed by reference in JS.\n    const clone = structuredClone(\n      map,\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n        transfers\n        ? { transfer: transfers }\n        : null\n    );\n    this.#serializable = { map: clone, hash, transfers };\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  // eslint-disable-next-line getter-return\n  get print() {\n    unreachable(\"Should not call PrintAnnotationStorage.print\");\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this.#serializable;\n  }\n}\n\nexport { AnnotationStorage, PrintAnnotationStorage, SerializableEmpty };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n\nimport { bindEvents, ColorManager } from \"./tools.js\";\nimport { FeatureTest, shadow, unreachable } from \"../../shared/util.js\";\nimport { noContextMenu } from \"../display_utils.js\";\n\n/**\n * @typedef {Object} AnnotationEditorParameters\n * @property {AnnotationEditorUIManager} uiManager - the global manager\n * @property {AnnotationEditorLayer} parent - the layer containing this editor\n * @property {string} id - editor id\n * @property {number} x - x-coordinate\n * @property {number} y - y-coordinate\n */\n\n/**\n * Base class for editors.\n */\nclass AnnotationEditor {\n  #altText = \"\";\n\n  #altTextDecorative = false;\n\n  #altTextButton = null;\n\n  #altTextTooltip = null;\n\n  #altTextTooltipTimeout = null;\n\n  #keepAspectRatio = false;\n\n  #resizersDiv = null;\n\n  #boundFocusin = this.focusin.bind(this);\n\n  #boundFocusout = this.focusout.bind(this);\n\n  #hasBeenClicked = false;\n\n  #isEditing = false;\n\n  #isInEditMode = false;\n\n  _initialOptions = Object.create(null);\n\n  _uiManager = null;\n\n  _focusEventsAllowed = true;\n\n  _l10nPromise = null;\n\n  #isDraggable = false;\n\n  #zIndex = AnnotationEditor._zIndex++;\n\n  static _borderLineWidth = -1;\n\n  static _colorManager = new ColorManager();\n\n  static _zIndex = 1;\n\n  // When one of the dimensions of an editor is smaller than this value, the\n  // button to edit the alt text is visually moved outside of the editor.\n  static SMALL_EDITOR_SIZE = 0;\n\n  /**\n   * @param {AnnotationEditorParameters} parameters\n   */\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      unreachable(\"Cannot initialize AnnotationEditor.\");\n    }\n\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n\n    const {\n      rotation,\n      rawDims: { pageWidth, pageHeight, pageX, pageY },\n    } = this.parent.viewport;\n\n    this.rotation = rotation;\n    this.pageRotation =\n      (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n\n  static get _defaultLineColor() {\n    return shadow(\n      this,\n      \"_defaultLineColor\",\n      this._colorManager.getHexCode(\"CanvasText\")\n    );\n  }\n\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager,\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n\n  /**\n   * Initialize the l10n stuff for this type of editor.\n   * @param {Object} l10n\n   */\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map(\n      [\n        \"editor_alt_text_button_label\",\n        \"editor_alt_text_edit_button_label\",\n        \"editor_alt_text_decorative_tooltip\",\n      ].map(str => [str, l10n.get(str)])\n    );\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth =\n      parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n\n  /**\n   * Update the default parameters for this type of editor.\n   * @param {number} _type\n   * @param {*} _value\n   */\n  static updateDefaultParams(_type, _value) {}\n\n  /**\n   * Get the default properties to set in the UI for this type of editor.\n   * @returns {Array}\n   */\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n\n  /**\n   * Check if this kind of editor is able to handle the given mime type for\n   * pasting.\n   * @param {string} mime\n   * @returns {boolean}\n   */\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n\n  /**\n   * Extract the data from the clipboard item and delegate the creation of the\n   * editor to the parent.\n   * @param {DataTransferItem} item\n   * @param {AnnotationEditorLayer} parent\n   */\n  static paste(item, parent) {\n    unreachable(\"Not implemented\");\n  }\n\n  /**\n   * Get the properties to update in the UI for this editor.\n   * @returns {Array}\n   */\n  get propertiesToUpdate() {\n    return [];\n  }\n\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= (this.height * pageHeight) / (pageWidth * 2);\n        this.y += (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += (this.height * pageHeight) / (pageWidth * 2);\n        this.y -= (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n\n  /**\n   * This editor will be behind the others.\n   */\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n\n  /**\n   * This editor will be in the foreground.\n   */\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n\n  /**\n   * onfocus callback.\n   */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n\n  /**\n   * onblur callback.\n   * @param {FocusEvent} event\n   */\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n\n    // In case of focusout, the relatedTarget is the element which\n    // is grabbing the focus.\n    // So if the related target is an element under the div for this\n    // editor, then the editor isn't unactive.\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n\n  /**\n   * Commit the data contained in this editor.\n   */\n  commit() {\n    this.addToAnnotationStorage();\n  }\n\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n\n  /**\n   * Set the editor position within its parent.\n   * @param {number} x\n   * @param {number} y\n   * @param {number} tx - x-translation in screen coordinates.\n   * @param {number} ty - y-translation in screen coordinates.\n   */\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n\n    this.fixAndSetPosition();\n  }\n\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n\n    this.x += x / width;\n    this.y += y / height;\n\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Translate the editor position within its parent.\n   * @param {number} x - x-translation in screen coordinates.\n   * @param {number} y - y-translation in screen coordinates.\n   */\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n\n  /**\n   * Translate the editor position within its page and adjust the scroll\n   * in order to have the editor in the view.\n   * @param {number} x - x-translation in page coordinates.\n   * @param {number} y - y-translation in page coordinates.\n   */\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      // It's possible to not have a parent: for example, when the user is\n      // dragging all the selected editors but this one on a page which has been\n      // destroyed.\n      // It's why we need to check for it. In such a situation, it isn't really\n      // a problem to not find a new parent: it's something which is related to\n      // what the user is seeing, hence it depends on how pages are layed out.\n\n      // The element will be outside of its parent so change the parent.\n      const { x, y } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n\n    // The editor can be moved wherever the user wants, so we don't need to fix\n    // the position: it'll be done when the user will release the mouse button.\n\n    let { x, y } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const { _borderLineWidth } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let { x, y, width, height } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    const { style } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n\n    this.moveInDOM();\n  }\n\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n\n  /**\n   * Convert a screen translation into a page one.\n   * @param {number} x\n   * @param {number} y\n   */\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n\n  /**\n   * Convert a page translation into a screen one.\n   * @param {number} x\n   * @param {number} y\n   */\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n      }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n      }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight],\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return FeatureTest.isCSSRoundSupported\n      ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n      : [scaledWidth, scaledHeight];\n  }\n\n  /**\n   * Set the dimensions of this editor.\n   * @param {number} width\n   * @param {number} height\n   */\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\n      \"small\",\n      width < AnnotationEditor.SMALL_EDITOR_SIZE ||\n        height < AnnotationEditor.SMALL_EDITOR_SIZE\n    );\n  }\n\n  fixDims() {\n    const { style } = this.div;\n    const { height, width } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n        2\n      )}%`;\n    }\n  }\n\n  /**\n   * Get the translation used to position this editor when it's created.\n   * @returns {Array<number>}\n   */\n  getInitialTranslation() {\n    return [0, 0];\n  }\n\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\n        \"pointerdown\",\n        this.#resizerPointerdown.bind(this, name)\n      );\n      div.addEventListener(\"contextmenu\", noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      return;\n    }\n\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = { passive: true, capture: true };\n    window.addEventListener(\n      \"pointermove\",\n      boundResizerPointermove,\n      pointerMoveOptions\n    );\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor =\n      window.getComputedStyle(event.target).cursor;\n\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\n        \"pointermove\",\n        boundResizerPointermove,\n        pointerMoveOptions\n      );\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (\n        newX === savedX &&\n        newY === savedY &&\n        newWidth === savedWidth &&\n        newHeight === savedHeight\n      ) {\n        return;\n      }\n\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true,\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user switches to another window (with alt+tab), then we end the\n    // resize session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n\n    // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n    // Without rounding, the positions of the corners other than the top left\n    // one can be slightly wrong.\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [\n      rotationMatrix[0] * x + rotationMatrix[2] * y,\n      rotationMatrix[1] * x + rotationMatrix[3] * y,\n    ];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [\n      invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n      invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n    ];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n\n    let [deltaX, deltaY] = this.screenToPageTranslation(\n      event.movementX,\n      event.movementY\n    );\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(\n        Math.min(\n          Math.hypot(\n            oppositePoint[0] - point[0] - deltaX,\n            oppositePoint[1] - point[1] - deltaY\n          ) / oldDiag,\n          // Avoid the editor to be larger than the page.\n          1 / savedWidth,\n          1 / savedHeight\n        ),\n        // Avoid the editor to be smaller than the minimum size.\n        minWidth / savedWidth,\n        minHeight / savedHeight\n      );\n    } else if (isHorizontal) {\n      ratioX =\n        Math.max(\n          minWidth,\n          Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n        ) / savedWidth;\n    } else {\n      ratioY =\n        Math.max(\n          minHeight,\n          Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n        ) / savedHeight;\n    }\n\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = (this.#altTextButton = document.createElement(\"button\"));\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\n      \"editor_alt_text_button_label\"\n    );\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\n      \"click\",\n      event => {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      },\n      { capture: true }\n    );\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      // We take the width of the alt text button and we add 40% to it to be\n      // sure to have enough space for it.\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(\n        128,\n        Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100))\n      );\n    }\n  }\n\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise\n      .get(\"editor_alt_text_edit_button_label\")\n      .then(msg => {\n        button.setAttribute(\"aria-label\", msg);\n      });\n\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = (tooltip.id = `alt-text-tooltip-${this.id}`);\n      button.setAttribute(\"aria-describedby\", id);\n\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\",\n              },\n            },\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative\n      ? await AnnotationEditor._l10nPromise.get(\n          \"editor_alt_text_decorative_tooltip\"\n        )\n      : this.#altText;\n\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative,\n    };\n  }\n\n  set altTextData({ altText, decorative }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n\n  /**\n   * Render this editor in a div.\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n\n    this.setInForeground();\n\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(\n        2\n      )}%`;\n      this.div.style.maxHeight = `${(\n        (100 * parentWidth) /\n        parentHeight\n      ).toFixed(2)}%`;\n    }\n\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n\n    bindEvents(this, this.div, [\"pointerdown\"]);\n\n    return this.div;\n  }\n\n  /**\n   * Onpointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Avoid to focus this editor because of a non-left click.\n      event.preventDefault();\n      return;\n    }\n\n    this.#hasBeenClicked = true;\n\n    this.#setUpDragSession(event);\n  }\n\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = { passive: true, capture: true };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\n        \"pointermove\",\n        pointerMoveCallback,\n        pointerMoveOptions\n      );\n    }\n\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\n          \"pointermove\",\n          pointerMoveCallback,\n          pointerMoveOptions\n        );\n      }\n\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const { isMac } = FeatureTest.platform;\n        if (\n          (event.ctrlKey && !isMac) ||\n          event.shiftKey ||\n          (event.metaKey && isMac)\n        ) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user is using alt+tab during the dragging session, the pointerup\n    // event could be not fired, but a blur event is fired so we can use it in\n    // order to interrupt the dragging session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Convert the current rect into a page one.\n   */\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        return [\n          x + shiftX + pageX,\n          pageHeight - y - shiftY - height + pageY,\n          x + shiftX + width + pageX,\n          pageHeight - y - shiftY + pageY,\n        ];\n      case 90:\n        return [\n          x + shiftY + pageX,\n          pageHeight - y + shiftX + pageY,\n          x + shiftY + height + pageX,\n          pageHeight - y + shiftX + width + pageY,\n        ];\n      case 180:\n        return [\n          x - shiftX - width + pageX,\n          pageHeight - y + shiftY + pageY,\n          x - shiftX + pageX,\n          pageHeight - y + shiftY + height + pageY,\n        ];\n      case 270:\n        return [\n          x - shiftY - height + pageX,\n          pageHeight - y - shiftX - width + pageY,\n          x - shiftY + pageX,\n          pageHeight - y - shiftX + pageY,\n        ];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  /**\n   * Executed once this editor has been rendered.\n   */\n  onceAdded() {}\n\n  /**\n   * Check if the editor contains something.\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return false;\n  }\n\n  /**\n   * Enable edit mode.\n   */\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n\n  /**\n   * Disable edit mode.\n   */\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n\n  /**\n   * Check if the editor is edited.\n   * @returns {boolean}\n   */\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n\n  /**\n   * If it returns true, then this editor handle the keyboard\n   * events itself.\n   * @returns {boolean}\n   */\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n\n  /**\n   * Check if this editor needs to be rebuilt or not.\n   * @returns {boolean}\n   */\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n\n  /**\n   * Rebuild the editor in case it has been removed on undo.\n   *\n   * To implement in subclasses.\n   */\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n\n  /**\n   * Serialize the editor.\n   * The result of the serialization will be used to construct a\n   * new annotation to add to the pdf document.\n   *\n   * To implement in subclasses.\n   * @param {boolean} isForCopying\n   * @param {Object} [context]\n   */\n  serialize(isForCopying = false, context = null) {\n    unreachable(\"An editor must be serializable\");\n  }\n\n  /**\n   * Deserialize the editor.\n   * The result of the deserialization is a new editor.\n   *\n   * @param {Object} data\n   * @param {AnnotationEditorLayer} parent\n   * @param {AnnotationEditorUIManager} uiManager\n   * @returns {AnnotationEditor}\n   */\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager,\n    });\n    editor.rotation = data.rotation;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(\n      data.rect,\n      pageHeight\n    );\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n\n    return editor;\n  }\n\n  /**\n   * Remove this editor.\n   * It's used on ctrl+backspace action.\n   */\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n\n    if (!this.isEmpty()) {\n      // The editor is removed but it can be back at some point thanks to\n      // undo/redo so we must commit it before.\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n\n    // The editor is removed so we can remove the alt text button and if it's\n    // restored then it's up to the subclass to add it back.\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n\n  /**\n   * @returns {boolean} true if this editor can be resized.\n   */\n  get isResizable() {\n    return false;\n  }\n\n  /**\n   * Add the resizers to this editor.\n   */\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Select this editor.\n   */\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n\n  /**\n   * Unselect this editor.\n   */\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      // Don't use this.div.blur() because we don't know where the focus will\n      // go.\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n\n  /**\n   * Update some parameters which have been changed through the UI.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {}\n\n  /**\n   * When the user disables the editing mode some editors can change some of\n   * their properties.\n   */\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n\n  /**\n   * When the user enables the editing mode some editors can change some of\n   * their properties.\n   */\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n\n  /**\n   * The editor is about to be edited.\n   */\n  enterInEditMode() {}\n\n  /**\n   * Get the div which really contains the displayed content.\n   */\n  get contentDiv() {\n    return this.div;\n  }\n\n  /**\n   * If true then the editor is currently edited.\n   * @type {boolean}\n   */\n  get isEditing() {\n    return this.#isEditing;\n  }\n\n  /**\n   * When set to true, it means that this editor is currently edited.\n   * @param {boolean} value\n   */\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n\n  /**\n   * Set the aspect ratio to use when resizing.\n   * @param {number} width\n   * @param {number} height\n   */\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const { style } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\n\n// This class is used to fake an editor which has been deleted.\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex,\n    };\n  }\n}\n\nexport { AnnotationEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./editor.js\").AnnotationEditor} AnnotationEditor */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  FeatureTest,\n  getUuid,\n  shadow,\n  Util,\n  warn,\n} from \"../../shared/util.js\";\nimport { getColorValues, getRGB, PixelsPerInch } from \"../display_utils.js\";\n\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\n\n/**\n * Convert a number between 0 and 100 into an hex number between 0 and 255.\n * @param {number} opacity\n * @return {string}\n */\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity)))\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n/**\n * Class to create some unique ids for the different editors.\n */\nclass IdManager {\n  #id = 0;\n\n  /**\n   * Get a unique id.\n   * @returns {string}\n   */\n  getId() {\n    return `${AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\n\n/**\n * Class to manage the images used by the editors.\n * The main idea is to try to minimize the memory used by the images.\n * The images are cached and reused when possible\n * We use a refCounter to know when an image is not used anymore but we need to\n * be able to restore an image after a remove+undo, so we keep a file reference\n * or an url one.\n */\nclass ImageManager {\n  #baseId = getUuid();\n\n  #id = 0;\n\n  #cache = null;\n\n  static get _isSVGFittingCanvas() {\n    // By default, Firefox doesn't rescale without preserving the aspect ratio\n    // when drawing an SVG image on a canvas, see https://bugzilla.mozilla.org/1547776.\n    // The \"workaround\" is to append \"svgView(preserveAspectRatio(none))\" to the\n    // url, but according to comment #15, it seems that it leads to unexpected\n    // behavior in Safari.\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n\n    return shadow(this, \"_isSVGFittingCanvas\", promise);\n  }\n\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      // We already tried to load the image but it failed.\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false,\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n\n      if (image.type === \"image/svg+xml\") {\n        // Unfortunately, createImageBitmap doesn't work with SVG images.\n        // (see https://bugzilla.mozilla.org/1841972).\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = (data.svgUrl = fileReader.result);\n            // We need to set the preserveAspectRatio to none in order to let\n            // the image fits the canvas when resizing.\n            imageElement.src = (await mustRemoveAspectRatioPromise)\n              ? `${url}#svgView(preserveAspectRatio(none))`\n              : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n\n  async getFromFile(file) {\n    const { lastModified, name, size, type } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n\n  // We can use the id only if it belongs this manager.\n  // We must take care of having the right manager because we can copy/paste\n  // some images from other documents, hence it'd be a pity to use an id from an\n  // other manager.\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\n\n/**\n * Class to handle undo/redo.\n * Commands are just saved in a buffer.\n * If we hit some memory issues we could likely use a circular buffer.\n * It has to be used as a singleton.\n */\nclass CommandManager {\n  #commands = [];\n\n  #locked = false;\n\n  #maxSize;\n\n  #position = -1;\n\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n\n  /**\n   * @typedef {Object} addOptions\n   * @property {function} cmd\n   * @property {function} undo\n   * @property {boolean} mustExec\n   * @property {number} type\n   * @property {boolean} overwriteIfSameType\n   * @property {boolean} keepUndo\n   */\n\n  /**\n   * Add a new couple of commands to be used in case of redo/undo.\n   * @param {addOptions} options\n   */\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false,\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n\n    if (this.#locked) {\n      return;\n    }\n\n    const save = { cmd, undo, type };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        // All the commands have been undone and then a new one is added\n        // hence we clear the queue.\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      // For example when we change a color we don't want to\n      // be able to undo all the steps, hence we only want to\n      // keep the last undoable action in this sequence of actions.\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n\n    this.#commands.push(save);\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    if (this.#position === -1) {\n      // Nothing to undo.\n      return;\n    }\n\n    // Avoid to insert something during the undo execution.\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n\n    this.#position -= 1;\n  }\n\n  /**\n   * Redo the last command.\n   */\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n\n      // Avoid to insert something during the redo execution.\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n\n  /**\n   * Check if there is something to undo.\n   * @returns {boolean}\n   */\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n\n  /**\n   * Check if there is something to redo.\n   * @returns {boolean}\n   */\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n\n  destroy() {\n    this.#commands = null;\n  }\n}\n\n/**\n * Class to handle the different keyboards shortcuts we can have on mac or\n * non-mac OSes.\n */\nclass KeyboardManager {\n  /**\n   * Create a new keyboard manager class.\n   * @param {Array<Array>} callbacks - an array containing an array of shortcuts\n   * and a callback to call.\n   * A shortcut is a string like `ctrl+c` or `mac+ctrl+c` for mac OS.\n   */\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n\n    const { isMac } = FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n\n  /**\n   * Serialize an event into a string in order to match a\n   * potential key for a callback.\n   * @param {KeyboardEvent} event\n   * @returns {string}\n   */\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n\n    return str;\n  }\n\n  /**\n   * Execute a callback, if any, for a given keyboard event.\n   * The self is used as `this` in the callback.\n   * @param {Object} self\n   * @param {KeyboardEvent} event\n   * @returns\n   */\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: { bubbles = false, args = [], checker = null },\n    } = info;\n\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n\n    // For example, ctrl+s in a FreeText must be handled by the viewer, hence\n    // the event must bubble.\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\n\nclass ColorManager {\n  static _colorsMapping = new Map([\n    [\"CanvasText\", [0, 0, 0]],\n    [\"Canvas\", [255, 255, 255]],\n  ]);\n\n  get _colors() {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"LIB\") &&\n      typeof document === \"undefined\"\n    ) {\n      return shadow(this, \"_colors\", ColorManager._colorsMapping);\n    }\n\n    const colors = new Map([\n      [\"CanvasText\", null],\n      [\"Canvas\", null],\n    ]);\n    getColorValues(colors);\n    return shadow(this, \"_colors\", colors);\n  }\n\n  /**\n   * In High Contrast Mode, the color on the screen is not always the\n   * real color used in the pdf.\n   * For example in some cases white can appear to be black but when saving\n   * we want to have white.\n   * @param {string} color\n   * @returns {Array<number>}\n   */\n  convert(color) {\n    const rgb = getRGB(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n\n  /**\n   * An input element must have its color value as a hex string\n   * and not as color name.\n   * So this function converts a name into an hex string.\n   * @param {string} name\n   * @returns {string}\n   */\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return Util.makeHexColor(...rgb);\n  }\n}\n\n/**\n * A pdf has several pages and each of them when it will rendered\n * will have an AnnotationEditorLayer which will contain the some\n * new Annotations associated to an editor in order to modify them.\n *\n * This class is used to manage all the different layers, editors and\n * some action like copy/paste, undo/redo, ...\n */\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n\n  #allEditors = new Map();\n\n  #allLayers = new Map();\n\n  #altTextManager = null;\n\n  #annotationStorage = null;\n\n  #commandManager = new CommandManager();\n\n  #currentPageIndex = 0;\n\n  #deletedAnnotationsElementIds = new Set();\n\n  #draggingEditors = null;\n\n  #editorTypes = null;\n\n  #editorsToRescale = new Set();\n\n  #filterFactory = null;\n\n  #idManager = new IdManager();\n\n  #isEnabled = false;\n\n  #isWaiting = false;\n\n  #lastActiveElement = null;\n\n  #mode = AnnotationEditorType.NONE;\n\n  #selectedEditors = new Set();\n\n  #pageColors = null;\n\n  #boundBlur = this.blur.bind(this);\n\n  #boundFocus = this.focus.bind(this);\n\n  #boundCopy = this.copy.bind(this);\n\n  #boundCut = this.cut.bind(this);\n\n  #boundPaste = this.paste.bind(this);\n\n  #boundKeydown = this.keydown.bind(this);\n\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false,\n  };\n\n  #translation = [0, 0];\n\n  #translationTimeoutId = null;\n\n  #container = null;\n\n  #viewer = null;\n\n  static TRANSLATE_SMALL = 1; // page units.\n\n  static TRANSLATE_BIG = 10; // page units.\n\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n\n    const arrowChecker = self => {\n      // If the focused element is an input, we don't want to handle the arrow.\n      // For example, sliders can be controlled with the arrow keys.\n      const { activeElement } = document;\n      return (\n        activeElement &&\n        self.#container.contains(activeElement) &&\n        self.hasSomethingToControl()\n      );\n    };\n\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll],\n        [[\"ctrl+z\", \"mac+meta+z\"], proto.undo],\n        [\n          // On mac, depending of the OS version, the event.key is either \"z\" or\n          // \"Z\" when the user presses \"meta+shift+z\".\n          [\n            \"ctrl+y\",\n            \"ctrl+shift+z\",\n            \"mac+meta+shift+z\",\n            \"ctrl+shift+Z\",\n            \"mac+meta+shift+Z\",\n          ],\n          proto.redo,\n        ],\n        [\n          [\n            \"Backspace\",\n            \"alt+Backspace\",\n            \"ctrl+Backspace\",\n            \"shift+Backspace\",\n            \"mac+Backspace\",\n            \"mac+alt+Backspace\",\n            \"mac+ctrl+Backspace\",\n            \"Delete\",\n            \"ctrl+Delete\",\n            \"shift+Delete\",\n            \"mac+Delete\",\n          ],\n          proto.delete,\n        ],\n        [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  constructor(\n    container,\n    viewer,\n    altTextManager,\n    eventBus,\n    pdfDocument,\n    pageColors\n  ) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0,\n    };\n  }\n\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n\n  get hcmFilter() {\n    return shadow(\n      this,\n      \"hcmFilter\",\n      this.#pageColors\n        ? this.#filterFactory.addHCMFilter(\n            this.#pageColors.foreground,\n            this.#pageColors.background\n          )\n        : \"none\"\n    );\n  }\n\n  get direction() {\n    return shadow(\n      this,\n      \"direction\",\n      getComputedStyle(this.#container).direction\n    );\n  }\n\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n\n  onPageChanging({ pageNumber }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n\n  focusMainContainer() {\n    this.#container.focus();\n  }\n\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height,\n      } = layer.div.getBoundingClientRect();\n      if (\n        x >= layerX &&\n        x <= layerX + width &&\n        y >= layerY &&\n        y <= layerY + height\n      ) {\n        return layer;\n      }\n    }\n    return null;\n  }\n\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n\n  onScaleChanging({ scale }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n\n  onRotationChanging({ pagesRotation }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n\n  /**\n   * Add an editor in the annotation storage.\n   * @param {AnnotationEditor} editor\n   */\n  addToAnnotationStorage(editor) {\n    if (\n      !editor.isEmpty() &&\n      this.#annotationStorage &&\n      !this.#annotationStorage.has(editor.id)\n    ) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    // When several editors are selected and the window loses focus, we want to\n    // keep the last active element in order to be able to focus it again when\n    // the window gets the focus back but we don't want to trigger any focus\n    // callbacks else only one editor will be selected.\n    const { activeElement } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\n      \"focusin\",\n      () => {\n        lastEditor._focusEventsAllowed = true;\n      },\n      { once: true }\n    );\n    lastActiveElement.focus();\n  }\n\n  #addKeyboardManager() {\n    // The keyboard events are caught at the container level in order to be able\n    // to execute some callbacks even if the current page doesn't have focus.\n    window.addEventListener(\"keydown\", this.#boundKeydown, { capture: true });\n  }\n\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true,\n    });\n  }\n\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n\n  /**\n   * Copy callback.\n   * @param {ClipboardEvent} event\n   */\n  copy(event) {\n    event.preventDefault();\n\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(/* isForCopying = */ true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n\n  /**\n   * Cut callback.\n   * @param {ClipboardEvent} event\n   */\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n\n  /**\n   * Paste callback.\n   * @param {ClipboardEvent} event\n   */\n  paste(event) {\n    event.preventDefault();\n    const { clipboardData } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n      return;\n    }\n\n    if (!Array.isArray(data)) {\n      return;\n    }\n\n    this.unselectAll();\n    const layer = this.currentLayer;\n\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({ cmd, undo, mustExec: true });\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n    }\n  }\n\n  /**\n   * Keydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n\n  /**\n   * Execute an action for a given name.\n   * For example, the user can click on the \"Undo\" entry in the context menu\n   * and it'll trigger the undo action.\n   * @param {Object} details\n   */\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n\n  /**\n   * Update the different possible states of this manager, e.g. is there\n   * something to undo, redo, ...\n   * @param {Object} details\n   */\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(\n      ([key, value]) => this.#previousStates[key] !== value\n    );\n\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details),\n      });\n    }\n  }\n\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details,\n    });\n  }\n\n  /**\n   * Set the editing state.\n   * It can be useful to temporarily disable it when the user is editing a\n   * FreeText annotation.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false,\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false,\n      });\n      this.disableUserSelect(false);\n    }\n  }\n\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n\n  /**\n   * Get an id.\n   * @returns {string}\n   */\n  getId() {\n    return this.#idManager.getId();\n  }\n\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n\n  /**\n   * Add a new layer for a page which will contains the editors.\n   * @param {AnnotationEditorLayer} layer\n   */\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n\n  /**\n   * Remove a layer.\n   * @param {AnnotationEditorLayer} layer\n   */\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n\n  /**\n   * Change the editor mode (None, FreeText, Ink, ...)\n   * @param {number} mode\n   * @param {string|null} editId\n   */\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   * @returns {undefined}\n   */\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode,\n    });\n  }\n\n  /**\n   * Update a parameter in the current editor or globally.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n\n  /**\n   * Enable all the layers.\n   */\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n\n  /**\n   * Disable all the layers.\n   */\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n\n  /**\n   * Get all the editors belonging to a given page.\n   * @param {number} pageIndex\n   * @returns {Array<AnnotationEditor>}\n   */\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n\n  /**\n   * Get an editor with the given id.\n   * @param {string} id\n   * @returns {AnnotationEditor}\n   */\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n\n  /**\n   * Add a new editor.\n   * @param {AnnotationEditor} editor\n   */\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (\n      !editor.annotationElementId ||\n      !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)\n    ) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n\n  /**\n   * The annotation element with the given id has been deleted.\n   * @param {AnnotationEditor} editor\n   */\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n\n  /**\n   * Check if the annotation element with the given id has been deleted.\n   * @param {string} annotationElementId\n   * @returns {boolean}\n   */\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n\n  /**\n   * The annotation element with the given id have been restored.\n   * @param {AnnotationEditor} editor\n   */\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n\n  /**\n   * Add an editor to the layer it belongs to or add it to the global map.\n   * @param {AnnotationEditor} editor\n   */\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n\n  /**\n   * Set the given editor as the active one.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection,\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection,\n    });\n  }\n\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Redo the last undoed command.\n   */\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Add a command to execute (cmd) and another one to undo it.\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delete the current editor or all.\n   */\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  commitOrRemove() {\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n  }\n\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n\n  /**\n   * Select the editors.\n   * @param {Array<AnnotationEditor>} editors\n   */\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({ hasSelectedEditor: true });\n  }\n\n  /**\n   * Select all the editors.\n   */\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n\n  /**\n   * Unselect all the selected editors.\n   */\n  unselectAll() {\n    if (this.#activeEditor) {\n      // An editor is being edited so just commit it.\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false,\n    });\n  }\n\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n\n    // We don't want to have an undo/redo for each translation so we wait a bit\n    // before adding the command to the command manager.\n    const TIME_TO_WAIT = 1000;\n\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false,\n      });\n    }, TIME_TO_WAIT);\n\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n\n  /**\n   * Set up the drag session for moving the selected editors.\n   */\n  setUpDragSession() {\n    // Note: don't use any references to the editor's parent which can be null\n    // if the editor belongs to a destroyed page.\n    if (!this.hasSelection) {\n      return;\n    }\n    // Avoid to have spurious text selection in the text layer when dragging.\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1,\n      });\n    }\n  }\n\n  /**\n   * Ends the drag session.\n   * @returns {boolean} true if at least one editor has been moved.\n   */\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n\n    for (const [{ x, y, pageIndex }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||=\n        x !== value.savedX ||\n        y !== value.savedY ||\n        pageIndex !== value.savedPageIndex;\n    }\n\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        // The editor can be undone/redone on a page which is not visible (and\n        // which potentially has no annotation editor layer), hence we need to\n        // use the pageIndex instead of the parent.\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, { newX, newY, newPageIndex }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true,\n    });\n\n    return true;\n  }\n\n  /**\n   * Drag the set of selected editors.\n   * @param {number} tx\n   * @param {number} ty\n   */\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n\n  /**\n   * Rebuild the editor (usually on undo/redo actions) on a potentially\n   * non-rendered page.\n   * @param {AnnotationEditor} editor\n   */\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n\n  /**\n   * Is the current editor the one passed as argument?\n   * @param {AnnotationEditor} editor\n   * @returns\n   */\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n\n  /**\n   * Get the current active editor.\n   * @returns {AnnotationEditor|null}\n   */\n  getActive() {\n    return this.#activeEditor;\n  }\n\n  /**\n   * Get the current editor mode.\n   * @returns {number}\n   */\n  getMode() {\n    return this.#mode;\n  }\n\n  get imageManager() {\n    return shadow(this, \"imageManager\", new ImageManager());\n  }\n}\n\nexport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  ColorManager,\n  CommandManager,\n  KeyboardManager,\n  opacityToHex,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport {\n  BaseException,\n  FeatureTest,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\n/**\n * FilterFactory aims to create some SVG filters we can use when drawing an\n * image (or whatever) on a canvas.\n * Filters aren't applied with ctx.putImageData because it just overwrites the\n * underlying pixels.\n * With these filters, it's possible for example to apply some transfer maps on\n * an image without the need to apply them on the pixel arrays: the renderer\n * does the magic for us.\n */\nclass DOMFilterFactory extends BaseFilterFactory {\n  #_cache;\n\n  #_defs;\n\n  #docId;\n\n  #document;\n\n  #hcmFilter;\n\n  #hcmKey;\n\n  #hcmUrl;\n\n  #hcmHighlightFilter;\n\n  #hcmHighlightKey;\n\n  #hcmHighlightUrl;\n\n  #id = 0;\n\n  constructor({ docId, ownerDocument = globalThis.document } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n\n  get #cache() {\n    return (this.#_cache ||= new Map());\n  }\n\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const { style } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n\n    // When a page is zoomed the page is re-drawn but the maps are likely\n    // the same.\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n\n    // We create a SVG filter: feComponentTransferElement\n    //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n\n    return url;\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n\n    if (\n      (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n      fgColor === bgColor\n    ) {\n      return this.#hcmUrl;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n    //\n    // Relative luminance:\n    // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    //\n    // We compute the rounded luminance of the default background color.\n    // Then for every color in the pdf, if its rounded luminance is the\n    // same as the background one then it's replaced by the new\n    // background color else by the foreground one.\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + (i / n) * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(\n      getSteps(0, 5),\n      getSteps(1, 5),\n      getSteps(2, 5),\n      filter\n    );\n\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(\n      0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n    );\n    let bgGray = Math.round(\n      0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n    );\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n      this.#getRGB.bind(this)\n    );\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [\n        bgGray,\n        fgGray,\n        newBgRGB,\n        newFgRGB,\n      ];\n    }\n    this.#defs.style.color = \"\";\n\n    // Now we can create the filters to highlight some canvas parts.\n    // The colors in the pdf will almost be Canvas and CanvasText, hence we\n    // want to filter them to finally get Highlight and HighlightText.\n    // Since we're in HCM the background color and the foreground color should\n    // be really different when converted to grayscale (if they're not then it\n    // means that we've a poor contrast). Once the canvas colors are converted\n    // to grayscale we can easily map them on their new colors.\n    // The grayscale step is important because if we've something like:\n    //   fgColor = #FF....\n    //   bgColor = #FF....\n    //   then we are enable to map the red component on the new red components\n    //   which can be different.\n\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(\n      getSteps(newFgRGB[0], newBgRGB[0], 5),\n      getSteps(newFgRGB[1], newBgRGB[1], 5),\n      getSteps(newFgRGB[2], newBgRGB[2], 5),\n      filter\n    );\n\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(\n      SVG_NS,\n      \"feColorMatrix\"\n    );\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\n      \"values\",\n      \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n    );\n    filter.append(feColorMatrix);\n  }\n\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n\n    return filter;\n  }\n\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(\n      SVG_NS,\n      \"feComponentTransfer\"\n    );\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * The original, un-scaled, viewport dimensions.\n   * @type {Object}\n   */\n  get rawDims() {\n    const { viewBox } = this;\n    return shadow(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1],\n    });\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @param {boolean} [onlyStripPath]\n * @returns {string}\n */\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  started = Object.create(null);\n\n  times = [];\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const { name } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const { name, start, end } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: isValidFetchUrl\");\n  }\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    pdfDateStringRegex ||= new RegExp(\n      \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n        \"'?\" // Trailing apostrophe (optional)\n    );\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [\n      (colorRGB & 0xff0000) >> 16,\n      (colorRGB & 0x00ff00) >> 8,\n      colorRGB & 0x0000ff,\n    ];\n  }\n\n  if (color.startsWith(\"rgb(\")) {\n    // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n    return color\n      .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x));\n  }\n\n  if (color.startsWith(\"rgba(\")) {\n    return color\n      .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x))\n      .slice(0, 3);\n  }\n\n  warn(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\n\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\n\nfunction getCurrentTransform(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\n\nfunction getCurrentTransformInverse(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\n\n/**\n * @param {HTMLDivElement} div\n * @param {PageViewport} viewport\n * @param {boolean} mustFlip\n * @param {boolean} mustRotate\n */\nfunction setLayerDimensions(\n  div,\n  viewport,\n  mustFlip = false,\n  mustRotate = true\n) {\n  if (viewport instanceof PageViewport) {\n    const { pageWidth, pageHeight } = viewport.rawDims;\n    const { style } = div;\n    const useRound = FeatureTest.isCSSRoundSupported;\n\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getColorValues,\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getRGB,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  noContextMenu,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      unreachable(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n\n  addFilter(maps) {\n    return \"none\";\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n\n  destroy(keepHCM = false) {}\n}\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = true }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    return (\n      (h1 >>> 0).toString(16).padStart(8, \"0\") +\n      (h2 >>> 0).toString(16).padStart(8, \"0\")\n    );\n  }\n}\n\nexport { MurmurHash3_64 };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  isNodeJS,\n  shadow,\n  string32,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\n\nclass FontLoader {\n  #systemFonts = new Set();\n\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null, // For testing only.\n  }) {\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = new Set();\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n        ? styleElement\n        : null;\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      this.loadingRequests = [];\n      this.loadTestFontId = 0;\n    }\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    assert(\n      !this.disableFontFace,\n      \"loadSystemFont shouldn't be called when `disableFontFace` is set.\"\n    );\n\n    if (this.isFontLoadingAPISupported) {\n      const { loadedName, src, style } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        warn(\n          `Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`\n        );\n\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n\n    unreachable(\n      \"Not implemented: loadSystemFont without the Font Loading API.\"\n    );\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || (font.missingFile && !font.systemFontInfo)) {\n      return;\n    }\n    font.attached = true;\n\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        throw new Error(\"Not implemented: async font loading\");\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  get isSyncFontLoadingSupported() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n\n    let supported = false;\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n      if (isNodeJS) {\n        // Node.js - we can pretend that sync font loading is supported.\n        supported = true;\n      } else if (\n        typeof navigator !== \"undefined\" &&\n        // User agent string sniffing is bad, but there is no reliable way to\n        // tell if the font is fully loaded and ready to be used with canvas.\n        /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)\n      ) {\n        // Firefox, from version 14, supports synchronous font loading.\n        supported = true;\n      }\n    }\n    return shadow(this, \"isSyncFontLoadingSupported\", supported);\n  }\n\n  _queueLoadingCallback(callback) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _queueLoadingCallback\");\n    }\n\n    function completeRequest() {\n      assert(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n\n      // Sending all completed requests in order of how they were queued.\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    const { loadingRequests } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback,\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n\n  get _loadTestFont() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _loadTestFont\");\n    }\n\n    // This is a CFF font with 1 glyph for '.' that fills its entire width\n    // and height.\n    const testFont = atob(\n      \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n        \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n        \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n        \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n        \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n        \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n        \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n        \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n        \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n        \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n        \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n        \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n        \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n        \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n        \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n        \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n        \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n    );\n    return shadow(this, \"_loadTestFont\", testFont);\n  }\n\n  _prepareFontLoadEvent(font, request) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _prepareFontLoadEvent\");\n    }\n\n    /** Hack begin */\n    // There's currently no event when a font has finished downloading so the\n    // following code is a dirty hack to 'guess' when a font is ready.\n    // It's assumed fonts are loaded in order, so add a known test font after\n    // the desired fonts and then test for the loading of that test font.\n\n    function int32(data, offset) {\n      return (\n        (data.charCodeAt(offset) << 24) |\n        (data.charCodeAt(offset + 1) << 16) |\n        (data.charCodeAt(offset + 2) << 8) |\n        (data.charCodeAt(offset + 3) & 0xff)\n      );\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n\n    // The temporary canvas is used to determine if fonts are loaded.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n\n    let called = 0;\n    function isFontReady(name, callback) {\n      // With setTimeout clamping this gives the font ~100ms to load.\n      if (++called > 30) {\n        warn(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    // Chromium seems to cache fonts based on a hash of the actual font data,\n    // so the font must be modified for each load test else it will appear to\n    // be loaded already.\n    // TODO: This could maybe be made faster by avoiding the btoa of the full\n    // font by splitting it in chunks before hand and padding the font id.\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n    data = spliceString(\n      data,\n      COMMENT_OFFSET,\n      loadTestFontId.length,\n      loadTestFontId\n    );\n    // CFF checksum is important for IE, adjusting it\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      // align to 4 bytes boundary\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n    /** Hack end */\n  }\n}\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      inspectFont = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        // eslint-disable-next-line prefer-spread\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS, warn } from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"SKIP_BABEL\")) {\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    try {\n      globalThis.DOMMatrix = __non_webpack_require__(\"canvas\").DOMMatrix;\n    } catch (ex) {\n      warn(`Cannot polyfill \\`DOMMatrix\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n\n  (function checkPath2D() {\n    if (globalThis.Path2D || !isNodeJS) {\n      return;\n    }\n    try {\n      const { CanvasRenderingContext2D } = __non_webpack_require__(\"canvas\");\n      const { polyfillPath2D } = __non_webpack_require__(\"path2d-polyfill\");\n\n      globalThis.CanvasRenderingContext2D = CanvasRenderingContext2D;\n      polyfillPath2D(globalThis);\n    } catch (ex) {\n      warn(`Cannot polyfill \\`Path2D\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeFilterFactory extends BaseFilterFactory {}\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  isNodeJS,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  PixelsPerInch,\n} from \"./display_utils.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { convertBlackAndWhiteToRGBA } from \"../shared/image_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\n// To disable Type3 compilation, set the value to `-1`.\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n      path.lineTo(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    const white = 0xffffffff;\n    const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = convertBlackAndWhiteToRGBA({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n    \"filter\",\n  ];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    !isNodeJS\n  ) {\n    const { filter } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  const composeFn =\n    subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    filterFactory,\n    { optionalContentConfig, markedContentStack = null },\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform(...getCurrentTransform(this.compositeCtx));\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        // eslint-disable-next-line prefer-spread\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  #restoreInitialState() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n\n  endDrawing() {\n    this.#restoreInitialState();\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(\n        this.pageColors.foreground,\n        this.pageColors.background\n      );\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(paintWidth / 2);\n        newWidth =\n          paintWidth >= 16384\n            ? Math.floor(paintWidth / 2) - 1 || 1\n            : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        // TODO: see the comment above.\n        newHeight =\n          paintHeight >= 16384\n            ? Math.floor(paintHeight / 2) - 1 || 1\n            : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = getCurrentTransform(ctx);\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets (but not when filling patterns see #15573).\n      // TODO: handle the case of a pattern fill if it's possible.\n      cacheKey = JSON.stringify(\n        isPatternFill\n          ? currentTransform\n          : [currentTransform.slice(0, 4), fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        getCurrentTransformInverse(fillCtx)\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(fillCtx),\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps =\n            this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...getCurrentTransform(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = getCurrentTransform(ctx);\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          getCurrentTransformInverse(ctx),\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface =\n      fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = (this.pendingTextPaths ||= []);\n      paths.push({\n        transform: getCurrentTransform(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      patternTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n\n      return undefined;\n    }\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory,\n            this.filterFactory,\n            {\n              optionalContentConfig: this.optionalContentConfig,\n              markedContentStack: this.markedContentStack,\n            }\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      getCurrentTransformInverse(ctx),\n      PathType.SHADING\n    );\n\n    const inv = getCurrentTransformInverse(ctx);\n    if (inv) {\n      const { width, height } = ctx.canvas;\n      const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n        [0, 0, width, height],\n        inv\n      );\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(getCurrentTransform(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = getCurrentTransform(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      getCurrentTransform(currentCtx)\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = getCurrentTransform(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    // The annotations are drawn just after the page content.\n    // The page content drawing can potentially have set a transform,\n    // a clipping path, whatever...\n    // So in order to have something clean, we restore the initial state.\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n\n    this.ctx.save();\n    this.save();\n\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          getCurrentTransform(this.ctx)\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = getCurrentTransform(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(\n      1,\n      0,\n      0,\n      1,\n      mask.offsetX - currentTransform[4],\n      mask.offsetY - currentTransform[5]\n    );\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n\n    for (const image of images) {\n      const { data, width, height, transform } = image;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            getCurrentTransformInverse(ctx),\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const { bitmap, width, height } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      width,\n      height\n    );\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n\n    return tmpCanvas.canvas;\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      !isNodeJS\n    ) {\n      // The filter, if any, will be applied in applyTransferMapsToBitmap.\n      // It must be applied to the image before rescaling else some artifacts\n      // could appear.\n      // The final restore will reset it to its value.\n      const { filter } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      // typeof check is needed due to node.js support, see issue #8489\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    const scaled = this._scaleImage(\n      imgToPaint,\n      getCurrentTransformInverse(ctx)\n    );\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(ctx),\n      imgData.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        imgToPaint,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = getCurrentTransform(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (this._cachedScaleForStroking[0] === -1) {\n      const { lineWidth } = this.current;\n      const { a, b, c, d } = this.ctx.getTransform();\n      let scaleX, scaleY;\n\n      if (b === 0 && c === 0) {\n        // Fast path\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, unreachable, Util } from \"../shared/util.js\";\nimport { getCurrentTransform } from \"./display_utils.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        getCurrentTransform(ctx)\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(getCurrentTransform(ctx));\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static MAX_PATTERN_SIZE = 3000;\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = getCurrentTransform(graphics.ctx);\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(getCurrentTransform(graphics.ctx), [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = new PromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = new PromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = new PromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: new PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async #deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall?.promise,\n      streamController.pullCall?.promise,\n      streamController.cancelCall?.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable, warn } from \"../shared/util.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst INTERNAL = Symbol(\"INTERNAL\");\n\nclass OptionalContentGroup {\n  #visible = true;\n\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get visible() {\n    return this.#visible;\n  }\n\n  /**\n   * @ignore\n   */\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      unreachable(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\n\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n\n  #groups = new Map();\n\n  #initialHash = null;\n\n  #order = null;\n\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n\n    // The following code must always run *last* in the constructor.\n    this.#initialHash = this.getHash();\n  }\n\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n\n    this.#cachedGetHash = null;\n  }\n\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n\n  getGroups() {\n    return this.#groups.size > 0 ? objectFromMap(this.#groups) : null;\n  }\n\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new MurmurHash3_64();\n\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return (this.#cachedGetHash = hash.hexdigest());\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../interfaces\").IPDFStream} IPDFStream */\n/** @typedef {import(\"../interfaces\").IPDFStreamReader} IPDFStreamReader */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../interfaces\").IPDFStreamRangeReader} IPDFStreamRangeReader */\n\nimport { assert, PromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(\n    {\n      length,\n      initialData,\n      progressiveDone = false,\n      contentDispositionFilename = null,\n      disableRange = false,\n      disableStream = false,\n    },\n    pdfDataRangeTransport\n  ) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n\n    if (initialData?.length > 0) {\n      // Prevent any possible issues by only transferring a Uint8Array that\n      // completely \"utilizes\" its underlying ArrayBuffer.\n      const buffer =\n        initialData instanceof Uint8Array &&\n        initialData.byteLength === initialData.buffer.byteLength\n          ? initialData.buffer\n          : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData({ begin, chunk }) {\n    // Prevent any possible issues by only transferring a Uint8Array that\n    // completely \"utilizes\" its underlying ArrayBuffer.\n    const buffer =\n      chunk instanceof Uint8Array &&\n      chunk.byteLength === chunk.buffer.byteLength\n        ? chunk.buffer\n        : new Uint8Array(chunk).buffer;\n\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      this._rangeReaders[0]?.onProgress?.({ loaded: evt.loaded });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total,\n      });\n    }\n  }\n\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  PromiseCapability,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  warn(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({ loaded: this._loaded });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\nexport { PDFFetchStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replaceAll(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replaceAll(\"_\", \" \");\n          text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, PromiseCapability, stringToBytes } from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return stringToBytes(data).buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const url = __non_webpack_require__(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    this._headersCapability = new PromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({ loaded: this._loaded });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { deprecated, DOMSVGFactory } from \"./display_utils.js\";\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNodeJS,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"SVGGraphics\" shall not be used outside GENERIC builds.'\n  );\n}\n\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\",\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\nconst createObjectURL = function (\n  data,\n  contentType = \"\",\n  forceDataSchema = false\n) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\n\nconst convertImgDataToPng = (function () {\n  const PNG_HEADER = new Uint8Array([\n    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]);\n  const CHUNK_WRAPPER_SIZE = 12;\n\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ ((c >> 1) & 0x7fffffff) : (c >> 1) & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = (crc >>> 8) ^ b;\n    }\n    return crc ^ -1;\n  }\n\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n\n    data[p] = (len >> 24) & 0xff;\n    data[p + 1] = (len >> 16) & 0xff;\n    data[p + 2] = (len >> 8) & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n\n    data.set(body, p);\n    p += body.length;\n\n    const crc = crc32(data, offset + 4, p);\n    data[p] = (crc >> 24) & 0xff;\n    data[p + 1] = (crc >> 16) & 0xff;\n    data[p + 2] = (crc >> 8) & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return (b << 16) | a;\n  }\n\n  /**\n   * @param {Uint8Array} literals The input data.\n   * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n   *   This is the required format for compressed streams in the PNG format:\n   *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n   */\n  function deflateSync(literals) {\n    if (!isNodeJS) {\n      // zlib is certainly not available outside of Node.js. We can either use\n      // the pako library for client-side DEFLATE compression, or use the\n      // canvas API of the browser to obtain a more optimal PNG file.\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      // NOTE: This implementation is far from perfect, but already way better\n      // than not applying any compression.\n      //\n      // A better algorithm will try to choose a good predictor/filter and\n      // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n      //\n      // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n      // Node v3.0.0   Buffer inherits from Uint8Array.\n      // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n      const input =\n        // eslint-disable-next-line no-undef\n        parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n        level: 9,\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      warn(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n\n    return deflateSyncUncompressed(literals);\n  }\n\n  // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78; // compression method and flags\n    idat[pi++] = 0x9c; // flags\n\n    let pos = 0;\n    while (len > maxBlockLength) {\n      // writing non-final DEFLATE blocks type 0 and length of 65535\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n\n    // writing non-final DEFLATE blocks type 0\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = (len >> 8) & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n\n    const adler = adler32(literals, 0, literals.length); // checksum\n    idat[pi++] = (adler >> 24) & 0xff;\n    idat[pi++] = (adler >> 16) & 0xff;\n    idat[pi++] = (adler >> 8) & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n\n    switch (kind) {\n      case ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = (width + 7) >> 3;\n        break;\n      case ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n\n    // prefix every row with predictor 0\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0; // no prediction\n      literals.set(\n        bytes.subarray(offsetBytes, offsetBytes + lineSize),\n        offsetLiterals\n      );\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n\n    if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n      // inverting for image masks\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++; // skipping predictor\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n\n    const ihdr = new Uint8Array([\n      (width >> 24) & 0xff,\n      (width >> 16) & 0xff,\n      (width >> 8) & 0xff,\n      width & 0xff,\n      (height >> 24) & 0xff,\n      (height >> 16) & 0xff,\n      (height >> 8) & 0xff,\n      height & 0xff,\n      bitDepth, // bit depth\n      colorType, // color type\n      0x00, // compression method\n      0x00, // filter method\n      0x00, // interlace method\n    ]);\n    const idat = deflateSync(literals);\n\n    // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n    const pngLength =\n      PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n\n  // eslint-disable-next-line no-shadow\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind =\n      imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n})();\n\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n\n    // Default foreground and background colors\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n\n    this.dashArray = [];\n    this.dashPhase = 0;\n\n    this.dependencies = [];\n\n    // Clipping\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n\n    this.maskId = \"\";\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({ fnId: 92, fn: \"group\", items: [] });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\n\n/**\n * Format a float number as a string.\n *\n * @param value {number} - The float number to format.\n * @returns {string}\n */\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n\n  // Remove trailing zeros.\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\n\n/**\n * Format a transform matrix as a string. The standard rotation, scale and\n * translation matrices are replaced by their shorter forms, and for\n * identity matrices an empty string is returned to save memory.\n *\n * @param m {Array} - The transform matrix to format.\n * @returns {string}\n */\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = (Math.acos(m[0]) * 180) / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return (\n    `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n    `${pf(m[5])})`\n  );\n}\n\n// The counts below are relevant for all pages, so they have to be global\n// instead of being members of `SVGGraphics` (which is recreated for\n// each page).\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\n\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    deprecated(\n      \"The SVG back-end is no longer maintained and *may* be removed in the future.\"\n    );\n    this.svgFactory = new DOMSVGFactory();\n\n    this.current = new SVGExtraState();\n    this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n\n    // In `src/shared/util.js` the operator names are mapped to IDs.\n    // The list below represents the reverse of that, i.e., it maps IDs\n    // to operator names.\n    this._operatorIdMapping = [];\n    for (const op in OPS) {\n      this._operatorIdMapping[OPS[op]] = op;\n    }\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== OPS.dependency) {\n        continue;\n      }\n\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = Util.transform(\n      this.transformMatrix,\n      transformMatrix\n    );\n    this.tgrp = null;\n  }\n\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i],\n      });\n    }\n    return opListToTree(opList);\n  }\n\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n\n      switch (fnId | 0) {\n        case OPS.beginText:\n          this.beginText();\n          break;\n        case OPS.dependency:\n          // Handled in `loadDependencies`, so no warning should be shown.\n          break;\n        case OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case OPS.setFont:\n          this.setFont(args);\n          break;\n        case OPS.showText:\n          this.showText(args[0]);\n          break;\n        case OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case OPS.endText:\n          this.endText();\n          break;\n        case OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case OPS.setTextMatrix:\n          this.setTextMatrix(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5]\n          );\n          break;\n        case OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case OPS.fill:\n          this.fill();\n          break;\n        case OPS.eoFill:\n          this.eoFill();\n          break;\n        case OPS.stroke:\n          this.stroke();\n          break;\n        case OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case OPS.closePath:\n          this.closePath();\n          break;\n        case OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case OPS.nextLine:\n          this.nextLine();\n          break;\n        case OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          warn(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = IDENTITY_MATRIX;\n    current.lineMatrix = IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        // Word break\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {\n        // TODO: To assist with text selection, we should replace the missing\n        // character with a space character if charWidth is not zero.\n        // But we cannot just do \"character = ' '\", because the ' ' character\n        // might actually map to a different glyph.\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(\n        null,\n        \"y\",\n        current.ycoords.map(pf).join(\" \")\n      );\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n\n    const fillStrokeMode =\n      current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    if (\n      fillStrokeMode === TextRenderingMode.FILL ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n      // Workaround for Firefox: We must set fill=\"transparent\" because\n      // fill=\"none\" would generate an empty clipping path.\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n\n    if (\n      fillStrokeMode === TextRenderingMode.STROKE ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n\n    // Include the text rise in the text matrix since the `pm` function\n    // creates the SVG element's `translate` entry (work on a copy to avoid\n    // altering the original text matrix).\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n\n    current.txtElement.setAttributeNS(\n      null,\n      \"transform\",\n      `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n    );\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\n        \"addFontStyle: No font data available, \" +\n          'ensure that the \"fontExtraProperties\" API parameter is set.'\n      );\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n\n    const url = createObjectURL(\n      fontObj.data,\n      fontObj.mimetype,\n      this.forceDataSchema\n    );\n    this.cssStyle.textContent +=\n      `@font-face { font-family: \"${fontObj.loadedName}\";` +\n      ` src: url(${url}); }\\n`;\n  }\n\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n\n    if (\n      this.embedFonts &&\n      !fontObj.missingFile &&\n      !this.embeddedFonts[fontObj.loadedName]\n    ) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  endText() {\n    const current = this.current;\n    if (\n      current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n      current.txtElement?.hasChildNodes()\n    ) {\n      // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  // Path properties\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = Util.makeHexColor(r, g, b);\n  }\n\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n\n  shadingFill(args) {\n    const { width, height } = this.viewport;\n    const inv = Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n      [0, 0, width, height],\n      inv\n    );\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n\n  /**\n   * @private\n   */\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n\n  /**\n   * @private\n   */\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n      ...Util.applyTransform([x0, y0], matrix),\n      ...Util.applyTransform([x1, y1], matrix),\n    ]);\n    const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n    // Save current state.\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n\n    // Restore saved state.\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n\n  /**\n   * @private\n   */\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        warn(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n\n    for (const op of ops) {\n      switch (op | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\n            \"M\",\n            pf(x),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(yh),\n            \"L\",\n            pf(x),\n            pf(yh),\n            \"Z\"\n          );\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\n            \"C\",\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3]),\n            pf(x),\n            pf(y)\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          d.push(\n            \"C\",\n            pf(x),\n            pf(y),\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3])\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n\n    d = d.join(\" \");\n\n    if (\n      current.path &&\n      ops.length > 0 &&\n      ops[0] !== OPS.rectangle &&\n      ops[0] !== OPS.moveTo\n    ) {\n      // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n      // probably been divided into two OPS.constructPath operators by\n      // OperatorList. Append the commands to the previous path element.\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n\n    // Saving a reference in current.element so that it can be addressed\n    // in 'fill' and 'stroke'\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n\n  endPath() {\n    const current = this.current;\n\n    // Painting operators end a path.\n    current.path = null;\n\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n\n    // Add the current path to a clipping path.\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n    // A deep clone is needed when text is used as a clipping path.\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n\n    if (current.activeClipUrl) {\n      // The previous clipping group content can go out of order -- resetting\n      // cached clipGroups.\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      // Intersect with the previous clipping path.\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n\n    this.tgrp = null;\n  }\n\n  clip(type) {\n    this.pendingClip = type;\n  }\n\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          warn(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(\n      null,\n      \"stroke-width\",\n      pf(lineWidthScale * current.lineWidth) + \"px\"\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dasharray\",\n      dashArray.map(pf).join(\" \")\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dashoffset\",\n      pf(lineWidthScale * current.dashPhase) + \"px\"\n    );\n  }\n\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n\n  fillStroke() {\n    // Order is important since stroke wants fill to be none.\n    // First stroke, then if fill needed, it will be overwritten.\n    this.stroke();\n    this.fill();\n  }\n\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n    this._ensureTransformGroup().append(rect);\n  }\n\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(\n      null,\n      \"transform\",\n      `scale(${pf(1 / width)} ${pf(-1 / height)})`\n    );\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      warn(\n        \"paintImageMaskXObject: ImageBitmap support is not implemented, \" +\n          \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\"\n      );\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n\n    this.paintInlineImageXObject(imgData, mask);\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(\n        matrix[0],\n        matrix[1],\n        matrix[2],\n        matrix[3],\n        matrix[4],\n        matrix[5]\n      );\n    }\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {}\n\n  /**\n   * @private\n   */\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n    // Create the definitions element.\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n\n    // Create the root group element, which acts a container for all other\n    // groups and applies the viewport transform.\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n\n    // For the construction of the SVG image we are only interested in the\n    // root group, so we expose it as the entry point of the SVG image for\n    // the other code in this class.\n    this.svg = rootGroup;\n\n    return svg;\n  }\n\n  /**\n   * @private\n   */\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n\n  /**\n   * @private\n   */\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nimport {\n  AbortException,\n  FeatureTest,\n  PromiseCapability,\n  Util,\n} from \"../shared/util.js\";\nimport { deprecated, setLayerDimensions } from \"./display_utils.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {ReadableStream | TextContent} textContentSource - Text content to\n *   render, i.e. the value returned by the page's `streamTextContent` or\n *   `getTextContent` method.\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n */\n\n/**\n * Text layer update parameters.\n *\n * @typedef {Object} TextLayerUpdateParameters\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n * @property {boolean} [mustRotate] true if the text layer must be rotated.\n * @property {boolean} [mustRescale] true if the text layer contents must be\n *   rescaled.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\n\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", { alpha: false });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", { alpha: false });\n  }\n\n  return ctx;\n}\n\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.canvas.width = ctx.canvas.height = 0;\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0,\n  };\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent =\n    fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${((100 * left) / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${((100 * top) / task._pageHeight).toFixed(2)}%`;\n  } else {\n    // We're in a marked content span, hence we can't use percents.\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n\n  textDivProperties.fontSize = fontHeight;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\n\nfunction layout(params) {\n  const { div, scale, properties, ctx, prevFontSize, prevFontFamily } = params;\n  const { style } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const { fontFamily } = style;\n    const { canvasWidth, fontSize } = properties;\n\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n\n    // Only measure the width for multi-char text divs, see `appendText`.\n    const { width } = ctx.measureText(div.textContent);\n\n    if (width > 0) {\n      transform = `scaleX(${(canvasWidth * scale) / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported,\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported),\n    };\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n\n    setLayerDimensions(container, viewport);\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        this._layoutTextParams = null;\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    this._capability.reject(new AbortException(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (\n          item.type === \"beginMarkedContentProps\" ||\n          item.type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = (this._layoutTextParams.properties =\n      this._textDivProperties.get(textDiv));\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render() {\n    const capability = new PromiseCapability();\n    let styleCache = Object.create(null);\n\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const { items, styles } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} params\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(params) {\n  if (\n    (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n    !params.textContentSource &&\n    (params.textContent || params.textContentStream)\n  ) {\n    deprecated(\n      \"The TextLayerRender `textContent`/`textContentStream` parameters \" +\n        \"will be removed in the future, please use `textContentSource` instead.\"\n    );\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC && !TESTING\")) {\n    const { container, viewport } = params;\n    const style = getComputedStyle(container);\n    const visibility = style.getPropertyValue(\"visibility\");\n    const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n\n    if (\n      visibility === \"visible\" &&\n      (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)\n    ) {\n      console.error(\n        \"The `--scale-factor` CSS-variable must be set, \" +\n          \"to the same value as `viewport.scale`, \" +\n          \"either on the `container`-element itself or higher up in the DOM.\"\n      );\n    }\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\n\n/**\n * @param {TextLayerUpdateParameters} params\n * @returns {undefined}\n */\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true,\n}) {\n  if (mustRotate) {\n    setLayerDimensions(container, { rotation: viewport.rotation });\n  }\n\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx,\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\nexport { renderTextLayer, TextLayerRenderTask, updateTextLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n/** @typedef {import(\"../display_utils.js\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n/** @typedef {import(\"../../../web/interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../annotation_layer.js\").AnnotationLayer} AnnotationLayer */\n\nimport { AnnotationEditorType, FeatureTest } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextEditor } from \"./freetext.js\";\nimport { InkEditor } from \"./ink.js\";\nimport { setLayerDimensions } from \"../display_utils.js\";\nimport { StampEditor } from \"./stamp.js\";\n\n/**\n * @typedef {Object} AnnotationEditorLayerOptions\n * @property {Object} mode\n * @property {HTMLDivElement} div\n * @property {AnnotationEditorUIManager} uiManager\n * @property {boolean} enabled\n * @property {TextAccessibilityManager} [accessibilityManager]\n * @property {number} pageIndex\n * @property {IL10n} l10n\n * @property {AnnotationLayer} [annotationLayer]\n * @property {PageViewport} viewport\n */\n\n/**\n * @typedef {Object} RenderEditorLayerOptions\n * @property {PageViewport} viewport\n */\n\n/**\n * Manage all the different editors on a page.\n */\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n\n  #allowClick = false;\n\n  #annotationLayer = null;\n\n  #boundPointerup = this.pointerup.bind(this);\n\n  #boundPointerdown = this.pointerdown.bind(this);\n\n  #editors = new Map();\n\n  #hadPointerDown = false;\n\n  #isCleaningUp = false;\n\n  #isDisabling = false;\n\n  #uiManager;\n\n  static _initialized = false;\n\n  /**\n   * @param {AnnotationEditorLayerOptions} options\n   */\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n,\n  }) {\n    const editorTypes = [FreeTextEditor, InkEditor, StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n\n    this.#uiManager.addLayer(this);\n  }\n\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   */\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n\n  /**\n   * The mode has changed: it must be updated.\n   * @param {number} mode\n   */\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === AnnotationEditorType.INK) {\n      // We always want to an ink editor ready to draw in.\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n\n    if (mode !== AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\n        \"freeTextEditing\",\n        mode === AnnotationEditorType.FREETEXT\n      );\n      this.div.classList.toggle(\n        \"inkEditing\",\n        mode === AnnotationEditorType.INK\n      );\n      this.div.classList.toggle(\n        \"stampEditing\",\n        mode === AnnotationEditorType.STAMP\n      );\n      this.div.hidden = false;\n    }\n  }\n\n  addInkEditorIfNeeded(isCommitting) {\n    if (\n      !isCommitting &&\n      this.#uiManager.getMode() !== AnnotationEditorType.INK\n    ) {\n      return;\n    }\n\n    if (!isCommitting) {\n      // We're removing an editor but an empty one can already exist so in this\n      // case we don't need to create a new one.\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n\n    const editor = this.#createAndAddNewEditor(\n      { offsetX: 0, offsetY: 0 },\n      /* isCentered = */ false\n    );\n    editor.setInBackground();\n  }\n\n  /**\n   * Set the editing state.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n\n  /**\n   * Enable pointer events on the main div in order to enable\n   * editor creation.\n   */\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n\n    if (!this.#annotationLayer) {\n      return;\n    }\n\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      // The element must be hidden whatever its state is.\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n\n  /**\n   * Disable editor creation.\n   */\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n\n    if (this.#annotationLayer) {\n      // Show the annotations that were hidden in enable().\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const { id } = editable.data;\n        if (\n          hiddenAnnotationIds.has(id) ||\n          this.#uiManager.isDeletedAnnotationElement(id)\n        ) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n\n  /**\n   * Set the current editor.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n\n    this.#uiManager.setActiveEditor(editor);\n  }\n\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const { annotationElementId } = editor;\n    if (\n      annotationElementId &&\n      this.#uiManager.isDeletedAnnotationElement(annotationElementId)\n    ) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  remove(editor) {\n    // Since we can undo a removal we need to keep the\n    // parent property as it is, so don't null it!\n\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        // When the div is removed from DOM the focus can move on the\n        // document.body, so we need to move it back to the main container.\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(/* isCommitting = */ false);\n    }\n  }\n\n  /**\n   * An editor can have a different parent, for example after having\n   * being dragged and droped from a page to another.\n   * @param {AnnotationEditor} editor\n   */\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n\n  /**\n   * Add a new editor in the current view.\n   * @param {AnnotationEditor} editor\n   */\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n\n    // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n\n    const { activeElement } = document;\n    if (editor.div.contains(activeElement)) {\n      // When the div is moved in the DOM the focus can move somewhere else,\n      // so we want to be sure that the focus will stay on the editor but we\n      // don't want to call any focus callbacks, hence we disable them and only\n      // re-enable them when the editor has the focus.\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\n            \"focusin\",\n            () => {\n              editor._focusEventsAllowed = true;\n            },\n            { once: true }\n          );\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      editor.div,\n      editor.contentDiv,\n      /* isRemovable = */ true\n    );\n  }\n\n  /**\n   * Add or rebuild depending if it has been removed or not.\n   * @param {AnnotationEditor} editor\n   */\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Add a new editor and make this addition undoable.\n   * @param {AnnotationEditor} editor\n   */\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n\n    this.addCommands({ cmd, undo, mustExec: false });\n  }\n\n  /**\n   * Get an id for an editor.\n   * @returns {string}\n   */\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} params\n   * @returns {AnnotationEditor}\n   */\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case AnnotationEditorType.FREETEXT:\n        return new FreeTextEditor(params);\n      case AnnotationEditorType.INK:\n        return new InkEditor(params);\n      case AnnotationEditorType.STAMP:\n        return new StampEditor(params);\n    }\n    return null;\n  }\n\n  /**\n   * Paste some content into a new editor.\n   * @param {number} mode\n   * @param {Object} params\n   */\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n\n    const { offsetX, offsetY } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} data\n   * @returns {AnnotationEditor}\n   */\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case AnnotationEditorType.FREETEXT:\n        return FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.INK:\n        return InkEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.STAMP:\n        return StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n\n  /**\n   * Create and add a new editor.\n   * @param {PointerEvent} event\n   * @param {boolean} isCentered\n   * @returns {AnnotationEditor}\n   */\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n\n    return editor;\n  }\n\n  #getCenterPoint() {\n    const { x, y, width, height } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] =\n      this.viewport.rotation % 180 === 0\n        ? [centerX, centerY]\n        : [centerY, centerX];\n\n    return { offsetX, offsetY };\n  }\n\n  /**\n   * Create and add a new editor.\n   */\n  addNewEditor() {\n    this.#createAndAddNewEditor(\n      this.#getCenterPoint(),\n      /* isCentered = */ true\n    );\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n\n  /**\n   * Pointerup callback.\n   * @param {PointerEvent} event\n   */\n  pointerup(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Don't create an editor on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    if (!this.#hadPointerDown) {\n      // It can happen when the user starts a drag inside a text editor\n      // and then releases the mouse button outside of it. In such a case\n      // we don't want to create a new editor, hence we check that a pointerdown\n      // occurred on this div previously.\n      return;\n    }\n    this.#hadPointerDown = false;\n\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n\n    if (this.#uiManager.getMode() === AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n\n    this.#createAndAddNewEditor(event, /* isCentered = */ false);\n  }\n\n  /**\n   * Pointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      // It's possible to have a second pointerdown event before a pointerup one\n      // when the user puts a finger on a touchscreen and then add a second one\n      // to start a pinch-to-zoom gesture.\n      // That said, in case it's possible to have two pointerdown events with\n      // a mouse, we don't want to create a new editor in such a case either.\n      this.#hadPointerDown = false;\n      return;\n    }\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Do nothing on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    this.#hadPointerDown = true;\n\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n\n  /**\n   *\n   * @param {AnnotationEditor} editor\n   * @param {number} x\n   * @param {number} y\n   * @returns\n   */\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n\n  /**\n   * Destroy the main editor.\n   */\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      // We need to commit the current editor before destroying the layer.\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n\n  #cleanup() {\n    // When we're cleaning up, some editors are removed but we don't want\n    // to add a new one which will induce an addition in this.#editors, hence\n    // an infinite loop.\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n\n  /**\n   * Render the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  render({ viewport }) {\n    this.viewport = viewport;\n    setLayerDimensions(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n\n  /**\n   * Update the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  update({ viewport }) {\n    // Editors have their dimensions/positions in percent so to avoid any\n    // issues (see #15582), we must commit the current one before changing\n    // the viewport.\n    this.#uiManager.commitOrRemove();\n\n    this.viewport = viewport;\n    setLayerDimensions(this.div, { rotation: viewport.rotation });\n    this.updateMode();\n  }\n\n  /**\n   * Get page dimensions.\n   * @returns {Object} dimensions.\n   */\n  get pageDimensions() {\n    const { pageWidth, pageHeight } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\n\nexport { AnnotationEditorLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  assert,\n  LINE_FACTOR,\n  shadow,\n  Util,\n} from \"../../shared/util.js\";\nimport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  KeyboardManager,\n} from \"./tools.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass FreeTextEditor extends AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n\n  #color;\n\n  #content = \"\";\n\n  #editorDivId = `${this.id}-editor`;\n\n  #fontSize;\n\n  #initialData = null;\n\n  static _freeTextDefaultContent = \"\";\n\n  static _internalPadding = 0;\n\n  static _defaultColor = null;\n\n  static _defaultFontSize = 10;\n\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n\n    const arrowChecker = self => self.isEmpty();\n\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [\n          // Commit the text in case the user use ctrl+s to save the document.\n          // The event must bubble in order to be caught by the viewer.\n          // See bug 1831574.\n          [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n          proto.commitOrRemove,\n          { bubbles: true },\n        ],\n        [\n          [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n          proto.commitOrRemove,\n        ],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  static _type = \"freetext\";\n\n  constructor(params) {\n    super({ ...params, name: \"freeTextEditor\" });\n    this.#color =\n      params.color ||\n      FreeTextEditor._defaultColor ||\n      AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"],\n    });\n    const style = getComputedStyle(document.documentElement);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      const lineHeight = parseFloat(\n        style.getPropertyValue(\"--freetext-line-height\")\n      );\n      assert(\n        lineHeight === LINE_FACTOR,\n        \"Update the CSS variable to agree with the constant.\"\n      );\n    }\n\n    this._internalPadding = parseFloat(\n      style.getPropertyValue(\"--freetext-padding\")\n    );\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.FREETEXT_SIZE,\n        FreeTextEditor._defaultFontSize,\n      ],\n      [\n        AnnotationEditorParamsType.FREETEXT_COLOR,\n        FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize],\n      [AnnotationEditorParamsType.FREETEXT_COLOR, this.#color],\n    ];\n  }\n\n  /**\n   * Update the font size and make this action as undoable.\n   * @param {number} fontSize\n   */\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Helper to translate the editor with the keyboard when it's empty.\n   * @param {number} x in page units.\n   * @param {number} y in page units.\n   */\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n  }\n\n  /** @inheritdoc */\n  getInitialTranslation() {\n    // The start of the base line is where the user clicked.\n    const scale = this.parentScale;\n    return [\n      -FreeTextEditor._internalPadding * scale,\n      -(FreeTextEditor._internalPadding + this.#fontSize) * scale,\n    ];\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n\n    // On Chrome, the focus is given to <body> when contentEditable is set to\n    // false, hence we focus the div.\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n\n    // In case the blur callback hasn't been called.\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      // The editor was created in using ctrl+c.\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n\n  /** @inheritdoc */\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n\n  /**\n   * Extract the text from this editor.\n   * @returns {string}\n   */\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      // This editor isn't on screen but we need to get its dimensions, so\n      // we just insert it in the DOM, get its bounding box and then remove it.\n      const { currentLayer, div } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n\n    // The dimensions are relative to the rotation of the page, hence we need to\n    // take that into account (see issue #16636).\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Commit the content we have in this editor.\n   * @returns {undefined}\n   */\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = (this.#content = this.#extractText().trimEnd());\n    if (savedText === newText) {\n      return;\n    }\n\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false,\n    });\n    this.#setEditorDimensions();\n  }\n\n  /** @inheritdoc */\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n\n  /** @inheritdoc */\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n\n  /**\n   * ondblclick callback.\n   * @param {MouseEvent} event\n   */\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n\n  /**\n   * onkeydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      // Avoid to add an unwanted new line.\n      event.preventDefault();\n    }\n  }\n\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n\n  /** @inheritdoc */\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n\n  /** @inheritdoc */\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_free_text2_aria_label\")\n      .then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n\n    AnnotationEditor._l10nPromise\n      .get(\"free_text2_default_content\")\n      .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n\n    const { style } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n\n    this.div.append(this.editorDiv);\n\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n\n    // TODO: implement paste callback.\n    // The goal is to sanitize and have something suitable for this\n    // editor.\n    bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        // This stuff is hard to test: if something is changed here, please\n        // test with the following PDF file:\n        //  - freetexts.pdf\n        //  - rotated_freetexts.pdf\n        // Only small variations between the original annotation and its editor\n        // are allowed.\n\n        // position is the position of the first glyph in the annotation\n        // and it's relative to its container.\n        const { position } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX =\n              baseX +\n              (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY =\n              baseY +\n              (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(\n          baseX * parentWidth,\n          baseY * parentHeight,\n          this.width * parentWidth,\n          this.height * parentHeight\n        );\n      }\n\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n    }\n\n    return this.div;\n  }\n\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(\n        line ? document.createTextNode(line) : document.createElement(\"br\")\n      );\n      this.editorDiv.append(div);\n    }\n  }\n\n  get contentDiv() {\n    return this.editorDiv;\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: { fontSize, fontColor },\n          rect,\n          rotation,\n          id,\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: { pageNumber },\n        },\n      } = data;\n      // textContent is supposed to be an array of strings containing each line\n      // of text. However, it can be null or empty.\n      if (!textContent || textContent.length === 0) {\n        // Empty annotation.\n        return null;\n      }\n      initialData = data = {\n        annotationType: AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false,\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.#fontSize = data.fontSize;\n    editor.#color = Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true,\n      };\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = AnnotationEditor._colorManager.convert(\n      this.isAttachedToDOM\n        ? getComputedStyle(this.editorDiv).color\n        : this.#color\n    );\n\n    const serialized = {\n      annotationType: AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // Don't add the id when copying because the pasted editor mustn't be\n      // linked to an existing annotation.\n      return serialized;\n    }\n\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n\n    serialized.id = this.annotationElementId;\n\n    return serialized;\n  }\n\n  #hasElementChanged(serialized) {\n    const { value, fontSize, color, rect, pageIndex } = this.#initialData;\n\n    return (\n      serialized.value !== value ||\n      serialized.fontSize !== fontSize ||\n      serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) ||\n      serialized.color.some((c, i) => c !== color[i]) ||\n      serialized.pageIndex !== pageIndex\n    );\n  }\n\n  #cheatInitialRect(delayed = false) {\n    // The annotation has a rect but the editor has an other one.\n    // When we want to know if the annotation has changed (e.g. has been moved)\n    // we must compare the editor initial rect with the current one.\n    // So this method is a hack to have a way to compare the real rects.\n    if (!this.annotationElementId) {\n      return;\n    }\n\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(/* delayed = */ true), 0);\n      return;\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\n\nexport { FreeTextEditor };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationEditorType,\n  AnnotationPrefix,\n  AnnotationType,\n  FeatureTest,\n  LINE_FACTOR,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n  setLayerDimensions,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { NullL10n } from \"display-l10n_utils\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  #hasBorder = false;\n\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n\n  static _hasPopupData({ titleObj, contentsObj, richText }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLElement} A section element.\n   */\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: { page, viewport },\n    } = this;\n\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n\n    // The accessibility manager will move the annotation in the DOM in\n    // order to match the visual ordering.\n    // But if an annotation is above an other one, then we must draw it\n    // after the other one whatever the order is in the DOM, hence the\n    // use of the z-index.\n    container.style.zIndex = this.parent.zIndex++;\n\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const { rotation } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n\n    const { width, height } = getRectDims(data.rect);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = Util.makeHexColor(\n          borderColor[0] | 0,\n          borderColor[1] | 0,\n          borderColor[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n    container.style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n\n    const { rotation } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${(100 * width) / pageWidth}%`;\n      container.style.height = `${(100 * height) / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n\n    return container;\n  }\n\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n    const { width, height } = getRectDims(this.data.rect);\n\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = (100 * width) / pageWidth;\n      elementHeight = (100 * height) / pageHeight;\n    } else {\n      elementWidth = (100 * height) / pageWidth;\n      elementHeight = (100 * width) / pageHeight;\n    }\n\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] =\n        ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: ColorConverters[`${colorType}_rgb`](colorArray),\n      });\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const { display } = event.detail;\n        // See scripting/constants.js for the values of `Display`.\n        // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print,\n        });\n      },\n      hidden: event => {\n        const { hidden } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle,\n        });\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail,\n          },\n          target: element,\n        };\n        action(eventProxy);\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const { quadPoints } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n\n    if (quadPoints.length === 1) {\n      const [, { x: trX, y: trY }, { x: blX, y: blY }] = quadPoints[0];\n      if (\n        rectTrX === trX &&\n        rectTrY === trY &&\n        rectBlX === blX &&\n        rectBlY === blY\n      ) {\n        // The quadpoints cover the whole annotation rectangle, so no need to\n        // create a quadrilateral.\n        return;\n      }\n    }\n\n    const { style } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const { borderColor, borderWidth } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\n        \"url('data:image/svg+xml;utf8,\",\n        `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n        ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n        `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`,\n      ];\n      this.container.classList.add(\"hasBorder\");\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.container.classList.add(\"hasClipPath\");\n    }\n\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n\n    const { svgFactory } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n\n    for (const [, { x: trX, y: trY }, { x: blX, y: blY }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(\n        `<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`\n      );\n    }\n\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createPopup() {\n    const { container, data } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation,\n      },\n      parent: this.parent,\n      elements: [this],\n    });\n    this.parent.div.append(popup.render());\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.querySelector(\n            `[data-element-id=\"${id}\"]`\n          );\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { exportValue } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n\n  /**\n   * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n   *          element.\n   */\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: { id: editId },\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId,\n      });\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n\n    return this.container;\n  }\n\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      this.#setInternalLink();\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind attachments to the link element.\n   * @param {Object} link\n   * @param {Object} attachment\n   */\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(\n        this.container,\n        attachment.content,\n        attachment.filename\n      );\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind SetOCGState actions to the link element.\n   * @param {Object} link\n   * @param {Object} action\n   */\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      otherClickAction?.();\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          warn(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n  }\n\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n\n    const image = document.createElement(\"img\");\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.append(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = FeatureTest.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non-mouse events\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n\n        if (!valueGetter) {\n          return;\n        }\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= { focused: false };\n        }\n        this._setEventListener(\n          element,\n          elementData,\n          baseName,\n          eventName,\n          getter\n        );\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          // Ensure that elementData will have the correct value.\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontColor } = this.data.defaultAppearanceData;\n    const fontSize =\n      this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n\n    // We don't use the font, as specified in the PDF document, for the <input>\n    // element. Hence using the original `fontSize` could look bad, which is why\n    // it's instead based on the field height.\n    // If the height is \"big\" then it could lead to a too big font size\n    // so in this case use the one we've in the pdf (hence the min).\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(lineHeight / LINE_FACTOR)\n      );\n    } else {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(height / LINE_FACTOR)\n      );\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.classList.add(\"textWidgetAnnotation\");\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen,\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n\n      let fieldFormattedValues =\n        storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      this._setRequired(element, this.data.required);\n\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n        elementData.formattedValue = null;\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const { target } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const { charLimit } = event.detail;\n              const { target } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, { value });\n\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd,\n                },\n              });\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          // If the key is one of Escape, Enter then the data are committed.\n          // If we've a Tab then data will be committed on blur.\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            // When we've a multiline field, \"Enter\" key is a key as the other\n            // hence we don't commit the data (Acrobat behaves the same way)\n            // (see issue #15627).\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          elementData,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const { options, multiple } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    let selectedValues = getValue(/* isExport */ false);\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(/* isExport */ true);\n        storage.setValue(id, { value: exportValue });\n\n        event.preventDefault();\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        null,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n          [\"input\", \"Validate\"],\n        ],\n        event => event.target.value\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(/* isExport */ true) });\n      });\n    }\n\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {\n      // Just use the default font size...\n      // it's a bit hard to guess what is a good size.\n    }\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const { data, elements } = parameters;\n    super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n    this.elements = elements;\n  }\n\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open,\n    });\n\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n\n    this.container.setAttribute(\n      \"aria-controls\",\n      elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\")\n    );\n\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  #dateTimePromise = null;\n\n  #boundKeyDown = this.#keyDown.bind(this);\n\n  #boundHide = this.#hide.bind(this);\n\n  #boundShow = this.#show.bind(this);\n\n  #boundToggle = this.#toggle.bind(this);\n\n  #color = null;\n\n  #container = null;\n\n  #contentsObj = null;\n\n  #elements = null;\n\n  #parent = null;\n\n  #parentRect = null;\n\n  #pinned = false;\n\n  #popup = null;\n\n  #rect = null;\n\n  #richText = null;\n\n  #titleObj = null;\n\n  #wasVisible = false;\n\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open,\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n\n    const dateObject = PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      // The modification date is shown in the popup instead of the creation\n      // date if it is available and can be parsed correctly, which is\n      // consistent with other viewers such as Adobe Acrobat.\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n    }\n\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n\n    // Attach the event listener to toggle the popup with the keyboard.\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // Since the popup is lazily created, we need to ensure that it'll be\n      // created and displayed during reference tests.\n      this.#parent.popupShow.push(async () => {\n        if (this.#container.hidden) {\n          this.#show();\n        }\n        if (this.#dateTimePromise) {\n          await this.#dateTimePromise;\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.#popup) {\n      return;\n    }\n\n    const {\n      page: { view },\n      viewport: {\n        rawDims: { pageWidth, pageHeight, pageX, pageY },\n      },\n    } = this.#parent;\n    const popup = (this.#popup = document.createElement(\"div\"));\n    popup.className = \"popup\";\n\n    if (this.#color) {\n      const baseColor = (popup.style.outlineColor = Util.makeHexColor(\n        ...this.#color\n      ));\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")\n      ) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        // color-mix isn't supported in some browsers hence this version.\n        // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n        // TODO: Use color-mix when it's supported everywhere.\n        // Enlighten the color.\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = Util.makeHexColor(\n          ...this.#color.map(c =>\n            Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)\n          )\n        );\n      }\n    }\n\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({ dir: title.dir, str: title.textContent } = this.#titleObj);\n    popup.append(header);\n\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (\n      richText?.str &&\n      (!contentsObj?.str || contentsObj.str === richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n\n    const normalizedRect = Util.normalizeRect([\n      rect[0],\n      view[3] - rect[1] + view[1],\n      rect[2],\n      view[3] - rect[3] + view[1],\n    ]);\n\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect\n      ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n      : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n\n    const { style } = this.#container;\n    style.left = `${(100 * (popupLeft - pageX)) / pageWidth}%`;\n    style.top = `${(100 * (popupTop - pageY)) / pageHeight}%`;\n\n    this.#container.append(popup);\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    if (event.key === \"Enter\" || (event.key === \"Escape\" && this.#pinned)) {\n      this.#toggle();\n    }\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   */\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n\n  /**\n   * Show the popup.\n   */\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex =\n        parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n\n  /**\n   * Hide the popup.\n   */\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex =\n      parseInt(this.#container.style.zIndex) - 1000;\n  }\n\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = AnnotationEditorType.FREETEXT;\n  }\n\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this._editOnDoubleClick();\n\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = (this.#circle =\n      this.svgFactory.createElement(\"svg:ellipse\"));\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = (this.#polyline = this.svgFactory.createElement(\n      this.svgElementName\n    ));\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = AnnotationEditorType.INK;\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n\n      svg.append(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename, /* onlyStripPath = */ true);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n\n    const { container, data } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      // Unfortunately it seems that it's not clearly specified exactly what\n      // names are actually valid, since Table 184 contains:\n      //   Conforming readers shall provide predefined icon appearances for at\n      //   least the following standard names: GraphPushPin, PaperclipTag.\n      //   Additional names may be supported as well. Default value: PushPin.\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${\n        /paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"\n      }.svg`;\n\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(\n          data.fillAlpha * 100\n        )}%);`;\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          this.container.classList.add(\"hasFillAlpha\");\n        }\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n\n    const { isMac } = FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n\n    container.append(trigger);\n    return container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   */\n  #download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Object<string, Array<Object>> | null} [fieldObjects]\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n * @property {TextAccessibilityManager} [accessibilityManager]\n */\n\n/**\n * Manage the layer containing all the annotations.\n */\nclass AnnotationLayer {\n  #accessibilityManager = null;\n\n  #annotationCanvasMap = null;\n\n  #editableAnnotations = new Map();\n\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport,\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC && !TESTING\")\n    ) {\n      this.l10n ||= NullL10n;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"showPopups\", {\n        value: async () => {\n          for (const show of this.popupShow) {\n            await show();\n          }\n        },\n      });\n      this.popupShow = [];\n    }\n  }\n\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${AnnotationPrefix}${id}`;\n\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      element,\n      contentElement,\n      /* isRemovable = */ false\n    );\n  }\n\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @param {AnnotationLayerParameters} params\n   * @memberof AnnotationLayer\n   */\n  async render(params) {\n    const { annotations } = params;\n    const layer = this.div;\n    setLayerDimensions(layer, this.viewport);\n\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null,\n    };\n\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const { width, height } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue; // Ignore empty annotations.\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          // Ignore popup annotations without a corresponding annotation.\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n\n      if (!element.isRenderable) {\n        continue;\n      }\n\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n\n    this.#setAnnotationCanvasMap();\n\n    await this.l10n.translate(layer);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @param {AnnotationLayerParameters} viewport\n   * @memberof AnnotationLayer\n   */\n  update({ viewport }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    setLayerDimensions(layer, { rotation: viewport.rotation });\n\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\n\nexport {\n  AnnotationLayer,\n  FreeTextAnnotationElement,\n  InkAnnotationElement,\n  StampAnnotationElement,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static T_rgb() {\n    return [null];\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_rgb([c, y, m, k]) {\n    return [\n      scaleAndClamp(1 - Math.min(1, c + k)),\n      scaleAndClamp(1 - Math.min(1, m + k)),\n      scaleAndClamp(1 - Math.min(1, y + k)),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `web/` and\n *              `src/display/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  annotation_date_string: \"{{date}}, {{time}}\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\",\n};\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { getL10nFallback, NullL10n };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_storage\").AnnotationStorage} AnnotationStorage */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          // We don't need to add dataId in the html object but it can\n          // be useful to know its value when writing printing tests:\n          // in this case, don't skip dataId to have its value.\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || (key !== \"href\" && key !== \"newWindow\")) {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure to overwrite any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n\n      const childHtml = child?.attributes?.xmlns\n        ? document.createElementNS(child.attributes.xmlns, name)\n        : document.createElement(name);\n\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  Util,\n} from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { InkAnnotationElement } from \"../annotation_layer.js\";\nimport { noContextMenu } from \"../display_utils.js\";\nimport { opacityToHex } from \"./tools.js\";\n\n/**\n * Basic draw editor in order to generate an Ink annotation.\n */\nclass InkEditor extends AnnotationEditor {\n  #baseHeight = 0;\n\n  #baseWidth = 0;\n\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n\n  #currentPath2D = new Path2D();\n\n  #disableEditing = false;\n\n  #hasSomethingToDraw = false;\n\n  #isCanvasInitialized = false;\n\n  #observer = null;\n\n  #realWidth = 0;\n\n  #realHeight = 0;\n\n  #requestFrameCallback = null;\n\n  static _defaultColor = null;\n\n  static _defaultOpacity = 1;\n\n  static _defaultThickness = 1;\n\n  static _type = \"ink\";\n\n  constructor(params) {\n    super({ ...params, name: \"inkEditor\" });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"],\n    });\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(InkEditor._defaultOpacity * 100),\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.INK_THICKNESS,\n        this.thickness || InkEditor._defaultThickness,\n      ],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        this.color ||\n          InkEditor._defaultColor ||\n          AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity)),\n      ],\n    ];\n  }\n\n  /**\n   * Update the thickness and make this action undoable.\n   * @param {number} thickness\n   */\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the opacity and make this action undoable.\n   * @param {number} opacity\n   */\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilding it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n\n    // Destroy the canvas.\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n\n    this.#observer.disconnect();\n    this.#observer = null;\n\n    super.remove();\n  }\n\n  setParent(parent) {\n    if (!this.parent && parent) {\n      // We've a parent hence the rescale will be handled thanks to the\n      // ResizeObserver.\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      // The editor is removed from the DOM, hence we handle the rescale thanks\n      // to the onScaleChanging callback.\n      // This way, it'll be saved/printed correctly.\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return (\n      this.paths.length === 0 ||\n      (this.paths.length === 1 && this.paths[0].length === 0)\n    );\n  }\n\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height],\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n\n  /**\n   * Set line styles.\n   */\n  #setStroke() {\n    const { ctx, color, opacity, thickness, parentScale, scaleFactor } = this;\n    ctx.lineWidth = (thickness * parentScale) / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${opacityToHex(opacity)}`;\n  }\n\n  /**\n   * Start to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||=\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n\n  /**\n   * Draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n\n    this.#makeBezierCurve(\n      path2D,\n      ...currentPath.at(-3),\n      ...currentPath.at(-2),\n      x,\n      y\n    );\n  }\n\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n\n  /**\n   * Stop to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n\n    this.#draw(x, y);\n    this.#endPath();\n\n    // Interpolate the path entered by the user with some\n    // Bezier's curves in order to have a smoother path and\n    // to reduce the data size used to draw it in the PDF.\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      // We have only one point finally.\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n\n    const { ctx } = this;\n    ctx.save();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      // In Chrome, the clip() method doesn't work as expected.\n      ctx.clearRect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.beginPath();\n      ctx.rect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.clip();\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n\n    ctx.restore();\n  }\n\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n\n    path2D.bezierCurveTo(\n      prevX + (2 * (x1 - prevX)) / 3,\n      prevY + (2 * (y1 - prevY)) / 3,\n      x3 + (2 * (x1 - x3)) / 3,\n      y3 + (2 * (y1 - y3)) / 3,\n      x3,\n      y3\n    );\n  }\n\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n\n      // The quadratic is: [[x0, y0], [x1, y1], [x3, y3]].\n      // Convert the quadratic to a cubic\n      // (see https://fontforge.org/docs/techref/bezier.html#converting-truetype-to-postscript)\n      const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n      const control2 = [x3 + (2 * (x1 - x3)) / 3, y3 + (2 * (y1 - y3)) / 3];\n\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n\n      [x0, y0] = [x3, y3];\n    }\n\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n\n    // The quadratic is: [[x0, y0], [x1, y1], [x2, y2]].\n    const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n    const control2 = [x2 + (2 * (x1 - x2)) / 3, y2 + (2 * (y1 - y2)) / 3];\n\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n\n  /**\n   * Redraw all the paths.\n   */\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n\n    const { canvas, ctx } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n\n  /**\n   * Commit the curves we have in this editor.\n   */\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n\n    super.commit();\n\n    this.isEditing = false;\n    this.disableEditMode();\n\n    // This editor must be on top of the main ink editor.\n    this.setInForeground();\n\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n\n    this.#fitToContent(/* firstTime = */ true);\n    this.makeResizable();\n\n    this.parent.addInkEditorIfNeeded(/* isCommitting = */ true);\n\n    // When commiting, the position of this editor is changed, hence we must\n    // move it to the right position in the DOM.\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n\n  /**\n   * onpointerdown callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n\n    // We want to draw on top of any other editors.\n    // Since it's the last child, there's no need to give it a higher z-index.\n    this.setInForeground();\n\n    event.preventDefault();\n\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointermove callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointerup callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n\n  /**\n   * onpointerleave callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n\n  /**\n   * End the drawing.\n   * @param {PointerEvent} event\n   */\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\n      \"pointerleave\",\n      this.#boundCanvasPointerleave\n    );\n    this.canvas.removeEventListener(\n      \"pointermove\",\n      this.#boundCanvasPointermove\n    );\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n\n    // Slight delay to avoid the context menu to appear (it can happen on a long\n    // tap with a pen).\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", noContextMenu);\n    }, 10);\n\n    this.#stopDrawing(event.offsetX, event.offsetY);\n\n    this.addToAnnotationStorage();\n\n    // Since the ink editor covers all of the page and we want to be able\n    // to select another editor, we just put this one in the background.\n    this.setInBackground();\n  }\n\n  /**\n   * Create the canvas element.\n   */\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink_canvas_aria_label\")\n      .then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink2_aria_label\")\n      .then(msg => this.div?.setAttribute(\"aria-label\", msg));\n\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n\n    this.#createCanvas();\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n\n    this.#createObserver();\n\n    return this.div;\n  }\n\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (\n      this.#realWidth === roundedWidth &&\n      this.#realHeight === roundedHeight\n    ) {\n      return;\n    }\n\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n\n    this.canvas.style.visibility = \"hidden\";\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.canvas.style.visibility = \"visible\";\n\n    // For any reason the dimensions couldn't be in percent but in pixels, hence\n    // we must fix them.\n    this.fixDims();\n  }\n\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n\n  /**\n   * Update the canvas transform.\n   */\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(\n      this.scaleFactor,\n      0,\n      0,\n      this.scaleFactor,\n      this.translationX * this.scaleFactor + padding,\n      this.translationY * this.scaleFactor + padding\n    );\n  }\n\n  /**\n   * Convert into a Path2D.\n   * @param {Array<Array<number>>} bezier\n   * @returns {Path2D}\n   */\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(\n        control1[0],\n        control1[1],\n        control2[0],\n        control2[1],\n        second[0],\n        second[1]\n      );\n    }\n    return path2D;\n  }\n\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  /**\n   * Transform and serialize the paths.\n   * @param {number} s - scale factor\n   * @param {number} tx - abscissa of the translation\n   * @param {number} ty - ordinate of the translation\n   * @param {Array<number>} rect - the bounding box of the annotation\n   */\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation),\n      });\n    }\n\n    return paths;\n  }\n\n  /**\n   * Get the bounding box containing all the paths.\n   * @returns {Array<number>}\n   */\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = Util.bezierBoundingBox(\n          ...first,\n          ...control1,\n          ...control2,\n          ...second\n        );\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n\n    return [xMin, yMin, xMax, yMax];\n  }\n\n  /**\n   * The bounding box is computed with null thickness, so we must take\n   * it into account for the display.\n   * It corresponds to the total padding, hence it should be divided by 2\n   * in order to have left/right paddings.\n   * @returns {number}\n   */\n  #getPadding() {\n    return this.#disableEditing\n      ? Math.ceil(this.thickness * this.parentScale)\n      : 0;\n  }\n\n  /**\n   * Set the div position and dimensions in order to fit to\n   * the bounding box of the contents.\n   * @returns {undefined}\n   */\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n\n    this.setAspectRatio(width, height);\n\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.#realWidth = width;\n    this.#realHeight = height;\n\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(\n      prevTranslationX - this.translationX - unscaledPadding,\n      prevTranslationY - this.translationY - unscaledPadding\n    );\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.thickness = data.thickness;\n    editor.color = Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n\n    const { paths, rect, rotation } = data;\n\n    for (let { bezier } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([\n          [p0, p1],\n          [p10, p11],\n          [p20, p21],\n          [p30, p31],\n        ]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const rect = this.getRect(0, 0);\n    const color = AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n\n    return {\n      annotationType: AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(\n        this.scaleFactor / this.parentScale,\n        this.translationX,\n        this.translationY,\n        rect\n      ),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n  }\n}\n\nexport { InkEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationEditorType, shadow } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { PixelsPerInch } from \"../display_utils.js\";\nimport { StampAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass StampEditor extends AnnotationEditor {\n  #bitmap = null;\n\n  #bitmapId = null;\n\n  #bitmapPromise = null;\n\n  #bitmapUrl = null;\n\n  #bitmapFile = null;\n\n  #canvas = null;\n\n  #observer = null;\n\n  #resizeTimeoutId = null;\n\n  #isSvg = false;\n\n  #hasBeenAddedInUndoStack = false;\n\n  static _type = \"stamp\";\n\n  constructor(params) {\n    super({ ...params, name: \"stampEditor\" });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n);\n  }\n\n  static get supportedTypes() {\n    // See https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\n    // to know which types are supported by the browser.\n    const types = [\n      \"apng\",\n      \"avif\",\n      \"bmp\",\n      \"gif\",\n      \"jpeg\",\n      \"png\",\n      \"svg+xml\",\n      \"webp\",\n      \"x-icon\",\n    ];\n    return shadow(\n      this,\n      \"supportedTypes\",\n      types.map(type => `image/${type}`)\n    );\n  }\n\n  static get supportedTypesStr() {\n    return shadow(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n\n  /** @inheritdoc */\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n\n  /** @inheritdoc */\n  static paste(item, parent) {\n    parent.pasteEditor(AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile(),\n    });\n  }\n\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager\n        .getFromId(this.#bitmapId)\n        .then(data => this.#getBitmapFetched(data, /* fromId = */ true))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromUrl(url)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromFile(file)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    const input = document.createElement(\"input\");\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      input.hidden = true;\n      input.id = \"stampEditorFileInput\";\n      document.body.append(input);\n    }\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(\n            input.files[0]\n          );\n          this.#getBitmapFetched(data);\n        }\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          input.remove();\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"TESTING\")) {\n      input.click();\n    }\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      // It's possible to have to rebuild an editor which is not on a visible\n      // page.\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !(\n      this.#bitmapPromise ||\n      this.#bitmap ||\n      this.#bitmapUrl ||\n      this.#bitmapFile\n    );\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return true;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.div.hidden = true;\n\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n    }\n\n    return this.div;\n  }\n\n  #createCanvas() {\n    const { div } = this;\n    let { width, height } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (\n      width > MAX_RATIO * pageWidth ||\n      height > MAX_RATIO * pageHeight\n    ) {\n      // If the the image is too big compared to the page dimensions\n      // (more than MAX_RATIO) then we scale it down.\n      const factor = Math.min(\n        (MAX_RATIO * pageWidth) / width,\n        (MAX_RATIO * pageHeight) / height\n      );\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(\n      (width * parentWidth) / pageWidth,\n      (height * parentHeight) / pageHeight\n    );\n\n    this._uiManager.enableWaiting(false);\n    const canvas = (this.#canvas = document.createElement(\"canvas\"));\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n\n    // There are multiple ways to add an image to the page, so here we just\n    // count the number of times an image is added to the page whatever the way\n    // is.\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\",\n        },\n      },\n    });\n    this.addAltTextButton();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    // When the user is resizing the editor we just use CSS to scale the image\n    // to avoid redrawing it too often.\n    // And once the user stops resizing the editor we redraw the image in\n    // rescaling it correctly (see this.#scaleBitmap).\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n\n  #scaleBitmap(width, height) {\n    const { width: bitmapWidth, height: bitmapHeight } = this.#bitmap;\n\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n\n      if (newWidth > 2 * width) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(newWidth / 2);\n        newWidth =\n          newWidth >= 16384\n            ? Math.floor(newWidth / 2) - 1\n            : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight =\n          newHeight >= 16384\n            ? Math.floor(newHeight / 2) - 1\n            : Math.ceil(newHeight / 2);\n      }\n\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        bitmap,\n        0,\n        0,\n        prevWidth,\n        prevHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      bitmap = offscreen.transferToImageBitmap();\n    }\n\n    return bitmap;\n  }\n\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || (canvas.width === width && canvas.height === height)) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg\n      ? this.#bitmap\n      : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(\n      bitmap,\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      0,\n      0,\n      width,\n      height\n    );\n  }\n\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      // We convert to a data url because it's sync and the url can live in the\n      // clipboard.\n      const canvas = document.createElement(\"canvas\");\n      ({ width: canvas.width, height: canvas.height } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n\n      return canvas.toDataURL();\n    }\n\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      // Multiply by PixelsPerInch.PDF_TO_CSS_UNITS in order to increase the\n      // image resolution when rasterizing it.\n      const width = Math.round(\n        this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const height = Math.round(\n        this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        this.#bitmap,\n        0,\n        0,\n        this.#bitmap.width,\n        this.#bitmap.height,\n        0,\n        0,\n        width,\n        height\n      );\n      return offscreen.transferToImageBitmap();\n    }\n\n    return structuredClone(this.#bitmap);\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const { rect, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const serialized = {\n      annotationType: AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // We don't know what's the final destination (this pdf or another one)\n      // of this annotation and the clipboard doesn't support ImageBitmaps,\n      // hence we serialize the bitmap to a data url.\n      serialized.bitmapUrl = this.#serializeBitmap(/* toUrl = */ true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n\n    const { decorative, altText } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = { type: \"Figure\", alt: altText };\n    }\n\n    if (context === null) {\n      return serialized;\n    }\n\n    context.stamps ||= new Map();\n    const area = this.#isSvg\n      ? (serialized.rect[2] - serialized.rect[0]) *\n        (serialized.rect[3] - serialized.rect[1])\n      : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      // We don't want to have multiple copies of the same bitmap in the\n      // annotationMap, hence we only add the bitmap the first time we meet it.\n      context.stamps.set(this.#bitmapId, { area, serialized });\n      serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n    } else if (this.#isSvg) {\n      // If we have multiple copies of the same svg but with different sizes,\n      // then we want to keep the biggest one.\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n      }\n    }\n    return serialized;\n  }\n}\n\nexport { StampEditor };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").OnProgressParameters} OnProgressParameters */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/text_layer\").TextLayerRenderTask} TextLayerRenderTask */\n\nimport {\n  AbortException,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationMode,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  FeatureTest,\n  ImageKind,\n  InvalidPDFException,\n  MissingPDFException,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  shadow,\n  UnexpectedResponseException,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  PDFDataRangeTransport,\n  PDFWorker,\n  SVGGraphics,\n  version,\n} from \"./display/api.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  noContextMenu,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n} from \"./display/display_utils.js\";\nimport { renderTextLayer, updateTextLayer } from \"./display/text_layer.js\";\nimport { AnnotationEditorLayer } from \"./display/editor/annotation_editor_layer.js\";\nimport { AnnotationEditorUIManager } from \"./display/editor/tools.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  AbortException,\n  AnnotationEditorLayer,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationEditorUIManager,\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DOMSVGFactory,\n  FeatureTest,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  ImageKind,\n  InvalidPDFException,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  MissingPDFException,\n  noContextMenu,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  PromiseCapability,\n  RenderingCancelledException,\n  renderTextLayer,\n  setLayerDimensions,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  updateTextLayer,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","{\"meetings\":[{\"week\":\"2023-09\",\"label\":\"28 February\",\"theme\":\"1 CRÔNICAS 20-22\",\"chairman\":\"Tom Hanks\",\"opening_song\":133,\"middle_song\":134,\"closing_song\":5,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Ajude os jovens a ser bem-sucedidos\"},\"bible_reading\":{\"reader\":\"Johnny Depp\",\"assignment\":\"1 Crônicas 20: 1-8\"},\"initial_call\":{\"student\":\"Keira Knightley\",\"assistant\":\"Margot Robbie\"},\"return_visit\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Jessica Alba\"},\"talk\":{\"student\":\"Robert Downey Jr.\",\"theme\":\"Jovens -- Vocês estão prontos para se batizar?\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Use os princípios bíblicos para ajudar seus filhos a ser bem-sucedidos\"},{\"time\":5,\"speaker\":\"Tom Hanks\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-10\",\"label\":\"7 March\",\"theme\":\"1 CRÔNICAS 23-26\",\"chairman\":\"Will Smith\",\"opening_song\":123,\"middle_song\":101,\"closing_song\":127,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"A adoração no templo fica bem organizada\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"1 Crônicas 23:21-32\"},\"initial_call\":{\"label\":\"Vídeo do convite da Celebração\"},\"return_visit\":{\"student\":\"Emma Stone\",\"assistant\":\"Anne Hathaway\",\"label\":\"Convite da Celebração\"},\"talk\":{\"student\":\"Johnny Depp\",\"theme\":\"Por que os cristãos estão organizados?\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Christian Bale\",\"theme\":\"Como ajudar quando acontece um desastre?\"},{\"time\":5,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"Campanha da Celebração -- Início no sábado  , 11 March\"}]},{\"week\":\"2023-11\",\"label\":\"14 March\",\"theme\":\"1 CRÔNICAS 27-29\",\"chairman\":\"Matt Damon\",\"opening_song\":133,\"middle_song\":4,\"closing_song\":45,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"Conselhos amorosos de um pai para seu filho\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"1 Crônicas 27: 1-15\"},\"initial_call\":{\"label\":\"Vídeo da revisita\"},\"return_visit\":{\"student\":\"Meryl Streep\",\"assistant\":\"Angelina Jolie\",\"label\":\"Revisita -- designação 1\"},\"bible_study\":{\"student\":\"Julia Roberts\",\"assistant\":\"Nicole Kidman\",\"label\":\"Revisita -- designação 2\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"},{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Realizações da Organização\"}]},{\"week\":\"2023-12\",\"label\":\"21 March\",\"theme\":\"2 CRÔNICAS 1-4\",\"chairman\":\"Christian Bale\",\"opening_song\":41,\"middle_song\":19,\"closing_song\":135,\"closing_prayer\":\"Dwayne Johnson\",\"spiritual_gems\":\"Will Smith\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"O rei Salomão toma uma decisão ruim\"},\"bible_reading\":{\"reader\":\"Tom Cruise\",\"assignment\":\"2 Crônicas 4:7-22\"},\"initial_call\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Sandra Bullock\",\"label\":\"Convite da Celebração\"},\"return_visit\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Keira Knightley\"},\"bible_study\":{\"student\":\"Cate Blanchett\",\"assistant\":\"Charlize Theron\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Dwayne Johnson\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"Você vai estar preparado para o dia mais importante do ano?\"}]},{\"week\":\"2023-13\",\"label\":\"28 March\",\"theme\":\"2 CRÔNICAS 5-7\",\"chairman\":\"Tom Hanks\",\"opening_song\":129,\"middle_song\":36,\"closing_song\":34,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Meu coração sempre estará nele\"},\"bible_reading\":{\"reader\":\"Kate Winslet\",\"assignment\":\"2 Crônicas 6:28-42\"},\"initial_call\":{\"student\":\"Natalie Portman\",\"assistant\":\"Reese Witherspoon\",\"label\":\"Convite da Celebração\"},\"return_visit\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Viola Davis\"},\"talk\":{\"student\":\"Brad Pitt\",\"theme\":\"E se por alguma circunstância excepcional não pudermos assistir à Celebração?\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Will Smith\",\"theme\":\"Proteja o seu coração\"},{\"time\":5,\"speaker\":\"Matt Damon\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-14\",\"label\":\"11 April\",\"theme\":\"2 CRÔNICAS 8-9\",\"chairman\":\"Christian Bale\",\"opening_song\":88,\"middle_song\":98,\"closing_song\":79,\"closing_prayer\":\"Morgan Freeman\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Ela dava valor à sabedoria\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"2 Crônicas 8:1-16\"},\"initial_call\":{\"label\":\"Vídeo da primeira conversa\"},\"return_visit\":{\"student\":\"Amy Adams\",\"assistant\":\"Helen Mirren\",\"label\":\"Primeira conversa\"},\"bible_study\":{\"student\":\"Julianne Moore\",\"assistant\":\"Jessica Alba\"},\"service_talk\":{\"speaker\":\"Morgan Freeman\",\"theme\":\"Discurso de serviço: Permaneçam “bem estabelecidos na verdade”!\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) — n.º 2\"}]},{\"week\":\"2023-15\",\"label\":\"18 April\",\"theme\":\"2 CRÔNICAS 10-12\",\"chairman\":\"Matt Damon\",\"opening_song\":103,\"middle_song\":79,\"closing_song\":121,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Conselhos sábios podem ajudar você\"},\"bible_reading\":{\"reader\":\"Robert Downey Jr.\",\"assignment\":\"2 Crônicas 10:1-15\"},\"initial_call\":{\"student\":\"Julia Roberts\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"student\":\"Anne Hathaway\",\"assistant\":\"Saoirse Ronan\"},\"talk\":{\"student\":\"Tom Cruise\",\"theme\":\"Treine seu estudante da Bíblia quando ele pedir um conselho\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Tom Hanks\",\"theme\":\"Como usar os vídeos que falam sobre o estudo da Bíblia?\"},{\"time\":10,\"speaker\":\"Matt Damon\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-16\",\"label\":\"25 April\",\"theme\":\"2 CRÔNICAS 13-16\",\"chairman\":\"Tom Hanks\",\"opening_song\":3,\"middle_song\":94,\"closing_song\":39,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"Quando devemos confiar em Jeová?\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"2 Crônicas 14:1-15\"},\"initial_call\":{\"student\":\"Viola Davis\",\"assistant\":\"Emma Stone\"},\"return_visit\":{\"student\":\"Charlize Theron\",\"assistant\":\"Cate Blanchett\"},\"bible_study\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Meryl Streep\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"Decisões que mostram confiança em Jeová\"}]},{\"week\":\"2023-17\",\"label\":\"2 May\",\"message\":\"Não há reunião por causa da <p>Assembleia de Circuito</p> Amigos da Paz\"},{\"week\":\"2023-18\",\"label\":\"9 May\",\"theme\":\"2 CRÔNICAS 20-21\",\"chairman\":\"Will Smith\",\"opening_song\":118,\"middle_song\":119,\"closing_song\":\"Congresso de 2023\",\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"Tenham fé em Jeová, seu Deus\"},\"bible_reading\":{\"reader\":\"Kate Winslet\",\"assignment\":\"2 Crô. 20:20-30\"},\"initial_call\":{\"label\":\"Vídeo da revisita\"},\"return_visit\":{\"student\":\"Meryl Streep\",\"assistant\":\"Sandra Bullock\"},\"bible_study\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Emma Watson\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Tom Cruise\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Matt Damon\",\"theme\":\"Você está preparado para uma crise econômica?\"}]},{\"week\":\"2023-19\",\"label\":\"16 May\",\"theme\":\"2 CRÔNICAS 22-24\",\"chairman\":\"Christian Bale\",\"opening_song\":73,\"middle_song\":55,\"closing_song\":37,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"Jeová recompensa atos de coragem\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"2 Crô. 22:1-12\"},\"initial_call\":{\"student\":\"Keira Knightley\",\"assistant\":\"Anne Hathaway\"},\"return_visit\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Nicole Kidman\"},\"talk\":{\"student\":\"Brad Pitt\",\"theme\":\"O espírito de Jeová vai ajudar você a ter coragem.\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) — n.º 3\"}]},{\"week\":\"2023-20\",\"label\":\"23 May\",\"theme\":\"2 CRÔNICAS 25-27\",\"chairman\":\"Matt Damon\",\"opening_song\":80,\"middle_song\":136,\"closing_song\":51,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"Jeová pode lhe dar muito mais do que isso\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"2 Crô. 25:1-13\"},\"initial_call\":{\"student\":\"Margot Robbie\",\"assistant\":\"Viola Davis\"},\"return_visit\":{\"student\":\"Cate Blanchett\",\"assistant\":\"Jennifer Lawrence\"},\"bible_study\":{\"student\":\"Julianne Moore\",\"assistant\":\"Emma Stone\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"Faça Qualquer Sacrifício pela Vida Eterna (Mar. 10:29, 30)\"}]},{\"week\":\"2023-21\",\"label\":\"30 May\",\"theme\":\"2 CRÔNICAS 28-29\",\"chairman\":\"Tom Hanks\",\"opening_song\":54,\"middle_song\":56,\"closing_song\":86,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"Você pode servir a Jeová mesmo sem o exemplo de seus pais”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"2 Crô. 28:1-11\"},\"initial_call\":{\"student\":\"Amy Adams\",\"assistant\":\"Jessica Alba\"},\"return_visit\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Halle Berry\"},\"bible_study\":{\"student\":\"Saoirse Ronan\",\"assistant\":\"Julia Roberts\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":8,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"“Jeová é o ‘pai dos órfãos’”\"},{\"time\":7,\"speaker\":\"Will Smith\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-22\",\"label\":\"6 June\",\"theme\":\"2 CRÔNICAS 30-31\",\"chairman\":\"Will Smith\",\"opening_song\":87,\"middle_song\":74,\"closing_song\":115,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"“É bom estarmos com nossos irmãos”\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"2 Crô. 31:11-21\"},\"initial_call\":{\"student\":\"Meryl Streep\",\"assistant\":\"Saoirse Ronan\"},\"return_visit\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Scarlett Johansson\"},\"talk\":{\"student\":\"Johnny Depp\",\"theme\":\"Louve a Jeová com seus comentários nas reuniões\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\"},\"living_as_christians\":[{\"time\":5,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"Torne-se Amigo de Jeová — Prepare Seu Comentário\"},{\"time\":10,\"speaker\":\"Will Smith\",\"theme\":\"Realizações da organização\"}]},{\"week\":\"2023-23\",\"label\":\"13 June\",\"theme\":\"2 CRÔNICAS 32-33\",\"chairman\":\"Christian Bale\",\"opening_song\":103,\"middle_song\":36,\"closing_song\":90,\"closing_prayer\":\"Robert Downey Jr.\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“Fortaleça seus irmãos em tempos difíceis”\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"2 Crô. 32:1-15\"},\"initial_call\":{\"student\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Keira Knightley\"},\"bible_study\":{\"student\":\"Jennifer Aniston\",\"assistant\":\"Charlize Theron\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"living_as_christians\":[{\"time\":10,\"speaker\":\"Christian Bale\",\"theme\":\"Boletim do Corpo Governante (2023) — n.º 4\"},{\"time\":5,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-24\",\"label\":\"20 June\",\"theme\":\"2 CRÔNICAS 34-36\",\"chairman\":\"Matt Damon\",\"opening_song\":97,\"middle_song\":96,\"closing_song\":117,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"“Você está aplicando tudo que aprende da Palavra de Deus?”\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"2 Crô. 35:1-14\"},\"initial_call\":{\"student\":\"Halle Berry\",\"assistant\":\"Amy Adams\"},\"return_visit\":{\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Emma Watson\"},\"talk\":{\"student\":\"Tom Cruise\",\"theme\":\"Use o poder da Palavra de Deus na pregação\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Matt Damon\",\"theme\":\"“Você está usando bem a Bíblia em áudio?”\"}]},{\"week\":\"2023-25\",\"label\":\"27 June\",\"theme\":\"ESDRAS 1-3\",\"chairman\":\"Will Smith\",\"opening_song\":75,\"middle_song\":58,\"closing_song\":132,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Denzel Washington\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"“Deixe que Jeová use você”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Esd. 2:58-70\"},\"initial_call\":{\"student\":\"Anne Hathaway|Nicole Kidman\",\"assistant\":\"Nicole Kidman|Jennifer Aniston\"},\"return_visit\":{\"student\":\"Jessica Alba\",\"assistant\":\"Viola Davis\"},\"bible_study\":{\"student\":\"Julia Roberts\",\"assistant\":\"Julianne Moore\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Tom Cruise\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"“Tenha alegria ao iniciar conversas”\"}]},{\"week\":\"2023-26\",\"label\":\"4 July\",\"theme\":\"ESDRAS 4-6\",\"chairman\":\"Tom Hanks\",\"opening_song\":148,\"middle_song\":7,\"closing_song\":130,\"closing_prayer\":\"Tom Cruise\",\"spiritual_gems\":\"Will Smith\",\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“Não interfiram nas obras dessa casa”\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Esdras 4:8-24\"},\"initial_call\":{\"label\":\"Vídeo da primeira conversa\"},\"return_visit\":{\"student\":\"Emma Stone\",\"assistant\":\"Michelle Pfeiffer\",\"label\":\"Primeira conversa — designação 1\"},\"bible_study\":{\"student\":\"Meryl Streep\",\"assistant\":\"Margot Robbie|Amy Adams\",\"label\":\"Primeira conversa — designação 2\"},\"congregation_bible_study\":{\"conductor\":\"Matt Damon\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Tom Hanks\",\"theme\":\"“Nós ‘defendemos e estabelecemos legalmente as boas novas’”\"}]},{\"week\":\"2023-27\",\"label\":\"11 July\",\"theme\":\"ESDRAS 7-8\",\"chairman\":\"Christian Bale\",\"opening_song\":82,\"middle_song\":59,\"closing_song\":134,\"closing_prayer\":\"Johnny Depp\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"“O modo de agir de Esdras deu honra a Jeová”\"},\"bible_reading\":{\"reader\":\"George Clooney|Johnny Depp\",\"assignment\":\"Esdras 8:21-36\"},\"initial_call\":{\"label\":\"Vídeo da revisita\"},\"return_visit\":{\"student\":\"Saoirse Ronan|Jennifer Aniston\",\"assistant\":\"Jennifer Aniston|Viola Davis\",\"label\":\"Revisita — designação 1\"},\"bible_study\":{\"student\":\"Scarlett Johansson\",\"assistant\":\"Halle Berry\",\"label\":\"Revisita — designação 2\"},\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Christian Bale\",\"theme\":\"Necessidades locais\"}]},{\"week\":\"2023-28\",\"label\":\"18 July\",\"theme\":\"ESDRAS 9-10\",\"chairman\":\"Matt Damon\",\"opening_song\":89,\"middle_song\":150,\"closing_song\":133,\"closing_prayer\":\"Brad Pitt\",\"spiritual_gems\":\"Christian Bale\",\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"“A desobediência causa sofrimento”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Esdras 9:1-9\"},\"initial_call\":{\"student\":\"Reese Witherspoon\",\"assistant\":\"Nicole Kidman\"},\"return_visit\":{\"student\":\"Emma Watson\",\"assistant\":\"Jessica Chastain\"},\"bible_study\":{\"student\":\"Keira Knightley|Brad Pitt\",\"assistant\":\"Saoirse Ronan|Harrison Ford\"},\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"A Obediência nos Protege (2 Tes. 1:8)\"}]},{\"week\":\"2023-29\",\"label\":\"25 July\",\"theme\":\"NEEMIAS 1-2\",\"chairman\":\"Will Smith\",\"opening_song\":47,\"middle_song\":44,\"closing_song\":102,\"closing_prayer\":\"Leonardo DiCaprio\",\"spiritual_gems\":\"Matt Damon\",\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"“Orei imediatamente”\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Neemias 2:11-20\"},\"initial_call\":{\"student\":\"Jennifer Lawrence\",\"assistant\":\"Helen Mirren|Jessica Chastain\"},\"return_visit\":{\"student\":\"Julia Roberts\",\"assistant\":\"Anne Hathaway\"},\"bible_study\":{\"student\":\"Viola Davis\",\"assistant\":\"Charlize Theron|Scarlett Johansson\"},\"congregation_bible_study\":{\"conductor\":\"Christian Bale|Matt Damon\",\"reader\":\"Brad Pitt\"},\"living_as_christians\":[{\"time\":15,\"speaker\":\"Will Smith\",\"theme\":\"Torne-se Amigo de Jeová — Será Que Jeová Responde Nossas Orações?\"}]},{\"week\":\"2023-30\",\"label\":\"1 August\",\"message\":\"Não há reunião devido ao <p>Congresso regional de 2023</p> Seja Paciente\"},{\"week\":\"2023-31\",\"label\":\"8 August\",\"theme\":\"NEEMIAS 5-7\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":17,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"“Neemias queria servir, e não ser servido”\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Nee. 5:1-13\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Keira Knightley\",\"assistant\":\"Jessica Alba\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Amy Adams\",\"assistant\":\"Meryl Streep\"},\"middle_song\":90,\"living_as_christians\":[{\"theme\":\"Boletim do Corpo Governante (2023) - n.º 5\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Denzel Washington\"},\"closing_song\":35,\"closing_prayer\":\"Tom Cruise\",\"talk\":{\"theme\":\"Evangelizadores bem-sucedidos ajudam uns aos outros.\",\"student\":\"Brad Pitt|Johnny Depp\"}},{\"week\":\"2023-32\",\"label\":\"15 August\",\"theme\":\"NEEMIAS 8-9\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":110,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“A alegria que vem de Jeová é a fortaleza de vocês”\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"Nee. 8:1-12\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Emma Stone\"},\"middle_song\":132,\"living_as_christians\":[{\"theme\":\"“Você pode ajudar sua família a ter mais alegria”\",\"time\":15,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":123,\"closing_prayer\":\"Denzel Washington\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"student\":\"Julianne Moore\",\"assistant\":\"Margot Robbie\"}},{\"week\":\"2023-33\",\"label\":\"22 August\",\"theme\":\"NEEMIAS 10-11\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":37,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"“Eles fizeram sacrifícios para servir a Jeová”\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Nee. 10:28-39\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Emma Watson\",\"assistant\":\"Jennifer Aniston\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Jessica Chastain|Amy Adams\",\"assistant\":\"Scarlett Johansson\"},\"middle_song\":81,\"living_as_christians\":[{\"theme\":\"“Quais são os seus alvos para o novo ano de serviço?”\",\"time\":10,\"speaker\":\"Will Smith\"},{\"theme\":\"“Campanha especial em setembro para divulgar o Reino de Deus!”\",\"time\":5,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Tom Cruise\"},\"closing_song\":92,\"closing_prayer\":\"Johnny Depp\",\"talk\":{\"theme\":\"Sacrifícios que agradam a Deus nos nossos dias.\",\"student\":\"Johnny Depp|Brad Pitt\"}},{\"week\":\"2023-34\",\"label\":\"29 August\",\"theme\":\"NEEMIAS 12-13\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":34,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"“Seja leal a Jeová ao escolher seus amigos”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Nee. 12:27-39\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"student\":\"Anne Hathaway\",\"assistant\":\"Julia Roberts\"},\"return_visit\":{\"label\":\"Revisita\",\"student\":\"Jennifer Lawrence\",\"assistant\":\"Nicole Kidman\"},\"middle_song\":108,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Matt Damon\"},{\"theme\":\"“Imite o amor leal de Jeová”\",\"time\":10,\"speaker\":\"Denzel Washington\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":84,\"closing_prayer\":\"Brad Pitt\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Viola Davis\"}},{\"week\":\"2023-35\",\"label\":\"5 September\",\"theme\":\"ESTER 1-2\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":137,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"“Seja modesto assim como Ester”\"},\"bible_reading\":{\"reader\":\"Tom Cruise\",\"assignment\":\"Ester 1:13-22\"},\"initial_call\":{\"label\":\"Vídeo da primeira conversa\"},\"return_visit\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Jessica Alba\",\"assistant\":\"Saoirse Ronan\"},\"middle_song\":106,\"living_as_christians\":[{\"theme\":\"O Que Outros Jovens Dizem — Aparência\",\"time\":5,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Realizações da organização\",\"time\":10,\"speaker\":\"Tom Hanks\"}],\"service_talk\":{\"speaker\":\"Morgan Freeman\",\"theme\":\"Discurso de serviço: Esteja pronto para falar das “boas novas de paz”\"},\"closing_song\":101,\"closing_prayer\":\"Morgan Freeman\",\"talk\":{\"theme\":\"Ajuda de Jesus e dos anjos.\",\"student\":\"Johnny Depp\"}},{\"week\":\"2023-36\",\"label\":\"12 September\",\"theme\":\"ESTER 3-5\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":85,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"“Ajude outros a atingir o seu potencial”\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Ester 3:1-12\"},\"initial_call\":{\"label\":\"Vídeo da revisita\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 16\",\"student\":\"Emma Stone\",\"assistant\":\"Keira Knightley\"},\"middle_song\":65,\"living_as_christians\":[{\"theme\":\"Torne-se Amigo de Jeová — Ester Foi Corajosa\",\"time\":5,\"speaker\":\"Will Smith\"},{\"theme\":\"Necessidades locais\",\"time\":10,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Johnny Depp\"},\"closing_song\":125,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 15\",\"student\":\"Meryl Streep\",\"assistant\":\"Julianne Moore\"}},{\"week\":\"2023-37\",\"label\":\"19 September\",\"theme\":\"ESTER 6-8\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":115,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“Uma lição de boa comunicação”\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Ester 8:9-17\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 3\",\"student\":\"Margot Robbie\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 12\",\"student\":\"Jessica Chastain\",\"assistant\":\"Michelle Pfeiffer\"},\"middle_song\":148,\"living_as_christians\":[{\"theme\":\"“Confie em Jeová ao enfrentar bullying”\",\"time\":15,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Brad Pitt\"},\"closing_song\":124,\"closing_prayer\":\"Dwayne Johnson\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: ensine de modo simples.\",\"student\":\"Tom Cruise\"}},{\"week\":\"2023-38\",\"label\":\"26 September\",\"theme\":\"ESTER 9-10\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":102,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"“Ele usou sua autoridade para ajudar o povo de Deus”\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"Ester 9:1-14\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 6\",\"student\":\"Jennifer Aniston\",\"assistant\":\"Amy Adams\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 13\",\"student\":\"Scarlett Johansson\",\"assistant\":\"Emma Watson\"},\"middle_song\":117,\"living_as_christians\":[{\"theme\":\"“Pastores que trabalham para o bem do povo de Jeová”\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":55,\"closing_prayer\":\"Tom Cruise\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 19\",\"student\":\"Viola Davis\",\"assistant\":\"Julia Roberts\"}},{\"week\":\"2023-39\",\"label\":\"3 October\",\"theme\":\"JÓ 1-3\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":141,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"“Continue a mostrar o quanto você ama a Jeová”\"},\"bible_reading\":{\"reader\":\"Marlon Brando\",\"assignment\":\"Jó 3:1-26\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 9\",\"student\":\"Jennifer Lawrence\",\"assistant\":\"Elizabeth Olsen\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 20\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Nicole Kidman\"},\"middle_song\":21,\"living_as_christians\":[{\"theme\":\"Eu Achava Que Estava Fazendo Tudo Certo\",\"time\":10,\"speaker\":\"Christian Bale\"},{\"theme\":\"“Use a página inicial do JW.ORG em seu ministério”\",\"time\":5,\"speaker\":\"Dwayne Johnson\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":129,\"closing_prayer\":\"Denzel Washington\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: seja realista e humilde.\",\"student\":\"Robert Downey Jr.\"}},{\"week\":\"2023-40\",\"label\":\"10 October\",\"theme\":\"JÓ 4-5\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Matt Damon\",\"opening_song\":121,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"“Cuidado com a desinformação”\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Jó 5:1-27\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 4\",\"student\":\"Amy Adams\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 15\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Anne Hathaway\"},\"middle_song\":78,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":38,\"closing_prayer\":\"Johnny Depp\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 16\",\"student\":\"Emma Stone\",\"assistant\":\"Jessica Alba\"}},{\"week\":\"2023-41\",\"label\":\"17 October\",\"theme\":\"JÓ 6-7\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":33,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"“Quando a vida parece insuportável”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Jó 6:1-21\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 7\",\"student\":\"Keira Knightley|Meryl Streep\",\"assistant\":\"Meryl Streep|Emma Stone\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Julianne Moore\",\"assistant\":\"Michelle Pfeiffer\"},\"middle_song\":144,\"living_as_christians\":[{\"theme\":\"“Jeová salva os que têm espírito esmagado”\",\"time\":15,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\"},\"closing_song\":143,\"closing_prayer\":\"Brad Pitt\",\"talk\":{\"theme\":\"Seja um bom instrutor como Tiago: use ilustrações que toquem o coração.\",\"student\":\"Brad Pitt\"}},{\"week\":\"2023-42\",\"label\":\"24 October\",\"theme\":\"JÓ 8-10\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Christian Bale\",\"opening_song\":107,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“O amor leal de Deus nos protege das mentiras de Satanás”\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Jó 9:20-35\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 17\",\"student\":\"Jennifer Aniston\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 3\",\"student\":\"Scarlett Johansson\",\"assistant\":\"Margot Robbie\"},\"middle_song\":109,\"living_as_christians\":[{\"theme\":\"“Ajude pessoas não religiosas a conhecer o Criador”\",\"time\":10,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":64,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 14\",\"student\":\"Johnny Depp\",\"assistant\":\"Harrison Ford\"}},{\"week\":\"2023-43\",\"label\":\"31 October\",\"theme\":\"JÓ 11-12\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":87,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"“Três modos de ter sabedoria e se beneficiar dela”\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Jó 12:1-25\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Viola Davis|Meryl Streep\",\"assistant\":\"Emma Watson\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 13\",\"student\":\"Robert Downey Jr.\",\"assistant\":\"Tom Cruise\"},\"middle_song\":135,\"living_as_christians\":[{\"theme\":\"“Pais: ajudem seus filhos a ter a sabedoria que vem de Deus”\",\"time\":15,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":3,\"closing_prayer\":\"Dwayne Johnson\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 19\",\"student\":\"Jessica Chastain\",\"assistant\":\"Julia Roberts\"}},{\"week\":\"2023-44\",\"label\":\"7 November\",\"theme\":\"JÓ 13-14\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Matt Damon\",\"opening_song\":151,\"opening_talk\":{\"speaker\":\"Leonardo DiCaprio\",\"theme\":\"“Quando um homem morre, pode ele viver novamente?”\"},\"bible_reading\":{\"reader\":\"George Clooney\",\"assignment\":\"Jó 13:1-28\"},\"initial_call\":{\"label\":\"Vídeo da primeira conversa\"},\"return_visit\":{\"label\":\"Primeira conversa\",\"advice\":\"th 2\",\"student\":\"Nicole Kidman\",\"assistant\":\"Amy Adams\"},\"middle_song\":127,\"living_as_christians\":[{\"theme\":\"“‘Cada um de vocês deve pôr algo à parte’”\",\"time\":15,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":76,\"closing_prayer\":\"Tom Cruise\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 19\",\"student\":\"Reese Witherspoon\",\"assistant\":\"Jennifer Lawrence|Meryl Streep\"}},{\"week\":\"2023-45\",\"label\":\"14 November\",\"theme\":\"JÓ 15-17\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Denzel Washington\",\"opening_song\":90,\"opening_talk\":{\"speaker\":\"Christian Bale\",\"theme\":\"“Não imite Elifaz quando for consolar alguém”\"},\"bible_reading\":{\"reader\":\"Robert Downey Jr.\",\"assignment\":\"Jó 17:1-16\"},\"initial_call\":{\"label\":\"Vídeo da revisita\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Saoirse Ronan\",\"assistant\":\"Elizabeth Olsen\"},\"middle_song\":96,\"living_as_christians\":[{\"theme\":\"Necessidades locais\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"closing_song\":118,\"closing_prayer\":\"Denzel Washington\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 8\",\"student\":\"Marlon Brando\",\"assistant\":\"Hugh Jackman\"}},{\"week\":\"2023-46\",\"label\":\"21 November\",\"theme\":\"JÓ 18-19\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Leonardo DiCaprio\",\"opening_song\":44,\"opening_talk\":{\"speaker\":\"Dwayne Johnson\",\"theme\":\"“Nunca abandone seus irmãos”\"},\"bible_reading\":{\"reader\":\"Harrison Ford\",\"assignment\":\"Jó 18:1-21\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 12\",\"student\":\"Amy Adams\",\"assistant\":\"Anne Hathaway\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 3\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Keira Knightley\"},\"middle_song\":90,\"living_as_christians\":[{\"theme\":\"Torne-se Amigo de Jeová — Ajude os Outros\",\"time\":5,\"speaker\":\"Matt Damon\"},{\"theme\":\"“Um programa de pastoreio para consolar os que servem em Betel”\",\"time\":10,\"speaker\":\"Denzel Washington\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":63,\"closing_prayer\":\"Johnny Depp\",\"talk\":{\"theme\":\"Incentive seu estudante a fazer amigos na congregação.\",\"student\":\"Johnny Depp\"}},{\"week\":\"2023-47\",\"label\":\"28 November\",\"message\":\"Não há reunião devido a <p>Assembleia de Circuito de 2023</p> ‘Espere Ansiosamente por Jeová’!\"},{\"week\":\"2023-48\",\"label\":\"5 December\",\"theme\":\"JÓ 22-24\",\"chairman\":\"Christian Bale\",\"spiritual_gems\":\"Tom Hanks\",\"opening_song\":49,\"opening_talk\":{\"speaker\":\"Will Smith\",\"theme\":\"“‘Pode um homem ser útil para Deus?’”\"},\"bible_reading\":{\"reader\":\"Chris Hemsworth\",\"assignment\":\"Jó 22:1-22\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 11\",\"student\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 2\",\"student\":\"Emma Stone\",\"assistant\":\"Margot Robbie\"},\"middle_song\":134,\"living_as_christians\":[{\"theme\":\"“Pais, ensinem seus filhos a alegrar o coração de Deus”\",\"time\":10,\"speaker\":\"Dwayne Johnson\"},{\"theme\":\"Necessidades locais\",\"time\":5,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":25,\"closing_prayer\":\"Brad Pitt\",\"talk\":{\"theme\":\"Uma atitude positiva nos ajuda a continuar úteis para Jeová.\",\"student\":\"Marlon Brando\"}},{\"week\":\"2023-49\",\"label\":\"12 December\",\"theme\":\"JÓ 25-27\",\"chairman\":\"Tom Hanks\",\"spiritual_gems\":\"Will Smith\",\"opening_song\":34,\"opening_talk\":{\"speaker\":\"Matt Damon\",\"theme\":\"“A integridade não exige perfeição”\"},\"bible_reading\":{\"reader\":\"Al Pacino\",\"assignment\":\"Jó 25:1–26:14\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Julianne Moore\",\"assistant\":\"Halle Berry\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 17\",\"student\":\"Julia Roberts\",\"assistant\":\"Scarlett Johansson\"},\"middle_song\":45,\"living_as_christians\":[{\"theme\":\"“A integridade e os nossos pensamentos”\",\"time\":5,\"speaker\":\"Tom Hanks\"},{\"theme\":\"Realizações da organização\",\"time\":10,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"conductor\":\"Christian Bale\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":57,\"closing_prayer\":\"Leonardo DiCaprio\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 15\",\"student\":\"Emma Watson\",\"assistant\":\"Jennifer Aniston\"}},{\"week\":\"2023-50\",\"label\":\"19 December\",\"theme\":\"JÓ 28-29\",\"chairman\":\"Will Smith\",\"spiritual_gems\":\"Christian Bale\",\"opening_song\":39,\"opening_talk\":{\"speaker\":\"Denzel Washington\",\"theme\":\"“Você tem uma boa reputação assim como Jó?”\"},\"bible_reading\":{\"reader\":\"George Clooney|Robert Downey Jr.\",\"assignment\":\"Jó 28:1-28\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 3\",\"student\":\"Jessica Alba|Jennifer Aniston\",\"assistant\":\"Jennifer Lawrence\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 17\",\"student\":\"Meryl Streep\",\"assistant\":\"Viola Davis\"},\"middle_song\":121,\"living_as_christians\":[{\"theme\":\"“Como posso contribuir para nossa boa reputação?”\",\"time\":15,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":50,\"closing_prayer\":\"Dwayne Johnson\",\"bible_study\":{\"label\":\"Estudo bíblico\",\"advice\":\"th 6\",\"student\":\"Keira Knightley|Amy Adams\",\"assistant\":\"Elizabeth Olsen\"}},{\"week\":\"2023-51\",\"label\":\"26 December\",\"theme\":\"JÓ 30-31\",\"chairman\":\"Matt Damon\",\"spiritual_gems\":\"Dwayne Johnson\",\"opening_song\":28,\"opening_talk\":{\"speaker\":\"Tom Hanks\",\"theme\":\"“Como Jó manteve a castidade”\"},\"bible_reading\":{\"reader\":\"Hugh Jackman\",\"assignment\":\"Jó 31:15-40\"},\"initial_call\":{\"label\":\"Primeira conversa\",\"advice\":\"th 1\",\"student\":\"Michelle Pfeiffer\",\"assistant\":\"Nicole Kidman\"},\"return_visit\":{\"label\":\"Revisita\",\"advice\":\"th 11\",\"student\":\"Robert Downey Jr.\",\"assistant\":\"Brad Pitt\"},\"middle_song\":36,\"living_as_christians\":[{\"theme\":\"“Por que a pornografia é ruim?”\",\"time\":7,\"speaker\":\"Matt Damon\"},{\"theme\":\"Necessidades locais\",\"time\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"conductor\":\"Will Smith\",\"reader\":\"Denzel Washington\"},\"closing_song\":74,\"closing_prayer\":\"Tom Cruise\",\"talk\":{\"theme\":\"Como eu posso explicar o que a Bíblia diz sobre o homossexualismo?\",\"student\":\"Tom Cruise\"}},{\"week\":\"2024-01\",\"chairman\":\"Christian Bale\",\"label\":\"8 January\",\"theme\":\"JÓ 32-33\",\"opening_song\":102,\"opening_talk\":{\"time\":10,\"title\":\"Console os que estão ansiosos\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 12\",\"assignment\":\"Jó 32:1-22\",\"reader\":\"Brad Pitt\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Interesse pelas pessoas — O que Jesus fez\",\"number\":4,\"assigned\":\"Denzel Washington\"},{\"time\":8,\"title\":\"Interesse pelas pessoas — Imite Jesus\",\"number\":5,\"assigned\":\"Will Smith\"}],\"middle_song\":116,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":7,\"conductor\":\"Tom Hanks\",\"reader\":\"Will Smith\"},\"closing_song\":54,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024-02\",\"chairman\":\"Will Smith\",\"label\":\"9 January\",\"theme\":\"JÓ 34-35\",\"opening_song\":30,\"opening_talk\":{\"time\":10,\"title\":\"Quando injustiças acontecem\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 10\",\"assignment\":\"Jó 35:1-16\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 10 ponto 3\",\"assigned\":\"Anne Hathaway\",\"assistant\":\"Saoirse Ronan\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 1 ponto 4\",\"assigned\":\"Amy Adams\",\"assistant\":\"Reese Witherspoon\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":6,\"lesson\":\"lmd lição 11 ponto 3\",\"assigned\":\"Emma Stone\",\"assistant\":\"Jessica Chastain\"}],\"middle_song\":58,\"living_as_christians\":[{\"time\":15,\"title\":\"Você gosta de pregar a Palavra de modo informal?\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Tom Cruise\"},\"closing_song\":138,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024-03\",\"chairman\":\"Tom Hanks\",\"label\":\"16 January\",\"theme\":\"JÓ 36-37\",\"opening_song\":147,\"opening_talk\":{\"time\":10,\"title\":\"Por que você pode confiar na promessa de Deus de nos dar vida eterna?\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 2\",\"assignment\":\"Jó 36:1-21\",\"reader\":\"George Clooney\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 3 ponto 3\",\"assigned\":\"Scarlett Johansson\",\"assistant\":\"Halle Berry\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 2 ponto 5\",\"assigned\":\"Emma Watson\",\"assistant\":\"Julia Roberts\"},{\"time\":5,\"title\":\"Explicando suas crenças\",\"number\":6,\"lesson\":\"th lição 18\",\"theme\":\"Por que as Testemunhas de Jeová foram perseguidas durante o Holocausto?\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":49,\"living_as_christians\":[{\"time\":15,\"title\":\"Prepare-se para situações que envolvem cuidados médicos ou cirúrgicos\",\"number\":7,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Johnny Depp\"},\"closing_song\":67,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024-04\",\"chairman\":\"Matt Damon\",\"label\":\"23 January\",\"theme\":\"JÓ 38-39\",\"opening_song\":11,\"opening_talk\":{\"time\":10,\"title\":\"Você tira tempo para observar a criação?\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 5\",\"assignment\":\"Jó 39:1-22\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 2 ponto 3\",\"assigned\":\"Margot Robbie\",\"assistant\":\"Jennifer Aniston\"},{\"time\":5,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 9 ponto 3\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Keira Knightley\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 16\",\"theme\":\"Os acontecimentos mundiais e a atitude das pessoas indicam que uma mudança está próxima.\",\"assigned\":\"Johnny Depp\"}],\"middle_song\":111,\"living_as_christians\":[{\"time\":15,\"title\":\"Observar a criação nos ajuda a não nos concentrar em nós mesmos\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Will Smith\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":54,\"closing_prayer\":\"Christian Bale\"},{\"week\":\"2024-05\",\"chairman\":\"Christian Bale\",\"label\":\"30 January\",\"theme\":\"JÓ 40-42\",\"opening_song\":124,\"opening_talk\":{\"time\":10,\"title\":\"O que aprendemos do que Jó passou?\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Jó 42:1-17\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 5 ponto 3\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Meryl Streep\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":5,\"lesson\":\"lmd lição 11 ponto 4\",\"assigned\":\"Viola Davis\",\"assistant\":\"Elizabeth Olsen\"},{\"time\":4,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 13\",\"theme\":\"A Terra nunca será destruída.\",\"assigned\":\"Marlon Brando\"}],\"middle_song\":108,\"living_as_christians\":[{\"time\":15,\"title\":\"Ajude outros a sentir o amor de Jeová\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":126,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/06\",\"label\":\"6 February\",\"theme\":\"SALMOS 1-4\",\"chairman\":\"Tom Hanks\",\"opening_song\":150,\"opening_talk\":{\"time\":10,\"title\":\"Apoie o Reino de Deus\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 12\",\"assignment\":\"Sal. 3:1–4:8\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Naturalidade — O que Filipe fez\",\"number\":4,\"assigned\":\"Dwayne Johnson\"},{\"time\":8,\"title\":\"Naturalidade — Imite Filipe\",\"number\":5,\"assigned\":\"Christian Bale\"}],\"middle_song\":32,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":7,\"conductor\":\"Will Smith\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":61,\"closing_prayer\":\"Tom Cruise\"},{\"week\":\"2024/07\",\"label\":\"13 February\",\"theme\":\"SALMOS 5-7\",\"chairman\":\"Matt Damon\",\"opening_song\":118,\"opening_talk\":{\"time\":10,\"title\":\"Continue leal apesar dos erros de outros\",\"number\":1,\"speaker\":\"Tom Hanks\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 10\",\"assignment\":\"Sal. 7:1-11\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 1 ponto 3\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Anne Hathaway\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 2 ponto 4\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Helen Mirren\"},{\"time\":2,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd lição 4 ponto 5\",\"assigned\":\"Amy Adams\",\"assistant\":\"Emma Stone\"},{\"time\":4,\"title\":\"Explicando suas crenças\",\"number\":7,\"lesson\":\"lmd lição 3 ponto 4\",\"theme\":\"Por que as Testemunhas de Jeová decidem não participar em cerimônias nacionalistas?\",\"assigned\":\"Dwayne Johnson\",\"assistant\":\"Jennifer Lawrence\"}],\"middle_song\":99,\"living_as_christians\":[{\"time\":15,\"title\":\"Relatório anual de serviço\",\"number\":8,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Christian Bale\",\"reader\":\"Brad Pitt\"},\"closing_song\":83,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/08\",\"label\":\"20 February\",\"theme\":\"SALMOS 8-10\",\"chairman\":\"Christian Bale\",\"opening_song\":2,\"opening_talk\":{\"time\":10,\"title\":\"‘Vou louvar-te, ó Jeová’\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Sal. 10:1-18\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 5 ponto 4\",\"assigned\":\"Elizabeth Olsen\",\"assistant\":\"Marlon Brando\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"th lição 7\",\"assigned\":\"Reese Witherspoon\",\"assistant\":\"Emma Watson\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 10\",\"theme\":\"Ajude seu estudante a louvar a Jeová.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":10,\"living_as_christians\":[{\"time\":10,\"title\":\"Como dar testemunho informal de modo natural\",\"number\":7,\"speaker\":\"Denzel Washington\"},{\"time\":5,\"title\":\"Necessidades locais\",\"number\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Tom Hanks\",\"reader\":\"Johnny Depp\"},\"closing_song\":65,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/09\",\"label\":\"27 February\",\"theme\":\"SALMOS 11-15\",\"chairman\":\"Will Smith\",\"opening_song\":139,\"opening_talk\":{\"time\":10,\"title\":\"Imagine-se no novo mundo de paz\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 2\",\"assignment\":\"Sal. 13:1–14:7\",\"reader\":\"George Clooney\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 5 ponto 3\",\"assigned\":\"Saoirse Ronan\",\"assistant\":\"Chris Hemsworth\"},{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 3 ponto 4\",\"assigned\":\"Michelle Pfeiffer\",\"assistant\":\"Halle Berry\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":6,\"lesson\":\"lmd lição 7 ponto 4\",\"assigned\":\"Scarlett Johansson\",\"assistant\":\"Nicole Kidman\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":7,\"lesson\":\"th lição 12\",\"assigned\":\"Julia Roberts\",\"assistant\":\"Meryl Streep\"}],\"middle_song\":8,\"living_as_christians\":[{\"time\":10,\"title\":\"“A sabedoria é melhor do que armas de guerra”\",\"number\":8,\"speaker\":\"Leonardo DiCaprio\"},{\"time\":5,\"title\":\"Campanha da Celebração — Início no sábado, 2 March\",\"number\":9,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":10,\"conductor\":\"Matt Damon\",\"reader\":\"Denzel Washington\"},\"closing_song\":40,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/10\",\"label\":\"4 March\",\"theme\":\"SALMOS 16-17\",\"chairman\":\"Tom Hanks\",\"opening_song\":111,\"opening_talk\":{\"time\":10,\"title\":\"“Jeová, minha Fonte de coisas boas”\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 5\",\"assignment\":\"Sal. 17:1-15\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th lição 11\",\"assigned\":\"Amy Adams\",\"assistant\":\"Viola Davis\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"th lição 9\",\"assigned\":\"Jennifer Aniston\",\"assistant\":\"Jessica Alba\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":6,\"lesson\":\"th lição 2\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":7,\"lesson\":\"th lição 6\",\"assigned\":\"Reese Witherspoon\",\"assistant\":\"Anne Hathaway\"}],\"middle_song\":20,\"living_as_christians\":[{\"time\":15,\"title\":\"Como podemos nos preparar para a Celebração?\",\"number\":8,\"speaker\":\"Tom Hanks\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Will Smith\",\"reader\":\"Tom Cruise\"},\"closing_song\":73,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/11\",\"label\":\"12 March\",\"theme\":\"SALMO 18\",\"chairman\":\"Matt Damon\",\"opening_song\":148,\"opening_talk\":{\"time\":10,\"title\":\"‘Jeová é meu libertador’\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 10\",\"assignment\":\"Sal. 18:20-39\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Bondade — O que Jesus fez\",\"number\":4,\"assigned\":\"Dwayne Johnson\"},{\"time\":8,\"title\":\"Bondade — Imite Jesus\",\"number\":5,\"assigned\":\"Tom Hanks\"}],\"middle_song\":60,\"living_as_christians\":[{\"time\":5,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Leonardo DiCaprio\"},{\"time\":10,\"title\":\"Realizações da Organização March\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Dwayne Johnson\"},\"closing_song\":69,\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/12\",\"label\":\"19 March\",\"theme\":\"SALMOS 19-21\",\"chairman\":\"Will Smith\",\"opening_song\":6,\"opening_talk\":{\"time\":10,\"title\":\"“Os céus declaram a glória de Deus”\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Sal. 19:1-14\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 2 ponto 3\",\"assigned\":\"Meryl Streep\",\"assistant\":\"Michelle Pfeiffer\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 3 ponto 4\",\"assigned\":\"Johnny Depp\",\"assistant\":\"Chris Hemsworth\"},{\"time\":5,\"title\":\"Explicando suas crenças\",\"number\":6,\"lesson\":\"th lição 6\",\"theme\":\"A Ceia do Senhor — Por que as Testemunhas de Jeová celebram de modo diferente?\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":141,\"living_as_christians\":[{\"time\":15,\"title\":\"A Criação Aumenta Nossa Fé\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Christian Bale\"},\"closing_song\":127,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/13\",\"label\":\"26 March\",\"theme\":\"SALMO 22\",\"chairman\":\"Christian Bale\",\"opening_song\":19,\"opening_talk\":{\"time\":10,\"title\":\"A Bíblia predisse detalhes sobre a morte de Jesus\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 2\",\"assignment\":\"Sal. 22:1-19\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 4 ponto 4\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Jennifer Lawrence\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 4 ponto 3\",\"assigned\":\"Emma Stone\",\"assistant\":\"Julianne Moore\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 20\",\"theme\":\"Como as profecias da Bíblia fortalecem a nossa fé?\",\"assigned\":\"Robert Downey Jr.\"}],\"middle_song\":95,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Tom Hanks\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":53,\"closing_prayer\":\"Tom Cruise\"},{\"week\":\"2024/14\",\"label\":\"2 April\",\"theme\":\"SALMOS 23-25\",\"chairman\":\"Tom Hanks\",\"opening_song\":4,\"opening_talk\":{\"time\":10,\"title\":\"“Jeová é o meu Pastor”\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Christian Bale\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 5\",\"assignment\":\"Sal. 23:1–24:10\",\"reader\":\"Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 2 ponto 5\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Harrison Ford\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 9 ponto 3\",\"assigned\":\"Saoirse Ronan\",\"assistant\":\"Nicole Kidman\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":6,\"lesson\":\"lmd lição 11 ponto 3\",\"assigned\":\"Jennifer Aniston\",\"assistant\":\"Jessica Alba\"}],\"middle_song\":54,\"living_as_christians\":[{\"time\":15,\"title\":\"Nós rejeitamos a voz de estranhos\",\"number\":7,\"speaker\":\"Tom Hanks\"}],\"service_talk\":{\"time\":30,\"speaker\":\"Morgan Freeman\",\"theme\":\"Imite os profetas — sua perseverança, lealdade e paciência\"},\"closing_song\":129,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/15\",\"label\":\"9 April\",\"theme\":\"SALMOS 26-28\",\"chairman\":\"Matt Damon\",\"opening_song\":34,\"opening_talk\":{\"time\":10,\"title\":\"Como Davi fortaleceu sua decisão de fazer o que é certo\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Leonardo DiCaprio\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 2\",\"assignment\":\"Sal. 27:1-14\",\"reader\":\"Brad Pitt\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th lição 3\",\"assigned\":\"Robert Downey Jr.\",\"assistant\":\"Helen Mirren\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 9 ponto 3\",\"assigned\":\"Viola Davis\",\"assistant\":\"Julia Roberts\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 13\",\"theme\":\"O meio ambiente será restaurado.\",\"assigned\":\"Johnny Depp\"}],\"middle_song\":128,\"living_as_christians\":[{\"time\":15,\"title\":\"Adolescentes que mantêm a integridade\",\"number\":7,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Will Smith\"},\"closing_song\":38,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/16\",\"label\":\"16 April\",\"theme\":\"SALMOS 29-31\",\"chairman\":\"Christian Bale\",\"opening_song\":108,\"opening_talk\":{\"time\":10,\"title\":\"A disciplina é uma expressão do amor de Deus\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Dwayne Johnson\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 10\",\"assignment\":\"Sal. 31:1-24\",\"reader\":\"Tom Cruise\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":1,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 5 ponto 3\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Viola Davis\"},{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 3 ponto 3\",\"assigned\":\"Amy Adams\",\"assistant\":\"Anne Hathaway\"},{\"time\":3,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd lição 8 ponto 3\",\"assigned\":\"Meryl Streep\",\"assistant\":\"Halle Berry\"},{\"time\":4,\"title\":\"Fazendo discípulos\",\"number\":7,\"lesson\":\"th lição 6\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Michelle Pfeiffer\"}],\"middle_song\":45,\"living_as_christians\":[{\"time\":7,\"title\":\"Por Que Temos Fé . . . no Amor de Deus\",\"number\":8,\"speaker\":\"Denzel Washington\"},{\"time\":8,\"title\":\"Atualizações do Departamento Local de Projeto/Construção — 2024\",\"number\":9,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":10,\"conductor\":\"Matt Damon\",\"reader\":\"Brad Pitt\"},\"closing_song\":99,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/17\",\"label\":\"23 April\",\"theme\":\"SALMOS 32-33\",\"chairman\":\"Will Smith\",\"opening_song\":103,\"opening_talk\":{\"time\":10,\"title\":\"Por que devemos confessar pecados sérios?\",\"number\":1,\"speaker\":\"Dwayne Johnson\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Matt Damon\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Sal. 33:1-22\",\"reader\":\"Robert Downey Jr.\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Humildade — O que Paulo fez\",\"number\":4,\"assigned\":\"Leonardo DiCaprio\"},{\"time\":8,\"title\":\"Humildade — Imite Paulo\",\"number\":5,\"assigned\":\"Denzel Washington\"}],\"middle_song\":74,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":7,\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":39,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/18\",\"label\":\"30 April\",\"theme\":\"SALMOS 34-35\",\"chairman\":\"Tom Hanks|Christian Bale\",\"opening_song\":10,\"opening_talk\":{\"time\":10,\"title\":\"“Vou louvar a Jeová todo o tempo”\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 5\",\"assignment\":\"Sal. 34:1-22\",\"reader\":\"Al Pacino|Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 1 ponto 4\",\"assigned\":\"Hugh Jackman\",\"assistant\":\"Emma Stone\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 2 ponto 4\",\"assigned\":\"Reese Witherspoon|Jennifer Aniston\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Explicando suas crenças\",\"number\":6,\"lesson\":\"th lição 17\",\"assigned\":\"Brad Pitt|Amy Adams\",\"assistant\":\"Chris Hemsworth|Jessica Chastain\"}],\"middle_song\":59,\"living_as_christians\":[{\"time\":15,\"title\":\"Três formas de louvar a Jeová nas reuniões\",\"number\":7,\"speaker\":\"Tom Hanks|Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/19\",\"label\":\"7 May\",\"theme\":\"SALMOS 36-37\",\"message\":\"Não há reunião devido a <p>Assembleia de Circuito de 2024</p> Entre no Descanso de Deus!\"},{\"week\":\"2024/20\",\"label\":\"14 May\",\"theme\":\"SALMOS 38-39\",\"chairman\":\"Matt Damon\",\"opening_song\":125,\"opening_talk\":{\"time\":10,\"title\":\"Livre-se do peso da culpa excessiva\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Brad Pitt\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 2\",\"assignment\":\"Sal. 38:1-22\",\"reader\":\"Harrison Ford|Johnny Depp\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Tato — O que Paulo fez\",\"number\":4,\"assigned\":\"Will Smith\"},{\"time\":8,\"title\":\"Tato — Imite Paulo\",\"number\":5,\"assigned\":\"Dwayne Johnson\"}],\"middle_song\":44,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Leonardo DiCaprio|Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":7,\"conductor\":\"Tom Hanks\",\"reader\":\"Christian Bale|Leonardo DiCaprio\"},\"closing_song\":84,\"closing_prayer\":\"Johnny Depp\"},{\"week\":\"2024/21\",\"label\":\"21 May\",\"theme\":\"SALMOS 40-41\",\"chairman\":\"Christian Bale\",\"opening_song\":102,\"opening_talk\":{\"time\":10,\"title\":\"Por que ajudar outros?\",\"number\":1,\"speaker\":\"Will Smith\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 12\",\"assignment\":\"Sal. 40:1-17\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 2 ponto 3\",\"assigned\":\"Margot Robbie\",\"assistant\":\"Saoirse Ronan\"},{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 3 ponto 5\",\"assigned\":\"Michelle Pfeiffer|Julia Roberts\",\"assistant\":\"Jennifer Lawrence\"},{\"time\":5,\"title\":\"Fazendo discípulos\",\"number\":6,\"lesson\":\"th lição 19\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Nicole Kidman\"}],\"middle_song\":138,\"living_as_christians\":[{\"time\":15,\"title\":\"Faça o bem aos idosos\",\"number\":7,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Matt Damon\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":8,\"closing_prayer\":\"Denzel Washington\"},{\"week\":\"2024/22\",\"label\":\"28 May\",\"theme\":\"SALMOS 42-44\",\"chairman\":\"Will Smith\",\"opening_song\":86,\"opening_talk\":{\"time\":10,\"title\":\"Aproveite bem as instruções que vêm de Jeová\",\"number\":1,\"speaker\":\"Tom Hanks\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Johnny Depp\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Sal. 44:1-26\",\"reader\":\"Chris Hemsworth\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":4,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 5 ponto 5\",\"assigned\":\"Anne Hathaway\",\"assistant\":\"Jennifer Aniston\"},{\"time\":5,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 7 ponto 5\",\"assigned\":\"Julia Roberts|Michelle Pfeiffer\",\"assistant\":\"Amy Adams\"},{\"time\":3,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 2\",\"theme\":\"Todos terão saúde perfeita.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":21,\"living_as_christians\":[{\"time\":15,\"title\":\"Tome decisões sábias sobre trabalho e educação\",\"number\":7,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":8,\"conductor\":\"Christian Bale\",\"reader\":\"Denzel Washington\"},\"closing_song\":47,\"closing_prayer\":\"Dwayne Johnson\"},{\"week\":\"2024/23\",\"label\":\"4 June\",\"theme\":\"SALMOS 45-47\",\"chairman\":\"Tom Hanks\",\"opening_song\":27,\"opening_talk\":{\"time\":10,\"title\":\"Um cântico sobre o casamento de um Rei\",\"number\":1,\"speaker\":\"Matt Damon\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Denzel Washington\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 5\",\"assignment\":\"Sal. 45:1-17\",\"reader\":\"Al Pacino\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 1 ponto 3\",\"assigned\":\"Viola Davis\",\"assistant\":\"Halle Berry\"},{\"time\":5,\"title\":\"Discurso\",\"number\":5,\"lesson\":\"th lição 18\",\"theme\":\"Qual é a explicação do Salmo 46:10?\",\"assigned\":\"Robert Downey Jr.\"},{\"time\":4,\"title\":\"Explicando suas crenças\",\"number\":6,\"lesson\":\"lmd lição 6 ponto 5\",\"assigned\":\"Jessica Chastain\",\"assistant\":\"Jennifer Lawrence\"}],\"middle_song\":131,\"living_as_christians\":[{\"time\":10,\"title\":\"Continue a mostrar amor no seu casamento\",\"number\":7,\"speaker\":\"Tom Hanks\"},{\"time\":5,\"title\":\"Necessidades locais\",\"number\":8,\"speaker\":\"Leonardo DiCaprio\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Will Smith\",\"reader\":\"Johnny Depp\"},\"closing_song\":111,\"closing_prayer\":\"Brad Pitt\"},{\"week\":\"2024/24\",\"label\":\"11 June\",\"theme\":\"SALMOS 48-50\",\"chairman\":\"Matt Damon\",\"opening_song\":126,\"opening_talk\":{\"time\":10,\"title\":\"Pais — Fortaleçam a confiança da sua família na organização de Jeová\",\"number\":1,\"speaker\":\"Christian Bale\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Will Smith\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 11\",\"assignment\":\"Sal. 50:1-23\",\"reader\":\"Harrison Ford\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":7,\"title\":\"Coragem — O que Jesus fez\",\"number\":4,\"assigned\":\"Tom Hanks\"},{\"time\":8,\"title\":\"Coragem — Imite Jesus\",\"number\":5,\"assigned\":\"Denzel Washington\"}],\"middle_song\":73,\"living_as_christians\":[{\"time\":15,\"title\":\"Necessidades locais\",\"number\":6,\"speaker\":\"Matt Damon\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":7,\"conductor\":\"Leonardo DiCaprio\",\"reader\":\"Brad Pitt\"},\"closing_song\":103,\"closing_prayer\":\"Christian Bale\"},{\"week\":\"2024/25\",\"label\":\"18 June\",\"theme\":\"SALMOS 51-53\",\"chairman\":\"Christian Bale\",\"opening_song\":89,\"opening_talk\":{\"time\":10,\"title\":\"O que fazer para não cometer erros graves\",\"number\":1,\"speaker\":\"Denzel Washington\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Brad Pitt\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 12\",\"assignment\":\"Sal. 51:1-19\",\"reader\":\"Robert Downey Jr.\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"lmd lição 7 ponto 3\",\"assigned\":\"Keira Knightley\",\"assistant\":\"Meryl Streep\"},{\"time\":2,\"title\":\"Iniciando conversas\",\"number\":5,\"lesson\":\"lmd lição 4 ponto 4\",\"assigned\":\"Emma Stone\",\"assistant\":\"Reese Witherspoon\"},{\"time\":3,\"title\":\"Cultivando o interesse\",\"number\":6,\"lesson\":\"lmd lição 9 ponto 5\",\"assigned\":\"Julianne Moore\",\"assistant\":\"Amy Adams\"},{\"time\":4,\"title\":\"Fazendo discípulos\",\"number\":7,\"lesson\":\"lmd lição 11 ponto 5\",\"assigned\":\"Jennifer Lawrence\",\"assistant\":\"Saoirse Ronan\"}],\"middle_song\":115,\"living_as_christians\":[{\"time\":15,\"title\":\"O que fazer para corrigir seus erros\",\"number\":8,\"speaker\":\"Christian Bale\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Tom Hanks\",\"reader\":\"Will Smith\"},\"closing_song\":129,\"closing_prayer\":\"Leonardo DiCaprio\"},{\"week\":\"2024/26\",\"label\":\"25 June\",\"theme\":\"SALMOS 54-56\",\"chairman\":\"Will Smith\",\"opening_song\":48,\"opening_talk\":{\"time\":10,\"title\":\"Jeová está do seu lado!\",\"number\":1,\"speaker\":\"Leonardo DiCaprio\"},\"spiritual_gems\":{\"time\":10,\"title\":\"Joias espirituais\",\"number\":2,\"conductor\":\"Tom Hanks\"},\"bible_reading\":{\"time\":4,\"title\":\"Leitura da Bíblia\",\"number\":3,\"lesson\":\"th lição 10\",\"assignment\":\"Sal. 55:1-23\",\"reader\":\"Hugh Jackman\"},\"apply_yourself_to_the_field_ministry\":[{\"time\":3,\"title\":\"Iniciando conversas\",\"number\":4,\"lesson\":\"th lição 11\",\"assigned\":\"Michelle Pfeiffer\",\"assistant\":\"Anne Hathaway\"},{\"time\":4,\"title\":\"Cultivando o interesse\",\"number\":5,\"lesson\":\"lmd lição 7 ponto 4\",\"assigned\":\"Nicole Kidman\",\"assistant\":\"Margot Robbie\"},{\"time\":5,\"title\":\"Discurso\",\"number\":6,\"lesson\":\"th lição 9\",\"theme\":\"Nosso amor por Jesus nos motiva a ser corajosos.\",\"assigned\":\"Brad Pitt\"}],\"middle_song\":\"“Jeová, me dá coragem”\",\"living_as_christians\":[{\"time\":5,\"title\":\"Podemos Ter Alegria Apesar de . . . Espada\",\"number\":7,\"speaker\":\"Will Smith\"},{\"time\":10,\"title\":\"Realizações da Organização June\",\"number\":8,\"speaker\":\"Will Smith\"}],\"congregation_bible_study\":{\"time\":30,\"title\":\"Estudo bíblico de congregação\",\"number\":9,\"conductor\":\"Christian Bale\",\"reader\":\"Robert Downey Jr.\"},\"closing_song\":70,\"closing_prayer\":\"Tom Hanks\"}],\"exceptions\":{\"Matt Damon\":[\"2024/26\",\"2024/27\"]},\"congregation\":\"Congregation XYZ\",\"time\":\"19:15\"}","import { get, set } from 'idb-keyval';\nimport { subtitles } from './refs/subtitles';\nimport { fingerprints } from './refs/fingerprints';\nimport { translation } from './translation';\n\nimport * as Handlebars from 'handlebars';\nimport * as pdfjsLib from 'pdfjs-dist';\n\nimport TableSort from './table.sort';\nimport Engine from './engine.js';\nimport S89 from './S89.js';\n\nimport i18next from 'i18next';\nimport detector from \"i18next-browser-languagedetector\";\nimport registerI18nHelper from 'handlebars-i18next';\n\nregisterI18nHelper(Handlebars, i18next);\n\ni18next.use(detector).init(translation);\n\nconst engine = new Engine();\n\nHandlebars.registerHelper('lowercase', (str) => (str && typeof str === 'string' && str.toLowerCase()) || '');\nHandlebars.registerHelper('publisher', (id) => engine.getPublisher(id).name);\n\ndocument.getS89 = (id) => {\n    if(!document.S89) {\n        bootstrap.showToast({\n            body: i18next.t('S_89_UNLOADED'),\n            toastClass: 'text-bg-danger'\n        });\n        return;\n    }\n\n    const assingment = engine.getAssignment(id);\n\n    if(!subtitles[assingment.assignment].S89) {\n        bootstrap.showToast({\n            body: i18next.t('S_89_UNNEEDED'),\n            toastClass: 'text-bg-danger'\n        });\n        return;\n    }\n\n    document.S89.name = assingment.assigned.name;\n    document.S89.assistant = assingment.partner?.name;\n    document.S89.date = assingment.meeting.label;\n    document.S89.part_number = assingment.number && String(assingment.number);\n    document.S89.main_hall = true;\n\n    switch(document.querySelector('select#output').value) {\n        case 'pdf':\n            document.S89.savePDF();\n            break;\n        case 'png':\n            document.S89.saveImage();\n            break;\n    }\n}\n\nconst filter = () => {\n    const main = document.getElementById('main'); // main table\n    const form = document.getElementById('filters');\n\n    const selectedOnes = Array.from(form.querySelectorAll('input[type=\\'checkbox\\']:checked')).map(e => e.value);\n\n    const url = new URL(window.location);\n    url.searchParams.set('filters', btoa(selectedOnes));\n\n    // Set filters as a param on the URL\n    window.history.pushState({}, '', url.toString());\n\n    // Hide rows according to the threshold range\n    const threshold = +form.querySelector('#threshold').value;\n\n    main.querySelectorAll('tbody tr').forEach((row) => {\n        // Get all td elements and reverse the array\n        const columns = Array.from(row.querySelectorAll('td')).reverse();\n        \n        // Get the value of unassigned weeks from the first column\n        const unassignedWeeks = +columns[0]?.innerText || 0;\n        \n        // Check if any of the badges match the selected ones\n        const badges = row.querySelectorAll('span');\n        const hasSelectedBadge = Array.from(badges).some((badge) => selectedOnes.includes(badge.innerText.trim()));\n        \n        // Determine whether to show or hide the row based on the conditions\n        const shouldShow = unassignedWeeks <= threshold && hasSelectedBadge;\n        row.style.display = shouldShow ? 'table-row' : 'none';\n    });\n\n    // Shows empty tablem message\n    main.querySelector('tfoot tr').style.display = document.querySelectorAll('tr[style*=\\'display: table-row\\']').length ? 'none' : 'table-row';\n}\n\nconst loadFiles = (files) => {\n    Array.from(files).forEach((file) => {\n        if(!['application/json'].includes(file.type))\n            return;\n\n        const r = new FileReader();\n        r.onload = (e) => {\n            const file = e.target.result;\n            const json = new TextDecoder().decode(file);\n            engine.parseBoard(JSON.parse(json).meetings);\n        };\n        r.readAsArrayBuffer(file);\n    });\n\n    location.reload();\n}\n\ndocument.addEventListener('dragstart', () => {\n    console.log('dragstart');\n});\n\ndocument.addEventListener('dragover', (e) => {\n    e.preventDefault();\n});\n\ndocument.addEventListener('drop', (e) => {\n    e.preventDefault();\n    loadFiles(e.dataTransfer.files);\n});\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const data = [];\n\n    engine.lib.queryAll('publishers', {\n        sort: [['name', 'ASC']]\n    }).forEach((publisher) => {\n        publisher.meetings = engine.lib.queryAll('meetings', {\n            sort: [['date', 'ASC']]\n        });\n        const partners = [];\n        publisher.meetings.forEach((meeting, i) => {\n            const assignments = engine.lib.queryAll('assignments', {\n                query: {\n                    meeting: meeting.ID,\n                    assigned: publisher.ID\n                }\n            });\n            if(assignments.length) {\n                assignments.forEach((assingment, ii) => {\n                    if(assingment._assigned)\n                        assignments[ii].assignment = 'S';\n                    else if(assingment.partner)\n                        partners.push({\n                            publisher: engine.getPublisher(assingment.partner).name,\n                            meeting: engine.getMeeting(assingment.meeting)\n                        });\n                });\n                partners.sort((a, b) => a.date - b.date);\n            }\n            engine.lib.queryAll('assignments', {\n                query: {\n                    meeting: meeting.ID,\n                    _assigned: publisher.ID\n                }\n            }).forEach((substitution) => {\n                delete substitution._assigned;\n                assignments.push(substitution);\n            });\n            publisher.meetings[i].assignments = assignments;\n        });\n        publisher.partners = partners.reverse().flatMap(i => `<tr><td>${i.publisher}</td><td>${i.meeting.data.week.replace('-', '/')}</td></tr>`).join('');\n        data.push(publisher);\n    });\n\n    DOMContentLoaded(data);\n});\n\nconst DOMContentLoaded = async (data) => {\n\n    await fetch('table.hbs.html').then((response) => response.text().then((html) => {\n        boot.innerHTML = Handlebars.compile(html)({\n            data,\n            subtitles,\n            meetings: engine.lib.queryAll('meetings', {\n                sort: [['date', 'ASC']]\n            })\n        });\n    }));\n\n    if(data.length === 0) {\n\n        const dropArea = document.querySelector('.drag-area');\n        const dragText = document.querySelector('.header');\n        const input = dropArea.querySelector('input');\n\n        dropArea.querySelector('.button').onclick = async () => {\n            if ('showDirectoryPicker' in window) {\n                window.showDirectoryPicker().then(async (dirHandle) => {\n                    for await (const entry of dirHandle.values())\n                        entry.getFile().then(async (file) => {\n                            if (!['application/json'].includes(file.type))\n                                return;\n                            file.text().then((json) => {\n                                const parsed = JSON.parse(json);\n                                if(parsed.meetings)\n                                    engine.parseBoard(parsed.meetings);\n                                ['congregation', 'time'].forEach((entry) => {\n                                    if(parsed[entry])\n                                        engine.setInfo(entry, parsed[entry])\n                                });\n                            });\n                        })\n                    set('dir', dirHandle).then(() => location.reload());\n                });\n                return;\n            }\n            input.click();\n        };\n\n        input.addEventListener('change', function () {\n            dropArea.classList.add('active');\n\n            loadFiles(this.files);\n        });\n\n        dropArea.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            dropArea.classList.add('active');\n            dragText.textContent = 'Release to Upload';\n        });\n\n        dropArea.addEventListener('dragleave', () => {\n            dropArea.classList.remove('active');\n            dragText.textContent = 'Drag & Drop';\n        });\n\n        dropArea.addEventListener('drop', (e) => {\n            e.preventDefault();\n\n            loadFiles(e.dataTransfer.files);\n        });\n\n        dropArea.querySelector('span#sample').addEventListener('click', () => {\n            const samples = require('../samples.json');\n            engine.parseBoard(samples.meetings);\n            ['congregation', 'time'].forEach((entry) => engine.setInfo(entry, samples[entry]));\n            window.document.dispatchEvent(new Event('DOMContentLoaded', {\n                bubbles: true,\n                cancelable: true\n            }));\n        });\n\n        return;\n    }\n\n    boot.scrollTo(document.body.getElementsByTagName('table').item(0).scrollWidth , 0);\n\n    await fetch('filter.hbs.html').then((response) => response.text().then((html) => {\n        boot.insertAdjacentHTML('beforeend', Handlebars.compile(html)({\n            subtitles\n        }));\n    }));\n\n    document.querySelector('i.fa-print').addEventListener('click', (() => {\n        const ids = Array.from(document.querySelectorAll('table input:checked')).map(input => input.value);\n        const params = new URLSearchParams(ids.map(d => ['date', d]));\n        window.open(`board.html?${params.toString()}`, '_blank');\n    }));\n\n    // table\n    document.querySelectorAll('label.sort, i.fa-sort').forEach(label => label.addEventListener('click', () => {\n        const table = label.closest('table');\n        const tbody = table.querySelector('tbody');\n        const columnHeader = label.closest('th');\n        const columnIndex = Array.from(label.closest('tr').children).indexOf(columnHeader);\n        Array.from(tbody.querySelectorAll('tr')).sort(TableSort(columnIndex, columnHeader.asc = !columnHeader.asc)).forEach(tr => tbody.appendChild(tr));\n    }));\n\n    document.querySelectorAll('#main tbody tr').forEach((row) => {\n        let columns = Array.from(row.querySelectorAll('td')).reverse();\n        let count = 0;\n        columns.every((column) => {\n            if(column.querySelector('span'))\n                return false;\n            column.innerText = '-';\n            count++;\n            return true;\n        });\n        columns[0].innerText = count - 1;\n        row.querySelector('i.hide').addEventListener('click', () => row.style.display = 'none');\n        row.querySelector('i.copy').addEventListener('click', () => {\n            navigator.clipboard.writeText(row.querySelector('th').innerText.trim()).then(() => bootstrap.showToast({\n                body: i18next.t('COPIED'),\n                toastClass: 'text-bg-info'\n            }));\n        });\n    });\n\n    // clear data\n    document.querySelector('button#clear').addEventListener('click', () => {\n        if(confirm(i18next.t('SURE'))) {\n            localStorage.clear();\n            location.reload();\n        }\n    });\n\n    // filter\n    const filters = (new URL(window.location)).searchParams.get('filters');\n\n    const checkboxes = document.querySelectorAll('#filters input[type=\\'checkbox\\']');\n\n    checkboxes.forEach(checkboxInput => {\n        if(typeof filters === 'string')\n            checkboxInput.checked = atob(filters).split(',').includes(checkboxInput.value);\n        checkboxInput.addEventListener('change', filter);\n    });\n\n    document.getElementById('threshold').addEventListener('input', filter);\n\n    const language = document.getElementById('language');\n    language.addEventListener('change', (e) => {\n        const modal = document.getElementById('filters');\n        modal.addEventListener('hidden.bs.modal', () => {\n            DOMContentLoaded(data);\n        });\n        i18next.changeLanguage(e.target.value)\n            .then(() => bootstrap.Modal.getInstance(modal).hide());\n    });\n    language.value = i18next.language;\n\n    for (const button of document.querySelectorAll('button#none, button#all'))\n        button.addEventListener('click', (e) => {\n            for (const checkbox of checkboxes)\n                checkbox.checked = (e.target.id || e.target.parentElement.id) === 'all';\n            filter();\n        });\n\n    filter();\n\n    // draggable\n    let ignore = false;\n\n    window.addEventListener ('click', (event) => {\n        if (ignore) event.stopPropagation();\n        ignore = false;\n    }, true);\n\n    document.getElementById('draggable').addEventListener('mousedown', function(e) {\n        let offsetX = e.clientX - parseInt(window.getComputedStyle(this).left);\n        let offsetY = e.clientY - parseInt(window.getComputedStyle(this).top);\n        function mouseMoveHandler(e) {\n            Object.assign(document.getElementById('draggable').style, {\n                top: (e.clientY - offsetY) + 'px',\n                left: (e.clientX - offsetX) + 'px',\n                right: 'unset',\n                bottom: 'unset'\n            });\n            ignore = true;\n        }\n        const reset = () => {\n            window.removeEventListener('mousemove', mouseMoveHandler);\n            window.removeEventListener('mouseup', reset);\n        }\n        window.addEventListener('mousemove', mouseMoveHandler);\n        window.addEventListener('mouseup', reset);\n    });\n\n    // tooltip\n    ([].slice.call(document.querySelectorAll('[data-bs-toggle=\\'tooltip\\']'))).map((tooltipTriggerEl) => {\n        const { allowList } = bootstrap.Tooltip.Default;\n        allowList.table = [];\n        allowList.thead = [];\n        allowList.tbody = [];\n        allowList.tr = [];\n        allowList.td = [];\n\n        return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n\n    // hover\n    document.querySelectorAll('span[helper]').forEach((data) => {\n        data.addEventListener('mouseover', () => {\n            const helper = data.getAttribute('helper');\n            document.querySelectorAll('tbody th').forEach((row) => {\n                if(row.innerText == helper) {\n                    const index = Array.from(data.closest('tr').childNodes).indexOf(data.parentNode);\n                    const cols = Array.from(row.parentNode.childNodes);\n                    cols[index].id = 'red';\n                }\n            });\n            this.addEventListener('mouseout', () => {\n                document.getElementById('red')?.removeAttribute('id');\n            });\n        });\n    });\n\n    // printing\n    document.querySelectorAll('#main thead input[type=\\'checkbox\\']').forEach(checkbox => {\n        checkbox.addEventListener('change', () => {\n            const selected = Array.from(document.querySelectorAll('#main thead input[type=\\'checkbox\\']:checked')).map(element => element.value);\n            document.querySelector('i.fa-print').style.display = selected.length > 0 ? 'inline' : 'none';\n        });\n    });\n\n    document.querySelector('input#S89[type=file]').addEventListener('change', function () {\n        const self = this;\n        const reader = new FileReader();\n        reader.onload = function () {\n            pdfjsLib.GlobalWorkerOptions.workerSrc = '//cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.worker.min.js';\n            pdfjsLib.getDocument({\n                data: new Uint8Array(this.result)\n            }).promise.then(doc => {\n                if(!fingerprints.some(r => r.every((value, index) => doc.fingerprints[index] == value))) {\n                    bootstrap.showToast({\n                        body: i18next.t('S_89_CHECK'),\n                        toastClass: 'text-bg-danger'\n                    });\n                    self.value = '';\n                    return;\n                }\n                document.S89 = new S89(doc);\n            });\n        }\n        reader.readAsArrayBuffer(this.files[0]);\n    }, false);\n\n    document.getElementById('permissions').addEventListener('click', () => {\n        get('dir').then(async (handle) => {\n            if ((await handle.requestPermission({ mode: 'read' })) === 'granted') // Prompt user for permission\n                location.reload();\n        });\n    });\n\n    get('dir').then((dirHandle) => {\n        if(!dirHandle)\n            return;\n\n        // https://github.com/whatwg/fs/blob/main/proposals/FileSystemObserver.md\n        hasPermission(dirHandle).then((hasPermission) => {\n            if(!hasPermission) {\n                document.getElementById('permissions').setAttribute('style', 'display: block;'); return;\n            }\n            const observer = new FileSystemObserver((records) => {\n                for (const record of records) {\n                    if (record.type !== 'modified')\n                        return;\n\n                    record.changedHandle.getFile().then(async (file) => {\n                        if (!['application/json'].includes(file.type))\n                            return;\n\n                        file.text()\n                            .then((json) => {\n                                const parsed = JSON.parse(json);\n                                if(parsed.meetings)\n                                    engine.parseBoard(parsed.meetings);\n                                ['congregation', 'time'].forEach((entry) => {\n                                    if(parsed[entry])\n                                        engine.setInfo(entry, parsed[entry])\n                                });\n                            }).then(() => set('dir', dirHandle).then(() => location.reload()));\n                    });\n                }\n            });\n            observer.observe(dirHandle, {\n                recursive: false\n            });\n            console.log(observer);\n        });\n    });\n};\n\nconst hasPermission = async (handle) => {\n    if ((await handle.queryPermission()) === 'granted')  return true; // Permission already granted\n    return false; // Permission denied\n}\n","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction promisifyRequest(request) {\n  return new Promise(function (resolve, reject) {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = function () {\n      return resolve(request.result);\n    }; // @ts-ignore - file size hacks\n\n\n    request.onabort = request.onerror = function () {\n      return reject(request.error);\n    };\n  });\n}\n\nfunction createStore(dbName, storeName) {\n  var request = indexedDB.open(dbName);\n\n  request.onupgradeneeded = function () {\n    return request.result.createObjectStore(storeName);\n  };\n\n  var dbp = promisifyRequest(request);\n  return function (txMode, callback) {\n    return dbp.then(function (db) {\n      return callback(db.transaction(storeName, txMode).objectStore(storeName));\n    });\n  };\n}\n\nvar defaultGetStoreFunc;\n\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction get(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return promisifyRequest(store.get(key));\n  });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction set(key, value) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction setMany(entries) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    entries.forEach(function (entry) {\n      return store.put(entry[1], entry[0]);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction getMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return Promise.all(keys.map(function (key) {\n      return promisifyRequest(store.get(key));\n    }));\n  });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction update(key, updater) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    return (// Need to create the promise manually.\n      // If I try to chain promises, the transaction closes in browsers\n      // that use a promise polyfill (IE10/11).\n      new Promise(function (resolve, reject) {\n        store.get(key).onsuccess = function () {\n          try {\n            store.put(updater(this.result), key);\n            resolve(promisifyRequest(store.transaction));\n          } catch (err) {\n            reject(err);\n          }\n        };\n      })\n    );\n  });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction del(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction delMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    keys.forEach(function (key) {\n      return store.delete(key);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction clear() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\n\nfunction eachCursor(store, callback) {\n  store.openCursor().onsuccess = function () {\n    if (!this.result) return;\n    callback(this.result);\n    this.result.continue();\n  };\n\n  return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction keys() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    if (store.getAllKeys) {\n      return promisifyRequest(store.getAllKeys());\n    }\n\n    var items = [];\n    return eachCursor(store, function (cursor) {\n      return items.push(cursor.key);\n    }).then(function () {\n      return items;\n    });\n  });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction values() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    if (store.getAll) {\n      return promisifyRequest(store.getAll());\n    }\n\n    var items = [];\n    return eachCursor(store, function (cursor) {\n      return items.push(cursor.value);\n    }).then(function () {\n      return items;\n    });\n  });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction entries() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    // (although, hopefully we'll get a simpler path some day)\n    if (store.getAll && store.getAllKeys) {\n      return Promise.all([promisifyRequest(store.getAllKeys()), promisifyRequest(store.getAll())]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            keys = _ref2[0],\n            values = _ref2[1];\n\n        return keys.map(function (key, i) {\n          return [key, values[i]];\n        });\n      });\n    }\n\n    var items = [];\n    return customStore('readonly', function (store) {\n      return eachCursor(store, function (cursor) {\n        return items.push([cursor.key, cursor.value]);\n      }).then(function () {\n        return items;\n      });\n    });\n  });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","exports.subtitles = {\n    S: {\n        color: 'IndianRed',\n        S89: false\n    },\n    CH: {\n        color: 'Pink',\n        S89: false\n    },\n    SG: {\n        color: 'Violet',\n        S89: false\n    },\n    CP: {\n        color: 'Salmon',\n        S89: false\n    },\n    OT: {\n        color: 'Aquamarine',\n        S89: false\n    },\n    BR: {\n        color: 'Tomato',\n        S89: true\n    },\n    CSC: {\n        color: 'Orange',\n        S89: false\n    },\n    CSR: {\n        color: 'Gold',\n        S89: false\n    },\n    SA: {\n        color: 'SkyBlue',\n        S89: true\n    },\n    AA: {\n        color: 'LightGreen',\n        S89: false\n    },\n    TA: {\n        color: 'CadetBlue',\n        S89: true\n    },\n    DIS: {\n        color: 'RosyBrown',\n        S89: false\n    },\n    LAC: {\n        color: 'MistyRose',\n        S89: false\n    }\n}\n","exports.fingerprints = [\n    [\"c13d94a8148dbeb4e0dee06f1844234a\", \"30adb6e10994a04c581f8f05689681fb\"], // Dutch                [S-89_O]\n    [\"a1d39d1a9dde564f60f0d79f6f723cfc\", \"fc8ec86bdc56847d9361c7226942175f\"], // English              [S-89_E]\n    [\"aacd852415010fed91252a89b62afbf5\", \"e26e6acd0b08074704c91488c21e4cde\"], // Amharic              [S-89_AM]\n    [\"1c3f79bea49cd098749574956c1a1ac0\", \"fbe3f2cf5f151042a3c57e0bf01b615f\"], // Arabic               [S-89_A]\n    [\"868f7e114f20dc64542befbd4e4cc9a2\", \"5a5555a14d460cc37901a978f40c8693\"], // Bulgarian            [S-89_BL]\n    [\"0c5898655ceb602dc33de27476c8f3ca\", \"7416fd668b473aa9c5c05f6724d59e08\"], // Chinese (simplified) [S-89_CHS]\n    [\"5e6ea361c5c3b3628fff9cef287792a8\", \"b633d5e2e47845f73e11cd6b3e3e0d56\"], // French               [S-89_F]\n    [\"df11fb5e7c61cbe05fd819fe53485ad1\", \"1c50d2ab39bb26633a537063dacc6a77\"], // Italian              [S-89_I]\n    [\"2360d0c5a8370e3dba62cdbbaf2c1fa4\", \"36b2b7b6106b7b4bb7193d1d45a12b6c\"], // Japanese             [S-89_J]\n    [\"6f56ffe5952946cded97ee17282652ff\", \"b3d27d8ffab807942ef764240186987d\"], // Kabuverdianu         [S-89_KBV]\n    [\"d0ec2f9e3dc2632f3303372f9fa2b99b\", \"3ef4d480cec90943295fddbae9ed3c47\"], // Papiamento           [S-89_PA]\n    [\"c58700290c03e8289fa0ffd1b0f74a66\", \"034648aeb02f8bd3ced52076b0c2ebf7\"], // Persian              [S-89_PR]\n    // Pidgin (West Africa)\n    [\"b9bc16eb3f5bb90b8c3f77b6ddb8b9a7\", \"1399c4627a61137d31314c07db2e468b\"], // Polish               [S-89_P]\n    [\"3d28d86db52314fb788a0082658f4bc0\", \"a961062e236951caa0a4aef36d52f58d\"], // Portuguese           [S-89_T]\n    [\"d716a99f61efb08f8ed1008ebf2e866d\", \"af8aea8d52dea2838da440248e686951\"], // Punjabi              [S-89_PJ]\n    [\"45130ca2c426cfccce546f1b73daaa0c\", \"fa3c69ccb8a72e83d498138f4bbafca6\"], // Romanian             [S-89_M]\n    [\"07f8df6c5a31a3fd95cbca5472db9ef9\", \"8dea773036e312f9bd1db9dcd2cd8a55\"], // Russian              [S-89_U]\n    [\"e23614e53cc93e8b882e733ad7e26f57\", \"6d312561ddc1105fc4499c9ad24c922f\"], // Spanish              [S-89_S]\n    [\"a0c25d3ee03cc61de9e3f24a6e56f4ef\", \"da8dc23d8de846af96d44d4ae53d5baa\"], // Sranantongo          [S-89_SR]\n    [\"55ec3e24d7a6fcc85df25265d0c4fb3a\", \"af1df685760ba6b08a8adc629ef88271\"], // Tigrinya             [S-89_TI]\n    [\"ae7c31219c687e3a14e8f4bbce907a9d\", \"6575de530864ba199a75d1a67c86bab6\"], // Twi                  [S-89_TW]\n];\n","const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;\n\nconst comparer = (idx, asc) => (a, b) => {\n    const valueA = getCellValue(asc ? a : b, idx);\n    const valueB = getCellValue(asc ? b : a, idx);\n\n    // Handle empty values or non-numeric values\n    if (valueA === '' || valueB === '' || isNaN(valueA) || isNaN(valueB))\n        return valueA.toString().localeCompare(valueB);\n\n    // Numeric comparison\n    return valueA - valueB;\n};\n\nexport default function TableSort(idx, asc) {\n    return comparer(idx, asc);\n}\n","import localStorageDB from 'localstoragedb';\nimport { workbook as w } from './refs/workbook';\n\nexport default class Engine {\n    constructor() {\n        const self = this;\n        const database = {\n            info: ['label', 'value'],\n            meetings: ['label', 'date', 'data'],\n            publishers: ['name'],\n            assignments: ['meeting', 'assignment', 'type', 'number', 'assigned', 'partner', '_assigned', '_partner']\n        }\n\n        self.lib = new localStorageDB('library', localStorage);\n\n        Object.keys(database).forEach((key) => {\n            if(!self.lib.tableExists(key))\n                self.lib.createTable(key, database[key]);\n        });\n    }\n    getPublisher(ID) {\n        const publisher = this.lib.queryAll('publishers', {\n            query: { ID }\n        }).find(Boolean);\n        return publisher;\n    }\n    getMeeting(ID) {\n        const meeting = this.lib.queryAll('meetings', {\n            query: { ID }\n        }).find(Boolean);\n        return meeting;\n    }\n    getAssignment(ID) {\n        const assignment = this.lib.queryAll('assignments', {\n            query: { ID }\n        }).find(Boolean);\n        assignment.assigned = this.getPublisher(assignment.assigned);\n        assignment.partner = this.getPublisher(assignment.partner);\n        assignment.meeting = this.getMeeting(assignment.meeting);\n        return assignment;\n    }\n    parseBoard(meetings) {\n        const self = this;\n\n        meetings.forEach((m) => { // meeting\n            const date = m.week.replace(/\\D/g, '');\n            const meeting = self.lib.insertOrUpdate('meetings', { date }, {\n                date,\n                data: m,\n                label: m.label,\n            });\n\n            if (m.message)\n                return\n\n            const meetingId = meeting[meeting.length - 1] || meeting;\n\n            self.lib.deleteRows('assignments', { meeting: meetingId });\n\n            const data = {\n                SA: [],\n                AA: [],\n                DIS: [],\n                CH: { name: m[w.CH] },\n                CP: { name: m[w.CP] },\n                BR: { name: m[w.BR].reader },\n                OT: { name: m[w.OT].speaker },\n                SG: { name: Object.prototype.hasOwnProperty.call(m[w.SG], 'conductor') ? m[w.SG].conductor : m[w.SG] },\n                LAC: m[w.LAC].map(p => ({ name: p.speaker }))\n            };\n\n            if(Object.prototype.hasOwnProperty.call(m, w.CBS)) {\n                data.CSC = { name: m[w.CBS].conductor };\n                if(Object.prototype.hasOwnProperty.call(m[w.CBS], 'reader'))\n                    data.CSR = { name: m[w.CBS].reader };\n            }\n\n            if(Object.prototype.hasOwnProperty.call(m, w.TA))\n                data.TA = { name: m[w.TA].student };\n\n            [w.IC, w.RV, w.BS].forEach((t) => {\n                if (Object.prototype.hasOwnProperty.call(m, t) && Object.prototype.hasOwnProperty.call(m[t], 'student'))\n                    data.SA.push({\n                        name: m[t].student,\n                        partner: Object.prototype.hasOwnProperty.call(m[t], 'assistant') && m[t].assistant,\n                        type: t,\n                    });\n                if (Object.prototype.hasOwnProperty.call(m, t) && Object.prototype.hasOwnProperty.call(m[t], 'assistant'))\n                    data.AA.push({\n                        name: m[t].assistant,\n                        partner: Object.prototype.hasOwnProperty.call(m[t], 'student') && m[t].student,\n                        type: t\n                    });\n            });\n\n            if(m[w.AYF])\n                m[w.AYF].forEach((v) => {\n                    if(Object.prototype.hasOwnProperty.call(v, 'theme'))\n                        data.TA = {\n                            name: v.assigned,\n                            number: v.number\n                        };\n                    else if(Object.prototype.hasOwnProperty.call(v, 'assistant')) {\n                        data.SA.push({\n                            name: v.assigned,\n                            partner: v.assistant,\n                            type: v.title,\n                            number: v.number\n                        });\n                        data.AA.push({\n                            name: v.assistant,\n                            partner: v.assigned,\n                            type: v.title\n                        });\n                    }\n                    else\n                        data.DIS.push({\n                            name: v.assigned\n                        });\n                });\n\n            Object.keys(data).forEach((key) =>  {\n                if(Array.isArray(data[key]))\n                    data[key].forEach((info) => {\n                        this.setAssignment(key, meetingId, info);\n                    });\n                else\n                    this.setAssignment(key, meetingId, data[key]);\n            });\n        });\n\n        self.lib.commit();\n    }\n    setAssignment(assignment, meetingId, info) {\n        const assigned = this.setPublisher(info.name);\n        const partner = this.setPublisher(info.partner);\n        this.lib.insert('assignments', {\n            meeting: meetingId,\n            assignment,\n            type: info.type,\n            number: info.number,\n            assigned: assigned[0],\n            _assigned: assigned[1],\n            partner: partner[0],\n            _partner: partner[1],\n        });\n    }\n    setInfo(label, value) {\n        this.lib.insert('info', {\n            label,\n            value\n        });\n        this.lib.commit();\n    }\n    setPublisher(name) {\n        const self = this;\n        const publishers = [];\n        if (name)\n            String(name).split('|').forEach((name) => {\n                const publisher = self.lib.insertOrUpdate('publishers', { name }, { name });\n                publishers.push(publisher[publisher.length - 1] || publisher)\n            });\n        return publishers;\n    }\n}\n","exports.workbook = {\n    IC: 'initial_call',\n    RV: 'return_visit',\n    BS: 'bible_study',\n    TA: 'talk',\n    CH: 'chairman',\n    BR: 'bible_reading',\n    CP: 'closing_prayer',\n    OT: 'opening_talk',\n    SG: 'spiritual_gems',\n    LAC: 'living_as_christians',\n    CBS: 'congregation_bible_study',\n    AYF: 'apply_yourself_to_the_field_ministry'\n}\n","import * as pdfjsLib from 'pdfjs-dist';\nimport { fields } from './refs/S89';\n\nexport default class S89 {\n    constructor(doc) {\n        this.id = 900;\n        this.name = '';\n        this.assistant = '';\n        this.date = '';\n        this.part_number = '';\n        this.main_hall = false;\n        this.auxiliary_classroom_1 = false;\n        this.auxiliary_classroom_2 = false;\n        this.annotations = {};\n        doc.getPage(1).then(content => content.getAnnotations()).then(annotations => {\n            annotations.forEach(annotation => {\n                this.annotations[annotation.fieldName] = annotation.id;\n            });\n        })\n        this.doc = doc;\n    }\n    save() {\n        Object.entries(fields).forEach(([name, info]) => {\n            const id = this.annotations[`${this.id}_${info.id}_${info.type}`];\n            this.doc.annotationStorage.setValue(id, {\n                value: this[name]\n            });\n        });\n        return this.doc.saveDocument();\n    }\n    savePDF() {\n        const self = this;\n        // Fix for PDF readers lacking the appearance dictionary (NeedAppearances)\n        this.save().then(byteArray => PDFLib.PDFDocument.load(byteArray).then(pdf => {\n            pdf.save().then(file => require('downloadjs')(file, `${self.date} - ${self.name}.pdf`, 'application/pdf'));\n        }));\n    }\n    saveImage() {\n        const self = this;\n        self.save().then(data => {\n            pdfjsLib.getDocument({\n                data,\n                standardFontDataUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/standard_fonts/'\n            }).promise.then(doc => {\n                doc.getPage(1).then(page => {\n                    const viewport = page.getViewport({\n                        scale: 1.5\n                    });\n                    const canvas = document.createElement('canvas');\n                    canvas.width = viewport.width;\n                    canvas.height = viewport.height;\n                    page.render({\n                        viewport,\n                        canvasContext: canvas.getContext('2d')\n                    }).promise.then(() => require('downloadjs')(canvas.toDataURL(), `${self.date} - ${self.name}.png`, 'image/png'));\n                });\n            });\n        });\n    }\n}\n","const TEXT_TYPE = \"Text_SanSerif\";\nconst CHECKBOX_TYPE = \"CheckBox\";\n\nconst fieldDefinitions = [\n    { name: \"name\", type: TEXT_TYPE },\n    { name: \"assistant\", type: TEXT_TYPE },\n    { name: \"date\", type: TEXT_TYPE },\n    { name: \"part_number\", type: TEXT_TYPE },\n    { name: \"main_hall\", type: CHECKBOX_TYPE },\n    { name: \"auxiliary_classroom_1\", type: CHECKBOX_TYPE },\n    { name: \"auxiliary_classroom_2\", type: CHECKBOX_TYPE }\n];\n\nexports.fields = fieldDefinitions.reduce((acc, { name, type }, i) => {\n    acc[name] = { id: i + 1, type };\n    return acc;\n}, {});"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$816683f8c32a91e9$var$defaultGetStoreFunc","$373a7b56970c90d1$export$860a3ce6efe86b24","$0509828d5a985d17$export$1e1c9db6a3f1bad8","$1d2538027fc10fe0$export$787bbd770b7ea722","$3ac92057f5c0347d$export$4dbdc8f16fed8a34","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$816683f8c32a91e9$export$b327150396135fe7","request","Promise","resolve","reject","oncomplete","onsuccess","result","onabort","onerror","error","$816683f8c32a91e9$export$f51a9068ac82ea43","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","callback","then","db","transaction","objectStore","$816683f8c32a91e9$var$defaultGetStore","$816683f8c32a91e9$export$3988ae62b71be9a3","key","customStore","arguments","length","undefined","store","$816683f8c32a91e9$export$adaa4cf7ef1b65be","value","put","$hPtJY","$6ZWSX","$04552c275ef79ab8$require$Buffer","Buffer","root","factory","pdfjsLib","__webpack_modules__","__unused_webpack_module","VerbosityLevel","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","RenderingIntentFlag","PromiseCapability","PermissionFlag","PasswordResponses","PasswordException","PageActionEventType","OPS","MissingPDFException","MAX_IMAGE_SIZE_TO_CACHE","LINE_FACTOR","LINE_DESCENT_FACTOR","InvalidPDFException","ImageKind","IDENTITY_MATRIX","FormatError","FeatureTest","FONT_IDENTITY_MATRIX","DocumentActionEventType","CMapCompressionType","BaseException","BASELINE_FACTOR","AnnotationType","AnnotationReplyType","AnnotationPrefix","AnnotationMode","AnnotationFlag","AnnotationFieldFlag","AnnotationEditorType","AnnotationEditorPrefix","AnnotationEditorParamsType","AnnotationBorderStyleType","AnnotationActionEventType","AbortException","assert","bytesToString","createValidAbsoluteUrl","getModificationDate","getUuid","getVerbosityLevel","info","isArrayBuffer","isArrayEqual","isNodeJS","normalizeUnicode","objectFromMap","objectSize","setVerbosityLevel","shadow","string32","stringToBytes","stringToPDFString","stringToUTF8String","unreachable","utf8StringToString","warn","versions","nw","electron","type","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","NONE","FREETEXT","STAMP","INK","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","ERRORS","WARNINGS","INFOS","BINARY","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","level","Number","isInteger","msg","console","log","cond","_isValidProtocol","url","protocol","baseUrl","options","addDefaultProtocol","startsWith","dots","match","tryConvertEncoding","absoluteUrl","URL","obj","prop","nonSerializable","writable","message","name","constructor","prototype","details","status","bytes","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","str","Uint8Array","charCodeAt","keys","map","create","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","isOffscreenCanvasSupported","OffscreenCanvas","platform","navigator","isWin","isMac","includes","isCSSRoundSupported","CSS","supports","hexNumbers","Array","toString","padStart","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","c","first","second","sqrt","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","t","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","abs","j","mt","jlen","PDFStringTranslateTable","encoding","decoder","TextDecoder","fatal","decode","ex","ii","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","byteLength","arr1","arr2","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","settled","promise","data","reason","NormalizeRegex","NormalizationMap","Map","replaceAll","_","normalize","crypto","randomUUID","buf","getRandomValues","floor","random","__w_pdfjs_require__","RenderTask","PDFWorkerUtil","PDFWorker","PDFPageProxy","PDFDocumentProxy","PDFDocumentLoadingTask","PDFDataRangeTransport","LoopbackPort","DefaultStandardFontDataFactory","DefaultFilterFactory","DefaultCanvasFactory","DefaultCMapReaderFactory","_displaySvg","SVGGraphics","build","getDocument","version","_util","_annotation_storage","_display_utils","_font_loader","_displayNode_utils","_canvas","_worker_options","_message_handler","_metadata","_optional_content_config","_transport_stream","_displayFetch_stream","_displayNetwork","_displayNode_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DELAYED_CLEANUP_TIMEOUT","NodeCanvasFactory","DOMCanvasFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","NodeFilterFactory","DOMFilterFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","src","range","task","docId","getUrlProp","getDataProp","httpHeaders","withCredentials","password","rangeTransport","rangeChunkSize","worker","docBaseUrl","isDataScheme","cMapUrl","cMapPacked","CMapReaderFactory","standardFontDataUrl","StandardFontDataFactory","ignoreErrors","stopAtErrors","maxImageSize","canvasMaxAreaInBytes","disableFontFace","fontExtraProperties","enableXfa","ownerDocument","document","disableRange","disableStream","disableAutoFetch","pdfBug","NaN","useSystemFonts","useWorkerFetch","isValidFetchUrl","baseURI","canvasFactory","filterFactory","styleElement","transportFactory","cMapReaderFactory","isCompressed","standardFontDataFactory","workerParams","port","GlobalWorkerOptions","workerPort","fromPort","_worker","fetchDocParams","apiVersion","evaluatorOptions","transportParams","destroyed","all","_fetchDocument","networkStream","params","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","PDFNodeStream","PDFFetchStream","PDFNetworkStream","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","source","sendWithPromise","val","href","window","location","isNaN","onPassword","onProgress","destroy","_pendingDestroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","pdfInfo","_pdfInfo","deprecated","getJSActions","js","jsArr","annotationStorage","numPages","fingerprints","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","saveDocument","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","getFieldObjects","hasJSActions","getCalculationOrderIds","delayedCleanupTimeout","pendingCleanup","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","_maybeCleanupAfterRender","_intentStates","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","renderingIntent","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","background","optionalContentConfigPromise","annotationCanvasMap","pageColors","printAnnotationStorage","time","abortDelayedCleanup","intentState","cacheKey","streamReaderCancelTimeout","clearTimeout","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","separateAnnots","_pumpOperatorList","complete","renderTasks","delete","internalRenderTask","tryCleanup","capability","_abortOperatorList","timeEnd","InternalRenderTask","useRequestAnimationFrame","Set","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","includeMarkedContent","disableNormalization","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","highWaterMark","size","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","success","delayed","setTimeout","_startRenderPage","_renderPageChunk","operatorListChunk","annotationStorageSerializable","transfers","streamReader","RenderingCancelledException","delay","extraDelay","curCacheKey","curIntentState","stats","listeners","deferred","postMessage","transfer","event","structuredClone","addEventListener","removeEventListener","terminate","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","pdfjsFilePath","currentScript","replace","isSameOrigin","otherUrl","base","origin","other","createCDNWrapper","wrapper","createObjectURL","Blob","workerPorts","_port","_webWorker","_messageHandler","has","WeakMap","_initializeFromPort","_initialize","on","_mainThreadWorkerMessageHandler","workerSrc","Worker","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","cachedPort","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","methodPromises","pageCache","pagePromises","passwordCapability","fontLoader","FontLoader","_params","destroyCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","cacheSimpleMethod","cachedPromise","AnnotationStorage","isOpList","SerializableEmpty","PrintAnnotationStorage","serializable","hash","page","hasOwnProperty","resetModified","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","ArrayBuffer","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","inspectFont","FontInspector","enabled","font","fontAdded","FontFaceObject","bind","finally","imageData","pageProxy","bitmap","width","height","fetch","filename","num","gen","results","OptionalContentConfig","metadata","Metadata","ensureObj","objId","onContinue","form","canvas","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","StepperManager","stepper","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","_editor","_murmurhash","freeze","modified","storage","onSetModified","onResetModified","onAnnotationEditor","getValue","defaultValue","getRawValue","remove","AnnotationEditor","setValue","entry","entries","setModified","_type","getAll","setAll","print","MurmurHash3_64","context","hasBitmap","serialized","serialize","update","JSON","stringify","hexdigest","parent","clone","_tools","altText","altTextDecorative","altTextButton","altTextTooltip","altTextTooltipTimeout","keepAspectRatio","resizersDiv","boundFocusin","focusin","boundFocusout","focusout","hasBeenClicked","isEditing","isInEditMode","_initialOptions","_uiManager","_focusEventsAllowed","_l10nPromise","isDraggable","zIndex","_zIndex","_borderLineWidth","_colorManager","ColorManager","SMALL_EDITOR_SIZE","parameters","div","uiManager","annotationElementId","_willKeepAspectRatio","isCentered","_structTreeParentId","rawDims","pageWidth","pageHeight","pageX","pageY","pageRotation","viewParameters","pageDimensions","pageTranslation","parentDimensions","x","y","isAttachedToDOM","deleted","editorType","getPrototypeOf","_defaultLineColor","getHexCode","deleteAnnotationElement","editor","fakeEditor","FakeEditor","getNextId","addToAnnotationStorage","initialize","l10n","strings","style","getComputedStyle","documentElement","parseFloat","getPropertyValue","updateDefaultParams","_value","defaultPropertiesToUpdate","isHandlingMimeForPasting","mime","paste","item","propertiesToUpdate","_isDraggable","classList","toggle","center","parentRotation","fixAndSetPosition","addCommands","currentLayer","setInBackground","setInForeground","setParent","setSelected","target","relatedTarget","closest","preventDefault","isMultipleSelection","commitOrRemove","isEmpty","commit","setAt","tx","ty","screenToPageTranslation","translate","translateInPage","scrollIntoView","block","drag","parentWidth","parentHeight","getBoundingClientRect","findNewParent","bx","by","getBaseTranslation","left","toFixed","top","moveInDOM","rotatePoint","angle","pageTranslationToScreen","getRotationMatrix","parentScale","realScale","scaledWidth","scaledHeight","round","setDims","fixDims","widthPercent","endsWith","heightPercent","getInitialTranslation","createResizers","createElement","classes","append","resizerPointerdown","noContextMenu","prepend","button","ctrlKey","boundResizerPointermove","resizerPointermove","savedDraggable","pointerMoveOptions","passive","capture","savedX","savedY","savedWidth","savedHeight","savedParentCursor","cursor","savedCursor","pointerUpCallback","newX","newY","newWidth","newHeight","cmd","undo","mustExec","getPoint","getOpposite","minWidth","MIN_SIZE","minHeight","rotationMatrix","transf","invRotationMatrix","invTransf","isDiagonal","isHorizontal","w","h","point","oppositePoint","transfOppositePoint","oppositeX","oppositeY","ratioX","ratioY","deltaX","deltaY","movementX","movementY","oldDiag","hypot","addAltTextButton","className","setAttribute","tabIndex","stopPropagation","editAltText","setAltTextButtonState","PERCENT","tooltip","DELAY_TO_SHOW_TOOLTIP","_eventBus","dispatch","subtype","action","innerText","parentNode","getClientDimensions","altTextData","decorative","maxWidth","maxHeight","bindEvents","pointerdown","setUpDragSession","pointerMoveCallback","isSelected","dragSelectedEditors","endDragSession","shiftKey","metaKey","toggleSelected","moveEditorInDOM","_setParentAndPosition","changeParent","getRect","shiftX","shiftY","getRectInCurrentCoords","onceAdded","enableEditMode","disableEditMode","shouldGetKeyboardEvents","needsToBeRebuilt","rebuild","isForCopying","deserialize","removeEditor","isResizable","makeResizable","select","unselect","contains","activeElement","focus","updateParams","disableEditing","hidden","enableEditing","enterInEditMode","contentDiv","setActiveEditor","setAspectRatio","aspectRatio","KeyboardManager","CommandManager","AnnotationEditorUIManager","opacityToHex","element","names","opacity","IdManager","getId","ImageManager","baseId","cache","_isSVGFittingCanvas","svg","ctx","getContext","image","Image","drawImage","getImageData","rawData","refCounter","isSvg","response","ok","statusText","blob","file","mustRemoveAspectRatioPromise","fileReader","FileReader","imageElement","imagePromise","onload","svgUrl","readAsDataURL","createImageBitmap","getFromFile","lastModified","getFromUrl","getFromId","getSvgUrl","deleteId","isValidId","commands","locked","maxSize","position","overwriteIfSameType","keepUndo","next","splice","redo","hasSomethingToUndo","hasSomethingToRedo","callbacks","allKeys","isMacKey","split","at","altKey","exec","self","bubbles","args","checker","_colorsMapping","_colors","colors","getColorValues","convert","color","rgb","getRGB","matchMedia","matches","RGB","every","activeEditor","allEditors","allLayers","altTextManager","commandManager","currentPageIndex","deletedAnnotationsElementIds","draggingEditors","editorTypes","editorsToRescale","idManager","isEnabled","isWaiting","lastActiveElement","mode","selectedEditors","boundBlur","blur","boundFocus","boundCopy","copy","boundCut","cut","boundPaste","boundKeydown","keydown","boundOnEditingAction","onEditingAction","boundOnPageChanging","onPageChanging","boundOnScaleChanging","onScaleChanging","boundOnRotationChanging","onRotationChanging","previousStates","hasSelectedEditor","translation","translationTimeoutId","container","viewer","TRANSLATE_SMALL","TRANSLATE_BIG","_keyboardManager","proto","arrowChecker","hasSomethingToControl","small","big","selectAll","unselectAll","translateSelectedEditors","eventBus","pdfDocument","_on","PixelsPerInch","PDF_TO_CSS_UNITS","layer","removeKeyboardManager","removeFocusManager","_off","hcmFilter","addHCMFilter","foreground","direction","focusMainContainer","findParent","layerX","layerY","disableUserSelect","addShouldRescale","removeShouldRescale","pagesRotation","addFocusManager","hasSelection","lastEditor","once","addKeyboardManager","addCopyPasteListeners","removeCopyPasteListeners","addEditListeners","removeEditListeners","editors","clipboardData","setData","parse","isArray","newEditors","deserializedEditor","addEditorToLayer","selectEditors","getActive","dispatchUpdateStates","some","dispatchUpdateUI","setEditingState","registerEditorTypes","types","getLayer","addLayer","enable","disable","removeLayer","updateMode","editId","disableAll","enableAll","updateToolbar","addNewEditor","enableWaiting","mustWait","disableClick","enableClick","getEditors","getEditor","addEditor","addDeletedAnnotationElement","isDeletedAnnotationElement","removeDeletedAnnotationElement","addOrRebuild","ed","noCommit","totalX","totalY","TIME_TO_WAIT","savedPageIndex","newPageIndex","mustBeAddedInUndoStack","move","isActive","getMode","imageManager","pdfDateStringRegex","PDFDateString","DOMSVGFactory","getCurrentTransform","getCurrentTransformInverse","getFilenameFromUrl","getPdfFilenameFromUrl","getXfaPageViewport","isPdfFile","setLayerDimensions","_base_factory","SVG_NS","PDF","BaseFilterFactory","_cache","_defs","hcmKey","hcmUrl","hcmHighlightFilter","hcmHighlightKey","hcmHighlightUrl","defs","visibility","contain","createElementNS","body","addFilter","maps","tableR","tableG","tableB","mapR","mapG","mapB","bufferR","bufferG","bufferB","filter","createFilter","addTransferMapConversion","fgColor","bgColor","fgRGB","bgRGB","table","addGrayConversion","getSteps","start","arr","addHighlightHCMFilter","newFgColor","newBgColor","fgGray","bgGray","newFgRGB","newBgRGB","fg","bg","step","newStart","newStep","prev","k","keepHCM","feColorMatrix","appendFeFunc","feComponentTransfer","func","feFunc","rTable","gTable","bTable","BaseCanvasFactory","_document","_createCanvas","fetchData","asTypedArray","arrayBuffer","text","XMLHttpRequest","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","BaseSVGFactory","_createSVG","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","centerX","centerY","convertToViewportPoint","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","test","onlyStripPath","lastIndexOf","defaultFilename","reFilename","splitURI","reURI","suggestedFilename","started","times","now","outBuf","longest","padEnd","removeScriptElement","script","head","toDateObject","input","RegExp","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","xfaPage","attributes","colorRGB","span","computedColor","f","getTransform","invertSelf","mustFlip","mustRotate","useRound","widthStr","heightStr","reset","canvasAndContext","skipDimensions","SEED","MASK_HIGH","MASK_LOW","seed","h1","h2","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","systemFonts","nativeFontFaces","loadingRequests","loadTestFontId","addNativeFontFace","nativeFontFace","fonts","removeNativeFontFace","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","loadSystemFont","loadedName","isFontLoadingAPISupported","fontFace","FontFace","load","baseFontName","attached","missingFile","systemFontInfo","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","supported","userAgent","otherRequest","shift","_loadTestFont","testFont","atob","int32","offset","spliceString","insert","chunk1","called","isFontReady","fillText","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","fontFamily","translatedData","compiledGlyphs","_inspectFont","cssFontInfo","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","fs","readFile","Canvas","createCanvas","_pattern_helper","_image_utils","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","cp1x","cp1y","cp2x","cp2y","CachedCanvases","getCanvas","canvasEntry","drawImageAtIntegerCoords","srcImg","srcX","srcY","srcW","srcH","destX","destY","destW","destH","rTlX","rTlY","rWidth","rHeight","sign","scaleX","scaleY","compileType3Glyph","imgData","j0","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","points","lineSize","pos","elem","mask","count","sum","steps","Int32Array","path","Path2D","p0","pp","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateRectMinMax","updateScalingPathMinMax","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","isEmptyClip","Infinity","getClippedPathBoundingBox","putBinaryImageData","thisChunkHeight","elemsInThisChunk","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","convertBlackAndWhiteToRGBA","nonBlackColor","copyCtxState","sourceCtx","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","chunkSize","ceil","PIXELS_TO_PROCESS","row","chunkHeight","composeSMask","smask","layerBox","layerWidth","layerHeight","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","markedContentStack","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedScaleForStroking","_cachedGetSinglePixelWidth","_cachedBitmapsMap","getObject","fallback","savedFillStyle","fillRect","transparentCanvas","compositeCtx","executionStartIdx","continueCallback","fnId","argsArrayLen","chunkOperations","endTime","breakIt","depObjId","objsPool","restoreInitialState","inSMaskMode","HTMLCanvasElement","drawFilter","hcmFilterId","savedFilter","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","clearRect","_createMaskCanvas","scaled","maskCanvas","isPatternFill","currentTransform","mainKey","cachedImage","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","imageSmoothingEnabled","inverse","getPattern","limit","dashArray","dashPhase","flatness","states","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","old","pop","ops","startX","startY","isScalingMatrix","minMaxForBezier","xw","yh","consumePath","rescaleAndStroke","needRestore","paths","pendingTextPaths","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","typeface","fallbackName","bold","italic","browserFontSize","rise","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","getSinglePixelWidth","isInvalidPDFjsFont","chars","glyph","unicode","scaledX","scaledY","restoreNeeded","isSpace","fontChar","accent","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","isTextInvisible","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","matrix","getShadingPattern","SHADING","inv","bbox","group","currentCtx","isolated","knockout","canvasBounds","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","applyTransferMapsToCanvas","applyTransferMapsToBitmap","imgToPaint","HTMLElement","tag","properties","visible","isVisible","isContentVisible","absDet","normX","normY","getScaleForStroking","scaledLineWidth","scaledXLineWidth","scaledYLineWidth","baseArea","saveRestore","dashes","op","applyBoundingBox","region","BaseShadingPattern","RadialAxialShadingPattern","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","createLinearGradient","createRadialGradient","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","tmp","xa","car","cag","cab","xb","cbr","cbg","cbb","coords","rowSize","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","convertToRGBA","grayToRGBA","convertRGBToRGBA","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","len32","src32","s1","s2","s3","jj","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","processStreamMessage","cbSourceName","cbTargetName","createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","streamSink","isCancelled","lastDesiredSize","sinkCapability","streamController","deleteStreamController","allSettled","metadataMap","parsedData","getRaw","INTERNAL","Symbol","OptionalContentGroup","_setVisible","internal","cachedGetHash","groups","initialHash","order","creator","baseState","off","getHash","evaluateVisibilityExpression","array","operator","state","expression","policy","ids","setVisibility","hasInitialVisibility","getOrder","getGroups","getGroup","pdfDataRangeTransport","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_progressiveDataLength","_loaded","_removeRangeReader","indexOf","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_network_utils","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","getArrayBuffer","isHttp","_rangeRequestReaders","PDFFetchStreamReader","PDFFetchStreamRangeReader","_reader","_withCredentials","_headersCapability","_disableRange","_rangeChunkSize","_abortController","AbortController","_headers","validateResponseStatus","createResponseStatusError","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_readCapability","_content_disposition","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","fixupEncoding","rfc2047decode","rfc5987decode","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","NetworkManager","currXhrId","pendingRequests","requestRange","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","fileUriRegex","parseUrl","sourceUrl","parsedUrl","host","isFsUrl","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_readableStream","_error","_setReadableStream","BaseRangeReader","createRequestOptions","auth","hostname","handleResponse","statusCode","_request","http","https","_httpHeaders","Range","lstat","stat","createReadStream","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","len","adler32","deflateSync","literals","deflateSyncUncompressed","node","from","output","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","acos","clipCount","maskCount","shadingCount","svgFactory","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","gradient","shadingId","colorStops","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","walk","shouldBuildText","child","TextLayerRenderTask","renderTextLayer","updateTextLayer","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","getCtx","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","hasText","hasEOL","_textDivs","_transform","atan2","fontName","fontHeight","fontAscent","_isOffscreenCanvasSupported","sin","cos","scaleFactorStr","divStyle","_container","_rootContainer","_pageWidth","_pageHeight","dir","_fontInspectorEnabled","dataset","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_isReadableStream","_layoutText","layout","prevFontSize","prevFontFamily","_canceled","textDivs","textDivsLength","textContentSource","textContentItemsStr","_textContentSource","_textContentItemsStr","_layoutTextParams","_processItems","styleCache","br","_render","textContentStream","scaleFactor","mustRescale","AnnotationEditorLayer","_freetext","_ink","_stamp","accessibilityManager","allowClick","annotationLayer","boundPointerup","pointerup","boundPointerdown","hadPointerDown","isCleaningUp","isDisabling","_initialized","FreeTextEditor","InkEditor","StampEditor","addInkEditorIfNeeded","isCommitting","createAndAddNewEditor","pointerEvents","annotationElementIds","editable","getEditableAnnotations","hide","hiddenAnnotationIds","getEditableAnnotation","show","attach","detach","removePointerInTextLayer","moveElementInDOM","addUndoableEditor","createNewEditor","pasteEditor","getCenterPoint","annotationType","annotationEditorType","tlX","tlY","brX","innerWidth","brY","innerHeight","_annotation_layer","boundEditorDivBlur","editorDivBlur","boundEditorDivFocus","editorDivFocus","boundEditorDivInput","editorDivInput","boundEditorDivKeydown","editorDivKeydown","content","editorDivId","_freeTextDefaultContent","_internalPadding","_defaultColor","_defaultFontSize","_translateEmpty","updateFontSize","updateColor","setFontsize","editorDiv","setEditorDimensions","savedFontsize","savedColor","overlayDiv","contentEditable","removeAttribute","preventScroll","cheatInitialRect","extractText","divs","savedDisplay","display","savedText","newText","trimEnd","setText","setContent","dblclick","baseX","baseY","posX","posY","replaceChildren","line","createTextNode","FreeTextAnnotationElement","defaultAppearanceData","fontColor","textPosition","padding","structTreeParentId","hasElementChanged","StampAnnotationElement","InkAnnotationElement","AnnotationLayer","_scripting_utils","_displayL10n_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","SignatureWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","hasBorder","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","enableScripting","_fieldObjects","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","titleObj","contentsObj","richText","hasPopupData","popupRef","noRotate","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorArray","ColorConverters","noView","noPrint","userName","title","readonly","disabled","required","_setRequired","textColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","svgBuffer","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","trX","trY","blX","blY","rectWidth","rectHeight","backgroundImage","_createPopup","popup","modificationDate","parentRect","elements","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","querySelector","getElementsByName","getAttribute","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isTooltipOnly","link","isBound","addLinkAttributes","newWindow","_bindNamedAction","attachment","_bindAttachment","setOCGState","bindSetOCGState","_bindLink","Action","_bindJSAction","resetForm","_bindResetFormAction","setInternalLink","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","openOrDownloadData","executeSetOCGState","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","allIds","dispatchEvent","Event","alt","l10nId","l10nArgs","alternativeText","showElementAndHideCanvas","previousSibling","nodeName","_getKeyModifier","_setEventListener","elementData","baseName","eventName","valueGetter","modifier","focused","_setEventListeners","getter","Blur","Focus","_setBackgroundColor","_setTextStyle","computedFontSize","TEXT_ALIGNMENT","roundToOneDecimal","multiLine","numberOfLines","lineHeight","textAlignment","textAlign","isRequired","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","maxLen","charLimit","fieldFormattedValues","formattedValue","comb","userValue","lastCommittedValue","commitKey","doNotScroll","overflowY","overflowX","readOnly","maxLength","defaultFieldValue","blurListener","scrollLeft","selRange","setSelectionRange","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","Keystroke","inputType","change","combWidth","fieldWidth","letterSpacing","verticalAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","linkElement","lastChild","selectElement","addAnEmptyEntry","combo","option","multiSelect","multiple","selected","optionElement","displayValue","removeEmptyEntry","noneOptionElement","isExport","selectedIndex","selectedValues","getItems","multipleSelection","index","findIndex","selectChild","before","indices","changeEx","keyDown","PopupElement","elementIds","dateTimePromise","boundKeyDown","boundHide","boundShow","boundToggle","pinned","wasVisible","dateObject","toLocaleDateString","toLocaleTimeString","trigger","flatMap","baseColor","outlineColor","BACKGROUND_ENLIGHT","header","localized","XfaLayer","xfaHtml","html","contents","_formatContents","useParentRect","normalizedRect","HORIZONTAL_SPACE_AFTER_ANNOTATION","popupLeft","popupTop","lines","lineSpan","lineCoordinates","square","circle","polyline","containerClassName","svgElementName","coordinate","vertices","polylines","inkList","inkLists","download","editableAnnotations","NullL10n","appendElement","contentElement","firstChild","annotations","popupToElements","elementParams","noHTML","isPopupAnnotation","rendered","setAnnotationCanvasMap","replaceWith","makeColorComp","scaleAndClamp","CMYK_G","G_CMYK","G_RGB","G_rgb","G_HTML","G","RGB_G","RGB_rgb","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","CMYK_rgb","CMYK_HTML","components","RGB_CMYK","getL10nFallback","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","rendering_error","annotation_date_string","printing_not_supported","printing_not_ready","web_fonts_disabled","free_text2_default_content","editor_free_text2_aria_label","editor_ink2_aria_label","editor_ink_canvas_aria_label","editor_alt_text_button_label","editor_alt_text_edit_button_label","editor_alt_text_decorative_tooltip","formatL10nValue","print_progress_percent","getLanguage","getDirection","setupStorage","xfaOn","xfaOff","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","querySelectorAll","baseHeight","baseWidth","boundCanvasPointermove","canvasPointermove","boundCanvasPointerleave","canvasPointerleave","boundCanvasPointerup","canvasPointerup","boundCanvasPointerdown","canvasPointerdown","currentPath2D","hasSomethingToDraw","isCanvasInitialized","observer","realWidth","realHeight","requestFrameCallback","_defaultOpacity","_defaultThickness","thickness","bezierPath2D","allRawPaths","currentPath","translationX","translationY","updateThickness","updateOpacity","savedThickness","fitToContent","redraw","savedOpacity","createObserver","setCanvasDims","disconnect","setDimensions","getInitialBBox","setStroke","startDrawing","drawPoints","draw","lastX","lastY","path2D","makeBezierCurve","lastPoint","stopDrawing","bezier","generateBezierPoints","xy","lastPoints","prevX","prevY","bezierPoints","control1","control2","updateTransform","ResizeObserver","contentRect","observe","roundedWidth","roundedHeight","setScaleFactor","getPadding","scaleFactorW","scaleFactorH","buildPath2D","toPDFCoordinates","fromPDFCoordinates","serializePaths","p10","p11","p20","p21","p30","p31","p40","p41","getBbox","xMin","xMax","yMin","yMax","firstTime","prevTranslationX","prevTranslationY","unscaledPadding","bitmapId","bitmapPromise","bitmapUrl","bitmapFile","resizeTimeoutId","hasBeenAddedInUndoStack","supportedTypes","supportedTypesStr","getAsFile","getBitmapFetched","fromId","getBitmapDone","getBitmap","accept","files","click","MAX_RATIO","factor","drawBitmap","scaleBitmap","bitmapWidth","bitmapHeight","prevWidth","prevHeight","offscreen","transferToImageBitmap","serializeBitmap","toUrl","toDataURL","accessibilityData","stamps","area","prevData","__webpack_module_cache__","moduleId","cachedModule","module1","__webpack_exports__","_annotation_editor_layer","_api","_text_layer","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","run","$cfae44f0dfdf62c0$var$Item","$cfae44f0dfdf62c0$var$noop","nextTick","browser","env","argv","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","$51861dfc7ca9d588$export$a143d493d941bafc","$51861dfc7ca9d588$export$f99ded8fe4b79145","$kuxul","$9NvM5","$51861dfc7ca9d588$var$customInspectSymbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$K_MAX_LENGTH","$51861dfc7ca9d588$var$typedArraySupport","foo","setPrototypeOf","$51861dfc7ca9d588$var$createBuffer","RangeError","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","$51861dfc7ca9d588$var$fromString","isView","$51861dfc7ca9d588$var$fromArrayView","$51861dfc7ca9d588$var$isInstance","SharedArrayBuffer","$51861dfc7ca9d588$var$fromArrayBuffer","valueOf","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","$51861dfc7ca9d588$var$alloc","$51861dfc7ca9d588$var$checked","string","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","$51861dfc7ca9d588$var$fromArrayLike","arrayView","byteOffset","isBuffer","$51861dfc7ca9d588$var$numberIsNaN","mustMatch","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","$51861dfc7ca9d588$var$bidirectionalIndexOf","$51861dfc7ca9d588$var$arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","$51861dfc7ca9d588$var$hexWrite","remaining","strLen","parsed","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","$51861dfc7ca9d588$var$utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","poolSize","alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","$51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH","codePoints","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","lo","BigInt","hi","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","$51861dfc7ca9d588$var$addNumericalSeparator","$51861dfc7ca9d588$var$checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","$51861dfc7ca9d588$var$INVALID_BASE64_RE","$51861dfc7ca9d588$var$base64clean","units","leadSurrogate","byteArray","toByteArray","dst","alphabet","i16","$51861dfc7ca9d588$var$BufferBigIntNotDefined","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","$eeb0961446aae8e3$var$toByteArray","$eeb0961446aae8e3$var$fromByteArray","$eeb0961446aae8e3$var$lookup","$eeb0961446aae8e3$var$revLookup","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","$eeb0961446aae8e3$var$getLens","b64","validLen","placeHoldersLen","$eeb0961446aae8e3$var$_byteLength","lens","curByte","$eeb0961446aae8e3$var$tripletToBase64","$eeb0961446aae8e3$var$encodeChunk","uint8","extraBytes","maxChunkLength","len2","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","define","amd","strFileName","strMimeType","defaultMime","mimeType","payload","anchor","myBlob","MozBlob","WebKitBlob","fileName","ajax","msSaveBlob","dataUrlToBlob","saver","tempUiArr","mx","strUrl","binData","uiArr","winMode","innerHTML","appendChild","removeChild","revokeObjectURL","confirm","S","S89","CH","SG","CP","OT","BR","CSC","CSR","SA","AA","TA","DIS","LAC","$aNCw4","$fs37Y","$n3TJI","$c0ba74aa19152d66$var$getCellValue","tr","idx","$c0ba74aa19152d66$var$comparer","asc","valueA","valueB","localeCompare","$c0ba74aa19152d66$export$2e2bcd8739ae039","$eQgFz","IC","RV","BS","CBS","AYF","$89b002d01c4b60dc$export$2e2bcd8739ae039","database","meetings","publishers","assignments","lib","localStorage","forEach","tableExists","createTable","getPublisher","ID","queryAll","query","find","Boolean","getMeeting","getAssignment","assignment","assigned","partner","meeting","parseBoard","week","insertOrUpdate","label","meetingId","deleteRows","speaker","conductor","student","assistant","number","setAssignment","setPublisher","_assigned","_partner","setInfo","publisher","$3ac92057f5c0347d$var$TEXT_TYPE","$3ac92057f5c0347d$var$CHECKBOX_TYPE","$3ac92057f5c0347d$var$fieldDefinitions","reduce","acc","$6e7379fc1ed49ac8$export$2e2bcd8739ae039","doc","part_number","main_hall","auxiliary_classroom_1","auxiliary_classroom_2","annotation","savePDF","PDFLib","PDFDocument","pdf","saveImage","$8RAYl","$8fx7t","$gLe41","use","$35da740d59af89ba$var$engine","registerHelper","getS89","bootstrap","showToast","toastClass","assingment","$35da740d59af89ba$var$filter","main","getElementById","selectedOnes","searchParams","history","pushState","threshold","columns","reverse","unassignedWeeks","hasSelectedBadge","badge","shouldShow","$35da740d59af89ba$var$loadFiles","json","readAsArrayBuffer","reload","dataTransfer","sort","partners","substitution","$35da740d59af89ba$var$DOMContentLoaded","boot","compile","subtitles","dropArea","dragText","showDirectoryPicker","dirHandle","getFile","samples","cancelable","scrollTo","scrollWidth","insertAdjacentHTML","URLSearchParams","tbody","columnHeader","columnIndex","column","clipboard","writeText","filters","checkboxes","checkboxInput","language","modal","changeLanguage","Modal","getInstance","parentElement","ignore","clientX","clientY","mouseMoveHandler","right","bottom","tooltipTriggerEl","allowList","Tooltip","Default","thead","td","helper","handle","requestPermission","$35da740d59af89ba$var$hasPermission","hasPermission","FileSystemObserver","records","record","changedHandle","recursive","queryPermission","process","BaseExceptionClosure","xt","yt","sx","sy","require","workerIdPromise","networkStreamPromise","createPDFNetworkStream","__non_webpack_require__","cleanupSuccessful","hasChanged","completeRequest","chunk2","COMMENT_OFFSET","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxResetTransform","ctxRotate","drawOutline","charWidth","UNKNOWN","ok_response_on_range_request","pngLength","editables","currentActive","eventProxy","pdfjsVersion","pdfjsBuild"],"version":3,"file":"index.cca7613c.js.map"}